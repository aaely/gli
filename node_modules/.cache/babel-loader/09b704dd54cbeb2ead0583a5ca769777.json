{"ast":null,"code":"import _regeneratorRuntime from \"/home/aely/gli/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aely/gli/src/Components/ModTestPlan.js\";\nimport React, { Component } from 'react';\nimport { Form, FormGroup, Label, Input, Table } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport htmlToDraft from 'html-to-draftjs';\nimport draftToHtml from 'draftjs-to-html';\nimport { FaEdit, FaFileUpload } from 'react-icons/fa';\nvar apiUrl = process.env.API_URL || 'http://192.168.0.248:1337';\nvar strapi = new Strapi(apiUrl);\n\nvar ModTestPlan =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModTestPlan, _Component);\n\n  function ModTestPlan(props) {\n    var _this;\n\n    _classCallCheck(this, ModTestPlan);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModTestPlan).call(this, props));\n\n    _this.onEditorStateChange = function (editorState) {\n      _this.setState({\n        editorState: editorState,\n        html: draftToHtml(convertToRaw(editorState.getCurrentContent())).replace(/[\\n]/g, '')\n      });\n    };\n\n    _this.handleNameChange = function (event) {\n      _this.setState({\n        name: event.target.value\n      });\n    };\n\n    _this.handleDateChange = function (event) {\n      _this.setState({\n        testingdate: event.target.value\n      });\n    };\n\n    _this.handleVersionChange = function (event) {\n      _this.setState({\n        previousversion: event.target.value\n      });\n    };\n\n    var html = '<p>Testing 1234 ðŸ˜€</p>';\n    var contentBlock = htmlToDraft(html);\n\n    if (contentBlock) {\n      var contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      var editorState = EditorState.createWithContent(contentState);\n      _this.state = {\n        loadingItems: true,\n        submission: '',\n        jurisdictions: [],\n        vendor: '',\n        vendorId: '',\n        mods: [],\n        application: [],\n        versions: [],\n        html: '',\n        editorState: editorState,\n        rewrite: '',\n        results: '',\n        name: '',\n        testingdate: Date,\n        previousversion: ''\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(ModTestPlan, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, getMods, ModsList, i, j;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return strapi.request('POST', '/graphql', {\n                  data: {\n                    query: \"query {\\n                    submission (id : \\\"\".concat(this.props.match.params.submissionId, \"\\\") {\\n                        file\\n                        received\\n                        processed\\n                        begin\\n                        vendor {\\n                        _id\\n                        name\\n                        logo {\\n                          _id\\n                          url\\n                        }\\n                      }\\n                        jurisdictions {\\n                        _id\\n                        jurisdiction\\n                      }\\n                      urns {\\n                          _id\\n                          url\\n                      }\\n                      application {\\n                          _id\\n                          name\\n                      }\\n                      versions {\\n                          _id\\n                          version\\n                          mods {\\n                            _id\\n                            modnumber\\n                            title\\n                            trackerid\\n                            moddetails\\n                            status\\n                            jira\\n                            teststeps\\n                            sidenotes\\n                            rewrite\\n                            results\\n                            versionaffected\\n                            testingzip {\\n                                _id\\n                                url\\n                            }\\n                            employee {\\n                                _id\\n                                fname\\n                                lname\\n                            }\\n                        }\\n                      }\\n                  }\\n                }\")\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n                getMods = response.data.submission.versions.sort(function (a, b) {\n                  return b.version.localeCompare(a.version);\n                }).map(function (a) {\n                  return a.mods.sort(function (a, b) {\n                    return a.modnumber - b.modnumber;\n                  });\n                });\n                ModsList = [];\n\n                for (i = 0; i < getMods.length; i++) {\n                  j = 0;\n\n                  while (j < getMods[i].length) {\n                    ModsList.push(getMods[i][j]);\n                    j++;\n                  }\n                }\n\n                this.setState({\n                  submission: response.data.submission.file,\n                  loadingItems: false,\n                  mods: ModsList,\n                  application: response.data.submission.application,\n                  versions: response.data.submission.versions[0].version,\n                  modsCount: ModsList.length,\n                  previousversion: response.data.submission.application.name\n                });\n                console.log(this.state);\n                _context.next = 15;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                this.setState({\n                  loadingItems: false\n                });\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 11]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"renderInitialTable\",\n    value: function renderInitialTable() {\n      var _this$state = this.state,\n          submission = _this$state.submission,\n          versions = _this$state.versions,\n          application = _this$state.application,\n          mods = _this$state.mods,\n          name = _this$state.name,\n          previousversion = _this$state.previousversion;\n      return React.createElement(Table, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, React.createElement(\"tbody\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 142\n        },\n        __self: this\n      }, React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144\n        },\n        __self: this\n      }, \"Engineer Name:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          textAlign: 'center'\n        },\n        type: \"text\",\n        id: \"name\",\n        name: \"name\",\n        value: name,\n        onChange: this.handleNameChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Date:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 153\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          textAlign: 'center'\n        },\n        type: \"date\",\n        id: \"testingdate\",\n        name: \"testingdate\",\n        onChange: this.handleDateChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 154\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 157\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"File Number:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 161\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 162\n        },\n        __self: this\n      }, submission))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 165\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 166\n        },\n        __self: this\n      }, \"Current Software Version:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 169\n        },\n        __self: this\n      }, React.createElement(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170\n        },\n        __self: this\n      }, application.name, \" \", versions))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 173\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 174\n        },\n        __self: this\n      }, \"Previous Software Version:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 177\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          textAlign: 'center'\n        },\n        type: \"text\",\n        name: \"previousversion\",\n        id: \"previousversion\",\n        value: previousversion,\n        onChange: this.handleVersionChange.bind(this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 178\n        },\n        __self: this\n      })), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 180\n        },\n        __self: this\n      }, \"Previous File #:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 183\n        },\n        __self: this\n      }, React.createElement(Input, {\n        style: {\n          textAlign: 'center'\n        },\n        type: \"text\",\n        name: \"previousfile\",\n        id: \"previousfile\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 184\n        },\n        __self: this\n      }))), React.createElement(\"tr\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 188\n        },\n        __self: this\n      }, \"Total # of Modifications:\"), React.createElement(\"td\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 191\n        },\n        __self: this\n      }, mods.length))));\n    }\n  }, {\n    key: \"renderModTestPlan\",\n    value: function renderModTestPlan() {\n      var _this$state2 = this.state,\n          mods = _this$state2.mods,\n          name = _this$state2.name,\n          testingdate = _this$state2.testingdate;\n      return mods.map(function (x, index) {\n        return React.createElement(\"div\", {\n          className: \"card\",\n          key: x._id,\n          style: {\n            marginTop: '30px',\n            marginBottom: '30px',\n            backgroundColor: '#ccc',\n            display: 'block'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/updatemod/\".concat(x._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, React.createElement(FaEdit, {\n          size: 30,\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 208\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl, \"/admin/plugins/content-manager/mods/\").concat(x._id, \"?redirectUrl=/plugins/content-manager/mods?_limit=10&_page=1&_sort=_id&_q=abc&source=content-manager\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 212\n          },\n          __self: this\n        }, React.createElement(FaFileUpload, {\n          size: 30,\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213\n          },\n          __self: this\n        }))), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 219\n          },\n          __self: this\n        }, \"Mod Number: \", index + 1), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, \"Tracker ID: \", x.trackerid), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221\n          },\n          __self: this\n        }, \"Version Affected: \", x.versionaffected), x.status === 'Revoked' && React.createElement(\"p\", {\n          style: {\n            borderRadius: '10px',\n            borderStyle: 'solid',\n            borderWidth: '3px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 224\n          },\n          __self: this\n        }, \"Revoked:\"), React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          check: true,\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        }, React.createElement(Label, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 227\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"radio\",\n          name: \"radio1\",\n          defaultChecked: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 228\n          },\n          __self: this\n        }), ' ', \"Yes\")), React.createElement(FormGroup, {\n          check: true,\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(Label, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"radio\",\n          name: \"radio1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 234\n          },\n          __self: this\n        }), ' ', \"No\")))), x.status !== 'Revoked' && React.createElement(\"p\", {\n          style: {\n            borderRadius: '10px',\n            borderStyle: 'solid',\n            borderWidth: '3px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, \"Revoked:\"), React.createElement(Form, {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 244\n          },\n          __self: this\n        }, React.createElement(FormGroup, {\n          check: true,\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245\n          },\n          __self: this\n        }, React.createElement(Label, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"radio\",\n          name: \"radio1\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }), ' ', \"Yes\")), React.createElement(FormGroup, {\n          check: true,\n          inline: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 251\n          },\n          __self: this\n        }, React.createElement(Label, {\n          check: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, React.createElement(Input, {\n          type: \"radio\",\n          name: \"radio1\",\n          defaultChecked: true,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }), ' ', \"No\")))), x.jira != null && x.jira !== '' && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: x.jira,\n          style: {\n            backgroundColor: 'black',\n            color: 'red'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, \"Jira\")), React.createElement(\"p\", {\n          style: {\n            borderRadius: '10px',\n            borderStyle: 'solid',\n            borderWidth: '3px',\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }, \"Mod Details:\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 265\n          },\n          __self: this\n        }), React.createElement(\"h5\", {\n          style: {\n            color: '#007bff'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, x.title), React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.moddetails.replace(/'''/g, '\"')).contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        })), React.createElement(\"p\", {\n          style: {\n            borderRadius: '10px',\n            borderStyle: 'solid',\n            borderWidth: '3px',\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }, \"Test Steps:\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 272\n          },\n          __self: this\n        }), x.teststeps != null && React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.teststeps.replace(/'''/g, '\"')).contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 274\n          },\n          __self: this\n        }), x.teststeps === null && React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft('<p>Please enter test steps</p>').contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 281\n          },\n          __self: this\n        })), x.status !== 'Revoked' && x.status !== 'Complete' && React.createElement(\"p\", {\n          style: {\n            borderRadius: '10px',\n            borderStyle: 'solid',\n            borderWidth: '3px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }, \"Testing results:\"), \"TBD \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 289\n          },\n          __self: this\n        }), x.testingzip != null && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 290\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl).concat(x.testingzip.url),\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px',\n            backgroundColor: 'black',\n            color: 'hsl(128, 100%, 50%)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 291\n          },\n          __self: this\n        }, \"Download Testing Performed\"))), x.status === 'Complete' && React.createElement(\"p\", {\n          style: {\n            borderRadius: '10px',\n            borderStyle: 'solid',\n            borderWidth: '3px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, \"Testing results:\"), \"Performed as expected\", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }), x.testingzip != null && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl).concat(x.testingzip.url),\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px',\n            backgroundColor: 'black',\n            color: 'hsl(128, 100%, 50%)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298\n          },\n          __self: this\n        }, \"Download Testing Performed\"))), x.status === 'Revoked' && React.createElement(\"p\", {\n          style: {\n            borderRadius: '10px',\n            borderStyle: 'solid',\n            borderWidth: '3px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }, \"Testing results:\"), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 303\n          },\n          __self: this\n        }), \"N/A\"), x.rewrite != null && x.rewrite !== '' && React.createElement(\"p\", {\n          style: {\n            borderRadius: '10px',\n            borderStyle: 'solid',\n            borderWidth: '3px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 306\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        }, \"Rewrite:\"), \" \", x.rewrite), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 310\n          },\n          __self: this\n        }, \"Tested By: \", \"\\xA0\"), name), React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 311\n          },\n          __self: this\n        }, \"Date Tested: \", \"\\xA0\"), testingdate), x.status === 'Revoked' && React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 313\n          },\n          __self: this\n        }, \"Pass/Fail: \", \"\\xA0\"), \"N/A\"), x.status === 'Complete' && React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 316\n          },\n          __self: this\n        }, \"Pass/Fail: \", \"\\xA0\"), \"PASS\"));\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state3 = this.state,\n          loadingItems = _this$state3.loadingItems,\n          submission = _this$state3.submission;\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 344\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          marginTop: '20px',\n          marginBottom: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"System Modification Test Plan Form \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }), React.createElement(\"em\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 345\n        },\n        __self: this\n      }, \"FM-EN-454\")), this.renderInitialTable(), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 347\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }, \"GPS link for all mods:\"), React.createElement(\"p\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }, \"\\\\\\\\gaminglabs.net\\\\glimain\\\\Public\\\\LV\\\\Submissions\\\\2019\\\\SDS\\\\\".concat(submission, \"\\\\GLI Created\\\\10 Systems and Kiosks\\\\02 Reports\")))), this.renderModTestPlan(), React.createElement(\"div\", {\n        className: \"fixed-action-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 351\n        },\n        __self: this\n      }, React.createElement(Link, {\n        style: {\n          backgroundColor: '#333',\n          marginRight: '20px'\n        },\n        className: \"btn-floating btn-large right\",\n        to: \"/newmod/\".concat(this.props.match.params.submissionId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 352\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        class: \"material-icons\",\n        style: {\n          color: 'hsl(128, 100%, 50%)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 353\n        },\n        __self: this\n      }, \"add\"))), loadingItems && React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 356\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ModTestPlan;\n}(Component);\n\nexport default ModTestPlan;","map":{"version":3,"sources":["/home/aely/gli/src/Components/ModTestPlan.js"],"names":["React","Component","Form","FormGroup","Label","Input","Table","Link","Strapi","Loader","Editor","EditorState","convertToRaw","ContentState","htmlToDraft","draftToHtml","FaEdit","FaFileUpload","apiUrl","process","env","API_URL","strapi","ModTestPlan","props","onEditorStateChange","editorState","setState","html","getCurrentContent","replace","handleNameChange","event","name","target","value","handleDateChange","testingdate","handleVersionChange","previousversion","contentBlock","contentState","createFromBlockArray","contentBlocks","createWithContent","state","loadingItems","submission","jurisdictions","vendor","vendorId","mods","application","versions","rewrite","results","Date","request","data","query","match","params","submissionId","response","getMods","sort","a","b","version","localeCompare","map","modnumber","ModsList","i","length","j","push","file","modsCount","console","log","textAlign","bind","x","index","_id","marginTop","marginBottom","backgroundColor","display","marginLeft","marginRight","trackerid","versionaffected","status","borderRadius","borderStyle","borderWidth","jira","color","title","moddetails","teststeps","testingzip","url","renderInitialTable","renderModTestPlan"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Form, FormGroup, Label, Input, Table } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nimport Loader from './Loader';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport { FaEdit, FaFileUpload } from 'react-icons/fa';\r\nconst apiUrl = process.env.API_URL || 'http://192.168.0.248:1337';\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass ModTestPlan extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let html = '<p>Testing 1234 ðŸ˜€</p>';\r\n        let contentBlock = htmlToDraft(html);\r\n        if (contentBlock) {\r\n            let contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n            let editorState = EditorState.createWithContent(contentState);\r\n            this.state = {\r\n                loadingItems: true,\r\n                submission: '',\r\n                jurisdictions: [],\r\n                vendor: '',\r\n                vendorId: '',\r\n                mods: [],\r\n                application: [],\r\n                versions: [],\r\n                html: '',\r\n                editorState,\r\n                rewrite: '',\r\n                results: '',\r\n                name: '',\r\n                testingdate: Date,\r\n                previousversion: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    submission (id : \"${this.props.match.params.submissionId}\") {\r\n                        file\r\n                        received\r\n                        processed\r\n                        begin\r\n                        vendor {\r\n                        _id\r\n                        name\r\n                        logo {\r\n                          _id\r\n                          url\r\n                        }\r\n                      }\r\n                        jurisdictions {\r\n                        _id\r\n                        jurisdiction\r\n                      }\r\n                      urns {\r\n                          _id\r\n                          url\r\n                      }\r\n                      application {\r\n                          _id\r\n                          name\r\n                      }\r\n                      versions {\r\n                          _id\r\n                          version\r\n                          mods {\r\n                            _id\r\n                            modnumber\r\n                            title\r\n                            trackerid\r\n                            moddetails\r\n                            status\r\n                            jira\r\n                            teststeps\r\n                            sidenotes\r\n                            rewrite\r\n                            results\r\n                            versionaffected\r\n                            testingzip {\r\n                                _id\r\n                                url\r\n                            }\r\n                            employee {\r\n                                _id\r\n                                fname\r\n                                lname\r\n                            }\r\n                        }\r\n                      }\r\n                  }\r\n                }`\r\n            }\r\n        }\r\n        );\r\n        let getMods = response.data.submission.versions.sort((a, b) => (b.version.localeCompare(a.version))).map(a => {return a.mods.sort((a, b) => (a.modnumber - b.modnumber))});\r\n        let ModsList = [];\r\n        for (let i = 0; i < getMods.length; i++){\r\n            let j = 0;\r\n            while (j < getMods[i].length) {\r\n                ModsList.push(getMods[i][j])\r\n                j++\r\n            }\r\n        }\r\n        this.setState({\r\n            submission: response.data.submission.file,\r\n            loadingItems: false,\r\n            mods: ModsList,\r\n            application: response.data.submission.application,\r\n            versions: response.data.submission.versions[0].version,\r\n            modsCount: ModsList.length,\r\n            previousversion: response.data.submission.application.name\r\n        });\r\n\r\n        console.log(this.state);\r\n        }catch (err) {\r\n            console.log(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n            html: draftToHtml(convertToRaw(editorState.getCurrentContent())).replace(/[\\n]/g, '')\r\n        });\r\n    }\r\n\r\n    renderInitialTable() {\r\n        let { submission, versions, application, mods, name, previousversion } = this.state;\r\n        return (\r\n            <Table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            Engineer Name: \r\n                        </td>\r\n                        <td>\r\n                            <Input style={{textAlign: 'center'}} type='text' id='name' name='name' value={name} onChange={this.handleNameChange.bind(this)}/>\r\n                        </td>\r\n                        <td>\r\n                            Date:\r\n                        </td>\r\n                        <td>\r\n                            <Input style={{textAlign: 'center'}} type='date' id='testingdate' name='testingdate' onChange={this.handleDateChange.bind(this)} />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            File Number:\r\n                        </td>\r\n                        <td>\r\n                            <span>{submission}</span>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            Current Software Version:\r\n                        </td>\r\n                        <td>\r\n                            <span>{application.name} {versions}</span>\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            Previous Software Version:\r\n                        </td>\r\n                        <td>\r\n                            <Input style={{textAlign: 'center'}} type='text' name='previousversion' id='previousversion' value={previousversion} onChange={this.handleVersionChange.bind(this)}/>\r\n                        </td>\r\n                        <td>\r\n                            Previous File #:\r\n                        </td>\r\n                        <td>\r\n                            <Input style={{textAlign: 'center'}} type='text' name='previousfile' id='previousfile' />\r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            Total # of Modifications:\r\n                        </td>\r\n                        <td>\r\n                            {mods.length}\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </Table>\r\n        )\r\n    }\r\n\r\n    renderModTestPlan() {\r\n        let { mods, name, testingdate } = this.state;\r\n        return (\r\n        mods.map((x, index) => {\r\n        return (\r\n            <div className=\"card\" key={x._id} style={{marginTop: '30px', marginBottom: '30px', backgroundColor: '#ccc', display: 'block'}}>\r\n                <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                <Link to={`/updatemod/${x._id}`}>\r\n                    <FaEdit size={30} style={{marginTop:'5px', marginBottom: '5px'}}/>\r\n                </Link>\r\n                </div>\r\n                <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                    <a href={`${apiUrl}/admin/plugins/content-manager/mods/${x._id}?redirectUrl=/plugins/content-manager/mods?_limit=10&_page=1&_sort=_id&_q=abc&source=content-manager`} >\r\n                        <FaFileUpload size={30} style={{marginTop:'5px', marginBottom: '5px'}}/>\r\n                    </a>\r\n                </div>\r\n                {/*<Link to={`/submission/${this.props.match.params.submissionId}`} onClick={this.deleteMod(x._id)} style={{backgroundColor: '#333'}}>\r\n                    <FaTrash size={20}/>\r\n                </Link>*/}\r\n                <h5>Mod Number: {index + 1}</h5>\r\n                <h5>Tracker ID: {x.trackerid}</h5>\r\n                <h5>Version Affected: {x.versionaffected}</h5>\r\n                {x.status === 'Revoked' &&\r\n                <p style={{borderRadius: '10px', borderStyle: 'solid', borderWidth: '3px'}}>\r\n                <h5>Revoked:</h5>\r\n                <Form>\r\n                <FormGroup check inline>\r\n                <Label check>\r\n                  <Input type=\"radio\" name=\"radio1\" defaultChecked />{' '}\r\n                  Yes\r\n                </Label>\r\n                </FormGroup>\r\n                <FormGroup check inline>\r\n                <Label check>\r\n                    <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                    No\r\n                    </Label>\r\n                </FormGroup>\r\n                </Form>\r\n                </p>\r\n                }\r\n                {x.status !== 'Revoked' &&\r\n                <p style={{borderRadius: '10px', borderStyle: 'solid', borderWidth: '3px'}}>\r\n                <h5>Revoked:</h5>\r\n                <Form>\r\n                <FormGroup check inline>\r\n                <Label check>\r\n                  <Input type=\"radio\" name=\"radio1\" />{' '}\r\n                  Yes\r\n                </Label>\r\n                </FormGroup>\r\n                <FormGroup check inline>\r\n                <Label check>\r\n                    <Input type=\"radio\" name=\"radio1\" defaultChecked />{' '}\r\n                    No\r\n                    </Label>\r\n                </FormGroup>\r\n                </Form>\r\n                </p>\r\n                }\r\n                {x.jira != null && x.jira !== '' &&\r\n                    <h5>\r\n                        <a href={x.jira} style={{backgroundColor: 'black', color: 'red'}}>Jira</a>\r\n                    </h5>\r\n                }\r\n                <p style={{borderRadius: '10px', borderStyle: 'solid', borderWidth: '3px', marginTop: '5px', marginBottom: '5px'}}><h5>Mod Details:</h5><br />\r\n                <h5 style={{color: '#007bff'}}>{x.title}</h5>\r\n                <Editor\r\n                editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.moddetails.replace(/'''/g, '\"')).contentBlocks))}\r\n                readOnly='true'\r\n                toolbarHidden='true'\r\n                /></p>\r\n                <p style={{borderRadius: '10px', borderStyle: 'solid', borderWidth: '3px', marginTop: '5px', marginBottom: '5px'}}><h5>Test Steps:</h5><br />\r\n                {x.teststeps != null && \r\n                <Editor \r\n                editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.teststeps.replace(/'''/g, '\"')).contentBlocks))}\r\n                readOnly='true'\r\n                toolbarHidden='true'\r\n                />\r\n                }\r\n                {x.teststeps === null && \r\n                <Editor \r\n                editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft('<p>Please enter test steps</p>').contentBlocks))}\r\n                readOnly='true'\r\n                toolbarHidden='true'\r\n                />\r\n                }\r\n                </p>\r\n                {x.status !== 'Revoked' && x.status !== 'Complete' &&\r\n                <p style={{borderRadius: '10px', borderStyle: 'solid', borderWidth: '3px'}}><h5>Testing results:</h5>TBD <br />{x.testingzip != null &&\r\n                    <h5>\r\n                        <a href={`${apiUrl}${x.testingzip.url}`} style={{marginTop: '5px', marginBottom: '5px', backgroundColor: 'black', color: 'hsl(128, 100%, 50%)'}}>Download Testing Performed</a>\r\n                    </h5>\r\n                }</p>\r\n                }\r\n                {x.status === 'Complete' &&\r\n                <p style={{borderRadius: '10px', borderStyle: 'solid', borderWidth: '3px'}}><h5>Testing results:</h5>Performed as expected<br />{x.testingzip != null &&\r\n                    <h5>\r\n                        <a href={`${apiUrl}${x.testingzip.url}`} style={{marginTop: '5px', marginBottom: '5px', backgroundColor: 'black', color: 'hsl(128, 100%, 50%)'}}>Download Testing Performed</a>\r\n                    </h5>\r\n                }</p>\r\n                }\r\n                {x.status === 'Revoked' &&\r\n                <p style={{borderRadius: '10px', borderStyle: 'solid', borderWidth: '3px'}}><h5>Testing results:</h5><br />N/A</p>\r\n                }\r\n                {x.rewrite != null && x.rewrite !== '' &&\r\n                    <p style={{borderRadius: '10px', borderStyle: 'solid', borderWidth: '3px'}}>\r\n                        <strong>Rewrite:</strong> {x.rewrite}\r\n                    </p>\r\n                }\r\n                <span><h5>Tested By: {'\\u00A0'}</h5>{name}</span>    \r\n                <span><h5>Date Tested: {'\\u00A0'}</h5>{testingdate}</span>\r\n                {x.status === 'Revoked' &&\r\n                <span><h5>Pass/Fail: {'\\u00A0'}</h5>N/A</span>\r\n                }\r\n                {x.status === 'Complete' &&\r\n                <span><h5>Pass/Fail: {'\\u00A0'}</h5>PASS</span>\r\n                }\r\n            </div>\r\n            );}\r\n        ))\r\n    }\r\n\r\n    handleNameChange = (event) => {\r\n        this.setState({\r\n            name: event.target.value\r\n        })\r\n    }\r\n\r\n    handleDateChange = (event) => {\r\n        this.setState({\r\n            testingdate: event.target.value\r\n        })\r\n    }\r\n\r\n    handleVersionChange = (event) => {\r\n        this.setState({\r\n            previousversion: event.target.value\r\n        })\r\n    }\r\n\r\n    render () {\r\n        let { loadingItems, submission } = this.state;\r\n        return (\r\n            <div style={{textAlign: 'center'}}>\r\n                <h1 style={{marginTop:'20px', marginBottom: '20px'}}>System Modification Test Plan Form <br /><em>FM-EN-454</em></h1>\r\n                {this.renderInitialTable()}\r\n                <br />\r\n                <h5>GPS link for all mods:</h5>\r\n                <p><strong><u>{`\\\\\\\\gaminglabs.net\\\\glimain\\\\Public\\\\LV\\\\Submissions\\\\2019\\\\SDS\\\\${submission}\\\\GLI Created\\\\10 Systems and Kiosks\\\\02 Reports`}</u></strong></p>\r\n                {this.renderModTestPlan()}\r\n                <div className=\"fixed-action-btn\">\r\n                    <Link style={{backgroundColor: '#333', marginRight: '20px'}} className=\"btn-floating btn-large right\" to={`/newmod/${this.props.match.params.submissionId}`}>\r\n                        <i class=\"material-icons\" style={{color: 'hsl(128, 100%, 50%)'}}>add</i>\r\n                    </Link>\r\n                </div>\r\n                {loadingItems && <Loader />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModTestPlan;"]},"metadata":{},"sourceType":"module"}