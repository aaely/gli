{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\aaron_e\\\\gli\\\\src\\\\Components\\\\Jurisdiction.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nvar apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\nvar strapi = new Strapi(apiUrl);\n\nvar Jurisdiction =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Jurisdiction, _Component);\n\n  function Jurisdiction() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Jurisdiction);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Jurisdiction)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loadingItems: true,\n      jurisdiction: [],\n      submissions: []\n    };\n    return _this;\n  }\n\n  _createClass(Jurisdiction, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return strapi.request('POST', '/graphql', {\n                  data: {\n                    query: \"query {\\n                    jurisdiction (id : \\\"\".concat(this.props.match.params.jurisdictionId, \"\\\") {\\n                        jurisdiction\\n                        approvalstatuses {\\n                            _id\\n                            status\\n                            submissions {\\n                            _id\\n                            file\\n                            application {\\n                                _id\\n                                name\\n                            }\\n                            versions {\\n                                _id\\n                                version\\n                            }\\n                        }\\n                    }\\n                        \\n                  }\\n                }\")\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n                this.setState({\n                  jurisdiction: response.data.jurisdiction,\n                  submissions: response.data.jurisdiction.approvalstatuses.submissions,\n                  loadingItems: false\n                });\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                this.setState({\n                  loadingItems: false\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          jurisdiction = _this$state.jurisdiction,\n          submissions = _this$state.submissions,\n          loadingItems = _this$state.loadingItems;\n      console.log(submissions);\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 60\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, \"Jurisdiction\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, jurisdiction.jurisdiction), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, \"Submissions for \", jurisdiction.jurisdiction), submissions.map(function (sub) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/submission/\".concat(sub._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, sub.file), React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, sub.application.name, \" \", sub.versions.map(function (a) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, a.version);\n        })));\n      }), loadingItems && React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 78\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Jurisdiction;\n}(Component);\n\nexport default Jurisdiction;","map":{"version":3,"sources":["C:\\Users\\aaron_e\\gli\\src\\Components\\Jurisdiction.js"],"names":["React","Component","Link","Strapi","Loader","apiUrl","process","env","API_URL","strapi","Jurisdiction","state","loadingItems","jurisdiction","submissions","request","data","query","props","match","params","jurisdictionId","response","setState","approvalstatuses","console","log","textAlign","map","sub","_id","file","application","name","versions","a","version"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,uBAAtC;AACA,IAAMC,MAAM,GAAG,IAAIN,MAAJ,CAAWE,MAAX,CAAf;;IAEMK,Y;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,YAAY,EAAE,IADV;AAEJC,MAAAA,YAAY,EAAE,EAFV;AAGJC,MAAAA,WAAW,EAAE;AAHT,K;;;;;;;;;;;;;;;;;uBASuBL,MAAM,CAACM,OAAP,CAAe,MAAf,EAAuB,UAAvB,EAAmC;AAC1DC,kBAAAA,IAAI,EAAE;AACFC,oBAAAA,KAAK,8DACqB,KAAKC,KAAL,CAAWC,KAAX,CAAiBC,MAAjB,CAAwBC,cAD7C;AADH;AADoD,iBAAnC,C;;;AAAjBC,gBAAAA,Q;AA2BV,qBAAKC,QAAL,CAAc;AACVV,kBAAAA,YAAY,EAAES,QAAQ,CAACN,IAAT,CAAcH,YADlB;AAEVC,kBAAAA,WAAW,EAAEQ,QAAQ,CAACN,IAAT,CAAcH,YAAd,CAA2BW,gBAA3B,CAA4CV,WAF/C;AAGVF,kBAAAA,YAAY,EAAE;AAHJ,iBAAd;;;;;;;AAMIa,gBAAAA,OAAO,CAACC,GAAR;AACA,qBAAKH,QAAL,CAAc;AAAEX,kBAAAA,YAAY,EAAE;AAAhB,iBAAd;;;;;;;;;;;;;;;;6BAIC;AAAA,wBAC6C,KAAKD,KADlD;AAAA,UACCE,YADD,eACCA,YADD;AAAA,UACeC,WADf,eACeA,WADf;AAAA,UAC4BF,YAD5B,eAC4BA,YAD5B;AAELa,MAAAA,OAAO,CAACC,GAAR,CAAaZ,WAAb;AACA,aACI;AAAK,QAAA,KAAK,EAAE;AAACa,UAAAA,SAAS,EAAE;AAAZ,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADJ,OAC0B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAD1B,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAKd,YAAY,CAACA,YAAlB,CAFJ,OAEyC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFzC,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6BAAqBA,YAAY,CAACA,YAAlC,CAHJ,EAIKC,WAAW,CAACc,GAAZ,CAAgB,UAAAC,GAAG,EAAI;AACpB,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACI,oBAAC,IAAD;AAAM,UAAA,EAAE,wBAAiBA,GAAG,CAACC,GAArB,CAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAqCD,GAAG,CAACE,IAAzC,CADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACCF,GAAG,CAACG,WAAJ,CAAgBC,IADjB,OACwBJ,GAAG,CAACK,QAAJ,CAAaN,GAAb,CAAiB,UAAAO,CAAC,EAAI;AAC1C,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAOA,CAAC,CAACC,OAAT,CADJ;AAGH,SAJuB,CADxB,CAFJ,CADJ;AAYH,OAbA,CAJL,EAkBKxB,YAAY,IAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAlBrB,CADJ;AAsBH;;;;EAzEsBX,S;;AA4E3B,eAAeS,YAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nimport Loader from './Loader';\r\nconst apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass Jurisdiction extends Component {\r\n    state = {\r\n        loadingItems: true,\r\n        jurisdiction: [],\r\n        submissions: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            //console.log(this.props.match.params.itemId);\r\n            const response = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    jurisdiction (id : \"${this.props.match.params.jurisdictionId}\") {\r\n                        jurisdiction\r\n                        approvalstatuses {\r\n                            _id\r\n                            status\r\n                            submissions {\r\n                            _id\r\n                            file\r\n                            application {\r\n                                _id\r\n                                name\r\n                            }\r\n                            versions {\r\n                                _id\r\n                                version\r\n                            }\r\n                        }\r\n                    }\r\n                        \r\n                  }\r\n                }`\r\n            }\r\n        }\r\n        );\r\n        this.setState({\r\n            jurisdiction: response.data.jurisdiction,\r\n            submissions: response.data.jurisdiction.approvalstatuses.submissions,\r\n            loadingItems: false\r\n        });\r\n        }catch (err) {\r\n            console.log(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { jurisdiction, submissions, loadingItems } = this.state;\r\n        console.log (submissions);\r\n        return(\r\n            <div style={{textAlign: 'center'}}>\r\n                <h1>Jurisdiction</h1> <br />\r\n                <h4>{jurisdiction.jurisdiction}</h4> <br />\r\n                <h3>Submissions for {jurisdiction.jurisdiction}</h3>\r\n                {submissions.map(sub => {\r\n                    return(\r\n                        <div>\r\n                            <Link to={`/submission/${sub._id}`}>{sub.file}</Link>\r\n                            <p>\r\n                            {sub.application.name} {sub.versions.map(a => {\r\n                                return (\r\n                                    <span>{a.version}</span>\r\n                                )\r\n                            })}\r\n                            </p>\r\n                        </div>\r\n                    );\r\n                })}\r\n                {loadingItems && <Loader />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Jurisdiction;"]},"metadata":{},"sourceType":"module"}