{"ast":null,"code":"import _regeneratorRuntime from \"/home/aely/mrwiki/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aely/mrwiki/src/Components/Dashboard.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Strapi from \"strapi-sdk-javascript/build/main\";\nimport { Box, SearchField, Icon, Image, Text, Card, Button, Container } from 'gestalt';\nimport Loader from './Loader';\nvar apiUrl = process.env.API_URL || \"http://localhost:1337\";\nvar strapi = new Strapi(apiUrl);\n\nvar Dashboard =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Dashboard, _Component);\n\n  function Dashboard() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Dashboard);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Dashboard)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      submissions: [],\n      searchTerm: '',\n      loadingItems: true\n    };\n\n    _this.handleChange = function (_ref) {\n      var value = _ref.value;\n\n      _this.setState({\n        searchTerm: value\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(Dashboard, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return strapi.request('POST', '/graphql', {\n                  data: {\n                    query: \"query {\\n                        submissions{\\n                          _id\\n                          file\\n                        }\\n                      }\"\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n                console.log(response);\n                this.setState({\n                  submissions: response.data.submissions,\n                  loadingItems: false\n                });\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.error(_context.t0);\n                this.setState({\n                  loadingItems: false\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n\n    /*filteredItems = ({ searchTerm, submissions }) => {\n        return submissions.filter(prop => {\n            return prop.name.toLowerCase().includes(searchTerm.toLowerCase());\n        });\n    };*/\n    value: function render() {\n      var _this$state = this.state,\n          loadingItems = _this$state.loadingItems,\n          searchTerm = _this$state.searchTerm;\n      return (\n        /*<Container>\n                <Box display=\"flex\" justifyContent=\"center\" marginTop={4} marginBottom={4}>\n                <SearchField \n                id=\"searchField\" \n                accessibilityLabel=\"Items search field\" \n                onChange={this.handleChange} \n                placeholder=\"Search Property Names\" \n                value={searchTerm}\n                />\n                <Box\n                margin={2}\n                >\n                    <Icon \n                    icon=\"filter\"\n                    color={searchTerm ? 'orange' : 'gray'}\n                    size={20}\n                    accessibilityLabel=\"Filter\"\n                    />\n                </Box>\n                </Box>\n                <Box wrap display = \"flex\" \n                justifyContent = \"around\"\n                dangerouslySetInlineStyle={{\n                    __style: {\n                        backgroundColor: '#d6e5ff'\n                    }\n                }}\n                shape= \"rounded\"\n                >\n            {this.filteredItems(this.state).map(prop => {\n                console.log(prop.image.url);\n                return(\n                    <div className=\"card\" key={prop._id} style={{marginTop: '30px', width: '30%', display: 'inline-block', marginRight: '3px', marginLeft: '3px'}}>\n                    <div className=\"card-image\">\n                    <img src={`${apiUrl}${prop.image.url}`} alt ={prop.name} className=\"coffeeimage\"/>\n                        <span className=\"card-title\">{prop.name}</span>\n                    </div>\n                    <div className=\"card-content\" style={{backgroundColor:'#686c72'}}>    \n                        <p></p>\n                        <p>Player Tracking System: </p>\n                        <p>Number of slot machines:</p>\n                        <p>Text Here</p>\n                    </div>\n                    <div className=\"card-action\" style={{textAlign: 'center', backgroundColor:'#686c72'}}>\n                        <Link to={`/properties/${prop._id}`}>{prop.name}</Link>\n                    </div>\n                    </div>\n            )})}\n            {loadingItems && <Loader />}\n            </Box>\n        </Container>*/\n        React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 110\n          },\n          __self: this\n        }, \"hello\")\n      );\n    }\n  }]);\n\n  return Dashboard;\n}(Component);\n\nexport default Dashboard;","map":{"version":3,"sources":["/home/aely/mrwiki/src/Components/Dashboard.js"],"names":["React","Component","Link","Strapi","Box","SearchField","Icon","Image","Text","Card","Button","Container","Loader","apiUrl","process","env","API_URL","strapi","Dashboard","state","submissions","searchTerm","loadingItems","handleChange","value","setState","request","data","query","response","console","log","error"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,SAAQC,GAAR,EACQC,WADR,EAEQC,IAFR,EAGQC,KAHR,EAIQC,IAJR,EAKQC,IALR,EAMQC,MANR,EAOQC,SAPR,QAOyB,SAPzB;AAQA,OAAOC,MAAP,MAAmB,UAAnB;AACA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,uBAAtC;AACA,IAAMC,MAAM,GAAG,IAAId,MAAJ,CAAWU,MAAX,CAAf;;IAEMK,S;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,WAAW,EAAE,EADT;AAEJC,MAAAA,UAAU,EAAE,EAFR;AAGJC,MAAAA,YAAY,EAAE;AAHV,K;;UA6BRC,Y,GAAe,gBAAe;AAAA,UAAZC,KAAY,QAAZA,KAAY;;AAC1B,YAAKC,QAAL,CAAc;AAAEJ,QAAAA,UAAU,EAAEG;AAAd,OAAd;AACH,K;;;;;;;;;;;;;;;;;;uBAvB8BP,MAAM,CAACS,OAAP,CAAe,MAAf,EAAuB,UAAvB,EAAmC;AACtDC,kBAAAA,IAAI,EAAE;AACFC,oBAAAA,KAAK;AADH;AADgD,iBAAnC,C;;;AAAjBC,gBAAAA,Q;AAUNC,gBAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,qBAAKJ,QAAL,CAAc;AACVL,kBAAAA,WAAW,EAAES,QAAQ,CAACF,IAAT,CAAcP,WADjB;AAEVE,kBAAAA,YAAY,EAAE;AAFJ,iBAAd;;;;;;;AAKAQ,gBAAAA,OAAO,CAACE,KAAR;AACA,qBAAKP,QAAL,CAAc;AAAEH,kBAAAA,YAAY,EAAE;AAAhB,iBAAd;;;;;;;;;;;;;;;;;AAQR;;;;;6BAMS;AAAA,wBAC8B,KAAKH,KADnC;AAAA,UACCG,YADD,eACCA,YADD;AAAA,UACeD,UADf,eACeA,UADf;AAEL;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AApDA;AAsDH;;;;EAhGmBpB,S;;AAmGxB,eAAeiB,SAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Strapi from \"strapi-sdk-javascript/build/main\";\nimport {Box, \n        SearchField, \n        Icon,\n        Image,\n        Text,\n        Card,\n        Button,\n        Container } from 'gestalt';\nimport Loader from './Loader';\nconst apiUrl = process.env.API_URL || \"http://localhost:1337\";\nconst strapi = new Strapi(apiUrl);\n\nclass Dashboard extends Component {\n    state = {\n        submissions: [],\n        searchTerm: '',\n        loadingItems: true\n    }\n\n    async componentDidMount() {\n        try {\n            const response = await strapi.request('POST', '/graphql', {\n                data: {\n                    query: `query {\n                        submissions{\n                          _id\n                          file\n                        }\n                      }`\n                }\n            });\n            console.log(response);\n            this.setState({ \n                submissions: response.data.submissions,\n                loadingItems: false\n            });\n        } catch(err) {\n            console.error(err);\n            this.setState({ loadingItems: false });\n        }\n    }\n\n    handleChange = ({ value }) => {\n        this.setState({ searchTerm: value});\n    };\n\n    /*filteredItems = ({ searchTerm, submissions }) => {\n        return submissions.filter(prop => {\n            return prop.name.toLowerCase().includes(searchTerm.toLowerCase());\n        });\n    };*/\n\n    render() {\n        let { loadingItems, searchTerm } = this.state;\n        return(\n        /*<Container>\n                <Box display=\"flex\" justifyContent=\"center\" marginTop={4} marginBottom={4}>\n                <SearchField \n                id=\"searchField\" \n                accessibilityLabel=\"Items search field\" \n                onChange={this.handleChange} \n                placeholder=\"Search Property Names\" \n                value={searchTerm}\n                />\n                <Box\n                margin={2}\n                >\n                    <Icon \n                    icon=\"filter\"\n                    color={searchTerm ? 'orange' : 'gray'}\n                    size={20}\n                    accessibilityLabel=\"Filter\"\n                    />\n                </Box>\n                </Box>\n                <Box wrap display = \"flex\" \n                justifyContent = \"around\"\n                dangerouslySetInlineStyle={{\n                    __style: {\n                        backgroundColor: '#d6e5ff'\n                    }\n                }}\n                shape= \"rounded\"\n                >\n            {this.filteredItems(this.state).map(prop => {\n                console.log(prop.image.url);\n                return(\n                    <div className=\"card\" key={prop._id} style={{marginTop: '30px', width: '30%', display: 'inline-block', marginRight: '3px', marginLeft: '3px'}}>\n                    <div className=\"card-image\">\n                    <img src={`${apiUrl}${prop.image.url}`} alt ={prop.name} className=\"coffeeimage\"/>\n                        <span className=\"card-title\">{prop.name}</span>\n                    </div>\n                    <div className=\"card-content\" style={{backgroundColor:'#686c72'}}>    \n                        <p></p>\n                        <p>Player Tracking System: </p>\n                        <p>Number of slot machines:</p>\n                        <p>Text Here</p>\n                    </div>\n                    <div className=\"card-action\" style={{textAlign: 'center', backgroundColor:'#686c72'}}>\n                        <Link to={`/properties/${prop._id}`}>{prop.name}</Link>\n                    </div>\n                    </div>\n            )})}\n            {loadingItems && <Loader />}\n            </Box>\n        </Container>*/\n        <div>hello</div>\n        );\n    }\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}