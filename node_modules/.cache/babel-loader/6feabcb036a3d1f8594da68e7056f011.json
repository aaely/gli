{"ast":null,"code":"import _regeneratorRuntime from \"/home/aely/mrwiki/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aely/mrwiki/src/Components/Jurisdictions.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nvar apiUrl = process.env.API_URL || 'http://192.168.0.178:1337';\nvar strapi = new Strapi(apiUrl);\n\nvar Jurisdictions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Jurisdictions, _Component);\n\n  function Jurisdictions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Jurisdictions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Jurisdictions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loadingItems: true,\n      jurisdictions: []\n    };\n    return _this;\n  }\n\n  _createClass(Jurisdictions, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return strapi.request('POST', '/graphql', {\n                  data: {\n                    query: \"query {\\n                    jurisdictions {\\n                        _id\\n                        jurisdiction\\n                        submissions {\\n                          _id\\n                          file\\n                        }\\n                  }\\n                }\"\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n                this.setState({\n                  jurisdictions: response.data.jurisdictions,\n                  loadingItems: false\n                });\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                this.setState({\n                  loadingItems: false\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n    /*renderSubmissions() {\n        let { jurisdictions } = this.state;\n        return (\n            <div>\n                {jurisdictions.submissions.map(a => {\n                   return ( <p>{a.file}</p>)\n                })}\n            </div>\n        )\n    }*/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          jurisdictions = _this$state.jurisdictions,\n          loadingItems = _this$state.loadingItems;\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 56\n        },\n        __self: this\n      }, jurisdictions.map(function (a) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }, \"Jurisdiction\"), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59\n          },\n          __self: this\n        }), React.createElement(\"h4\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }, a.jurisdiction), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 61\n          },\n          __self: this\n        }, \"Submissions for \", a.jurisdiction));\n      }), loadingItems && React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Jurisdictions;\n}(Component);\n\nexport default Jurisdictions;","map":{"version":3,"sources":["/home/aely/mrwiki/src/Components/Jurisdictions.js"],"names":["React","Component","Link","Strapi","Loader","apiUrl","process","env","API_URL","strapi","Jurisdictions","state","loadingItems","jurisdictions","request","data","query","response","setState","console","log","textAlign","map","a","jurisdiction"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,2BAAtC;AACA,IAAMC,MAAM,GAAG,IAAIN,MAAJ,CAAWE,MAAX,CAAf;;IAEMK,a;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,YAAY,EAAE,IADV;AAEJC,MAAAA,aAAa,EAAE;AAFX,K;;;;;;;;;;;;;;;;;uBAQuBJ,MAAM,CAACK,OAAP,CAAe,MAAf,EAAuB,UAAvB,EAAmC;AAC1DC,kBAAAA,IAAI,EAAE;AACFC,oBAAAA,KAAK;AADH;AADoD,iBAAnC,C;;;AAAjBC,gBAAAA,Q;AAeV,qBAAKC,QAAL,CAAc;AACVL,kBAAAA,aAAa,EAAEI,QAAQ,CAACF,IAAT,CAAcF,aADnB;AAEVD,kBAAAA,YAAY,EAAE;AAFJ,iBAAd;;;;;;;AAKIO,gBAAAA,OAAO,CAACC,GAAR;AACA,qBAAKF,QAAL,CAAc;AAAEN,kBAAAA,YAAY,EAAE;AAAhB,iBAAd;;;;;;;;;;;;;;AAIR;;;;;;;;;;;;;6BAWS;AAAA,wBACiC,KAAKD,KADtC;AAAA,UACCE,aADD,eACCA,aADD;AAAA,UACgBD,YADhB,eACgBA,YADhB;AAEL,aACI;AAAK,QAAA,KAAK,EAAE;AAACS,UAAAA,SAAS,EAAE;AAAZ,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKR,aAAa,CAACS,GAAd,CAAkB,UAAAC,CAAC,EAAI;AACxB,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BADQ,OACc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UADd,EAER;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,CAAC,CAACC,YAAP,CAFQ,OAEkB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAFlB,EAGR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BAAqBD,CAAC,CAACC,YAAvB,CAHQ,CAAR;AAKC,OANA,CADL,EAQKZ,YAAY,IAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QARrB,CADJ;AAYH;;;;EA3DuBX,S;;AA8D5B,eAAeS,aAAf","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nconst apiUrl = process.env.API_URL || 'http://192.168.0.178:1337';\nconst strapi = new Strapi(apiUrl);\n\nclass Jurisdictions extends Component {\n    state = {\n        loadingItems: true,\n        jurisdictions: []\n    }\n\n    async componentDidMount() {\n        try {\n            //console.log(this.props.match.params.itemId);\n            const response = await strapi.request('POST', '/graphql', {\n            data: {\n                query: `query {\n                    jurisdictions {\n                        _id\n                        jurisdiction\n                        submissions {\n                          _id\n                          file\n                        }\n                  }\n                }`\n            }\n        }\n        );\n        this.setState({\n            jurisdictions: response.data.jurisdictions,\n            loadingItems: false\n        });\n        }catch (err) {\n            console.log(err);\n            this.setState({ loadingItems: false });\n        }\n    }\n\n    /*renderSubmissions() {\n        let { jurisdictions } = this.state;\n        return (\n            <div>\n                {jurisdictions.submissions.map(a => {\n                   return ( <p>{a.file}</p>)\n                })}\n            </div>\n        )\n    }*/\n\n    render() {\n        let { jurisdictions, loadingItems } = this.state;\n        return(\n            <div style={{textAlign: 'center'}}>\n                {jurisdictions.map(a => {\n                return (<p>\n                <h1>Jurisdiction</h1> <br />\n                <h4>{a.jurisdiction}</h4> <br />\n                <h3>Submissions for {a.jurisdiction}</h3>\n                </p>)\n                })}\n                {loadingItems && <Loader />}\n            </div>\n        );\n    }\n}\n\nexport default Jurisdictions;"]},"metadata":{},"sourceType":"module"}