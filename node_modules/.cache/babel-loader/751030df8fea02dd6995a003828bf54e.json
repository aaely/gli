{"ast":null,"code":"import _regeneratorRuntime from \"/home/aely/mrwiki/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aely/mrwiki/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aely/mrwiki/src/Components/Application.js\";\nimport React, { Component } from 'react';\nimport { Box, Heading, Text, Image, Mask, Card, Button, Container, IconButton } from 'gestalt';\nimport { Link } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport htmlToDraft from 'html-to-draftjs';\nimport draftToHtml from 'draftjs-to-html';\nvar apiUrl = process.env.API_URL || 'http://192.168.0.178:1337';\nvar strapi = new Strapi(apiUrl);\n\nvar Vendors =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Vendors, _Component);\n\n  /*state = {\n      application: [],\n      submissions: [],\n      loadingItems: true,\n      EditorState,\n      ContentState\n  }*/\n  function Vendors(props) {\n    var _this;\n\n    _classCallCheck(this, Vendors);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Vendors).call(this, props));\n\n    _this.onEditorStateChange = function (editorState, html) {\n      _this.setState({\n        editorState: editorState,\n        html: html\n      });\n    };\n\n    _this.onContentBlockChange = function () {};\n\n    var _html = '<p>Testing 1234 ðŸ˜€</p>';\n    var contentBlock = htmlToDraft(_html);\n\n    if (contentBlock) {\n      var contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      var editorState = EditorState.createWithContent(contentState);\n      _this.state = {\n        application: [],\n        submissions: [],\n        loadingItems: true,\n        editorState: editorState,\n        html: _html\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(Vendors, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, contentBlock, contentState, editorState;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return strapi.request('POST', '/graphql', {\n                  data: {\n                    query: \"query {\\n                    application (id: \\\"\".concat(this.props.match.params.applicationId, \"\\\") {\\n                    _id\\n                    name\\n                    howto\\n                    submissions {\\n                        _id\\n                        file\\n                        versions {\\n                            _id\\n                            version\\n                        }\\n                        jurisdictions {\\n                            _id\\n                            jurisdiction\\n                            approvalstatuses {\\n                                _id\\n                                status\\n                            }\\n                        }\\n                    }\\n                  }\\n                }\")\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n                this.setState({\n                  application: response.data.application,\n                  submissions: response.data.application.submissions,\n                  loadingItems: false,\n                  html: response.data.application.howto\n                });\n                contentBlock = htmlToDraft(this.state.html);\n\n                if (contentBlock) {\n                  contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n                  editorState = EditorState.createWithContent(contentState);\n                  this.setState({\n                    editorState: editorState\n                  });\n                }\n\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                this.setState({\n                  loadingItems: false\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loadingItems = _this$state.loadingItems,\n          application = _this$state.application,\n          submissions = _this$state.submissions,\n          editorState = _this$state.editorState,\n          html = _this$state.html;\n      console.log(this.state);\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 114\n        },\n        __self: this\n      }, React.createElement(Box, {\n        marginTop: 5,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"start\",\n        dangerouslySetInlineStyle: {\n          __style: {\n            flexWrap: \"wrap-reverse\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 115\n        },\n        __self: this\n      }, React.createElement(Box, {\n        display: \"flex\",\n        direction: \"column\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126\n        },\n        __self: this\n      }, React.createElement(Box, {\n        marginBottom: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 127\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 128\n        },\n        __self: this\n      }, application.name), React.createElement(Editor, {\n        editorState: editorState,\n        onEditorStateChange: this.onEditorStateChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 129\n        },\n        __self: this\n      }), React.createElement(\"textarea\", {\n        enabled: true,\n        value: draftToHtml(convertToRaw(editorState.getCurrentContent())),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }), React.createElement(Link, {\n        to: \"/application/\".concat(this.props.match.params.applicationId, \"/howto\"),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137\n        },\n        __self: this\n      }, \"Test\"), submissions.map(function (a) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140\n          },\n          __self: this\n        }, a.file, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141\n          },\n          __self: this\n        }), a.versions.map(function (b) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 144\n            },\n            __self: this\n          }, b.version);\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 146\n          },\n          __self: this\n        }), a.jurisdictions.map(function (c) {\n          return React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 149\n            },\n            __self: this\n          }, c.jurisdiction, \" -- Status: \", c.approvalstatuses.map(function (d) {\n            return React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 151\n              },\n              __self: this\n            }, d.status);\n          }), \"   \");\n        }));\n      })))), loadingItems && React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 163\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Vendors;\n}(Component);\n\nexport default Vendors;","map":{"version":3,"sources":["/home/aely/mrwiki/src/Components/Application.js"],"names":["React","Component","Box","Heading","Text","Image","Mask","Card","Button","Container","IconButton","Link","Strapi","Loader","Editor","EditorState","convertToRaw","ContentState","htmlToDraft","draftToHtml","apiUrl","process","env","API_URL","strapi","Vendors","props","onEditorStateChange","editorState","html","setState","onContentBlockChange","contentBlock","contentState","createFromBlockArray","contentBlocks","createWithContent","state","application","submissions","loadingItems","request","data","query","match","params","applicationId","response","howto","console","log","__style","flexWrap","name","getCurrentContent","map","a","file","versions","b","version","jurisdictions","c","jurisdiction","approvalstatuses","d","status"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Box,\n    Heading,\n    Text,\n    Image,\n    Mask,\n    Card,\n    Button,\n    Container, \n    IconButton} from 'gestalt';\nimport { Link } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport htmlToDraft from 'html-to-draftjs';\nimport draftToHtml from 'draftjs-to-html';\nconst apiUrl = process.env.API_URL || 'http://192.168.0.178:1337';\nconst strapi = new Strapi(apiUrl);\n\nclass Vendors extends Component {\n    /*state = {\n        application: [],\n        submissions: [],\n        loadingItems: true,\n        EditorState,\n        ContentState\n    }*/\n\n    constructor(props) {\n        super(props);\n        let html = '<p>Testing 1234 ðŸ˜€</p>';\n        let contentBlock = htmlToDraft(html);\n        if (contentBlock) {\n            let contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n            let editorState = EditorState.createWithContent(contentState);\n            this.state = {\n                application: [],\n                submissions: [],\n                loadingItems: true,\n                editorState,\n                html\n            }\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            //console.log(this.props.match.params.itemId);\n            const response = await strapi.request('POST', '/graphql', {\n            data: {\n                query: `query {\n                    application (id: \"${this.props.match.params.applicationId}\") {\n                    _id\n                    name\n                    howto\n                    submissions {\n                        _id\n                        file\n                        versions {\n                            _id\n                            version\n                        }\n                        jurisdictions {\n                            _id\n                            jurisdiction\n                            approvalstatuses {\n                                _id\n                                status\n                            }\n                        }\n                    }\n                  }\n                }`\n            }\n        }\n        );\n        this.setState({\n            application: response.data.application,\n            submissions: response.data.application.submissions,\n            loadingItems: false,\n            html: response.data.application.howto\n        });\n        let contentBlock = htmlToDraft(this.state.html);\n        if (contentBlock) {\n            let contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n            let editorState = EditorState.createWithContent(contentState);\n            this.setState({\n                editorState\n            });\n        }\n        }catch (err) {\n            console.log(err);\n            this.setState({ loadingItems: false });\n        }\n    }\n\n    onEditorStateChange = (editorState, html) => {\n        this.setState({\n            editorState,\n            html\n        });\n\n    }\n\n    onContentBlockChange = () => {\n\n    }\n\n    render() {\n        let { loadingItems, application, submissions, editorState, html } = this.state;\n        console.log(this.state);\n        return(\n            <Container>\n            <Box\n            marginTop={5}\n            display=\"flex\"\n            justifyContent=\"center\"\n            alignItems=\"start\"\n            dangerouslySetInlineStyle={{\n                __style: {\n                    flexWrap: \"wrap-reverse\"\n                }\n            }}\n            >\n            <Box display=\"flex\" direction=\"column\" alignItems=\"center\">\n                <Box marginBottom={5}>\n                    <Heading color=\"blue\">{application.name}</Heading>\n                    <Editor \n                    editorState={editorState}\n                    onEditorStateChange={this.onEditorStateChange}\n                    />\n                    <textarea\n                        enabled\n                        value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\n                    />\n                    <Link to={`/application/${this.props.match.params.applicationId}/howto`}>Test</Link>\n                {submissions.map(a => {\n                    return (\n                        <p>\n                            {a.file} <br />\n                            {a.versions.map(b => {\n                                return (\n                                    <span>{b.version}</span>\n                                )\n                            })}<br />\n                            {a.jurisdictions.map(c => {\n                                return (\n                                    <p>{c.jurisdiction} -- Status: {c.approvalstatuses.map(d => {\n                                        return (\n                                            <span>{d.status}</span>\n                                        )\n                                    })}   </p>\n                                )\n                            })}\n                        </p>\n                    )\n                })}\n\n                </Box>\n            </Box>\n            </Box>\n            {loadingItems && <Loader />}\n            </Container>\n        );\n    }\n}\n\nexport default Vendors;"]},"metadata":{},"sourceType":"module"}