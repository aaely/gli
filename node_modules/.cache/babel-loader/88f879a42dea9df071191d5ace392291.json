{"ast":null,"code":"import _regeneratorRuntime from \"/home/aely/gli/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aely/gli/src/Components/Jurisdictions.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nvar apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\nvar strapi = new Strapi(apiUrl);\n\nvar Jurisdictions =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Jurisdictions, _Component);\n\n  function Jurisdictions() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Jurisdictions);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Jurisdictions)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loadingItems: true,\n      jurisdictions: []\n    };\n    return _this;\n  }\n\n  _createClass(Jurisdictions, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return strapi.request('POST', '/graphql', {\n                  data: {\n                    query: \"query {\\n                    jurisdictions {\\n                        _id\\n                        jurisdiction\\n                        submissions {\\n                          _id\\n                          file\\n                          application {\\n                              _id\\n                              name\\n                          }\\n                          versions {\\n                              _id\\n                              version\\n                          }\\n                        }\\n                        number\\n                  }\\n                }\"\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n                this.setState({\n                  jurisdictions: response.data.jurisdictions,\n                  loadingItems: false\n                });\n                console.log(this.state);\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                this.setState({\n                  loadingItems: false\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n    /*renderSubmissions() {\r\n        let { jurisdictions } = this.state;\r\n        return (\r\n            <div>\r\n                {jurisdictions.submissions.map(a => {\r\n                   return ( <p>{a.file}</p>)\r\n                })}\r\n            </div>\r\n        )\r\n    }*/\n\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          jurisdictions = _this$state.jurisdictions,\n          loadingItems = _this$state.loadingItems;\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }, jurisdictions.map(function (a) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }, React.createElement(\"h1\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }, a.jurisdiction, \" (\", a.number, \")\"), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69\n          },\n          __self: this\n        }), React.createElement(\"h3\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70\n          },\n          __self: this\n        }, \"Submissions: \"), a.submissions.map(function (b) {\n          return React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }, b.file, \" \", React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 73\n            },\n            __self: this\n          }), b.application.name, \" \", b.versions.map(function (c) {\n            return React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 76\n              },\n              __self: this\n            }, c.version);\n          }));\n        }));\n      }), loadingItems && React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Jurisdictions;\n}(Component);\n\nexport default Jurisdictions;","map":{"version":3,"sources":["/home/aely/gli/src/Components/Jurisdictions.js"],"names":["React","Component","Link","Strapi","Loader","apiUrl","process","env","API_URL","strapi","Jurisdictions","state","loadingItems","jurisdictions","request","data","query","response","setState","console","log","textAlign","map","a","jurisdiction","number","submissions","b","file","application","name","versions","c","version"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,uBAAtC;AACA,IAAMC,MAAM,GAAG,IAAIN,MAAJ,CAAWE,MAAX,CAAf;;IAEMK,a;;;;;;;;;;;;;;;;;UACFC,K,GAAQ;AACJC,MAAAA,YAAY,EAAE,IADV;AAEJC,MAAAA,aAAa,EAAE;AAFX,K;;;;;;;;;;;;;;;;;uBAQuBJ,MAAM,CAACK,OAAP,CAAe,MAAf,EAAuB,UAAvB,EAAmC;AAC1DC,kBAAAA,IAAI,EAAE;AACFC,oBAAAA,KAAK;AADH;AADoD,iBAAnC,C;;;AAAjBC,gBAAAA,Q;AAwBV,qBAAKC,QAAL,CAAc;AACVL,kBAAAA,aAAa,EAAEI,QAAQ,CAACF,IAAT,CAAcF,aADnB;AAEVD,kBAAAA,YAAY,EAAE;AAFJ,iBAAd;AAIAO,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKT,KAAjB;;;;;;;AAEIQ,gBAAAA,OAAO,CAACC,GAAR;AACA,qBAAKF,QAAL,CAAc;AAAEN,kBAAAA,YAAY,EAAE;AAAhB,iBAAd;;;;;;;;;;;;;;AAIR;;;;;;;;;;;;;6BAWS;AAAA,wBACiC,KAAKD,KADtC;AAAA,UACCE,aADD,eACCA,aADD;AAAA,UACgBD,YADhB,eACgBA,YADhB;AAEL,aACI;AAAK,QAAA,KAAK,EAAE;AAACS,UAAAA,SAAS,EAAE;AAAZ,SAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKR,aAAa,CAACS,GAAd,CAAkB,UAAAC,CAAC,EAAI;AACxB,eAAQ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAKA,CAAC,CAACC,YAAP,QAAuBD,CAAC,CAACE,MAAzB,MADQ,OAC+B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAD/B,EAER;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BAFQ,EAGPF,CAAC,CAACG,WAAF,CAAcJ,GAAd,CAAkB,UAAAK,CAAC,EAAI;AACpB,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAIA,CAAC,CAACC,IAAN,OAAY;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAAZ,EACCD,CAAC,CAACE,WAAF,CAAcC,IADf,OACsBH,CAAC,CAACI,QAAF,CAAWT,GAAX,CAAe,UAAAU,CAAC,EAAI;AACtC,mBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAOA,CAAC,CAACC,OAAT,CADJ;AAGH,WAJqB,CADtB,CADJ;AAQH,SATA,CAHO,CAAR;AAcC,OAfA,CADL,EAiBKrB,YAAY,IAAI,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAjBrB,CADJ;AAqBH;;;;EA9EuBX,S;;AAiF5B,eAAeS,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nimport Loader from './Loader';\r\nconst apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass Jurisdictions extends Component {\r\n    state = {\r\n        loadingItems: true,\r\n        jurisdictions: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            //console.log(this.props.match.params.itemId);\r\n            const response = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    jurisdictions {\r\n                        _id\r\n                        jurisdiction\r\n                        submissions {\r\n                          _id\r\n                          file\r\n                          application {\r\n                              _id\r\n                              name\r\n                          }\r\n                          versions {\r\n                              _id\r\n                              version\r\n                          }\r\n                        }\r\n                        number\r\n                  }\r\n                }`\r\n            }\r\n        }\r\n        );\r\n        this.setState({\r\n            jurisdictions: response.data.jurisdictions,\r\n            loadingItems: false\r\n        });\r\n        console.log(this.state);\r\n        }catch (err) {\r\n            console.log(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n\r\n    /*renderSubmissions() {\r\n        let { jurisdictions } = this.state;\r\n        return (\r\n            <div>\r\n                {jurisdictions.submissions.map(a => {\r\n                   return ( <p>{a.file}</p>)\r\n                })}\r\n            </div>\r\n        )\r\n    }*/\r\n\r\n    render() {\r\n        let { jurisdictions, loadingItems } = this.state;\r\n        return(\r\n            <div style={{textAlign: 'center'}}>\r\n                {jurisdictions.map(a => {\r\n                return (<p>\r\n                <h1>{a.jurisdiction} ({a.number})</h1> <br />\r\n                <h3>Submissions: </h3>\r\n                {a.submissions.map(b => {\r\n                    return (\r\n                        <p>{b.file} <br />\r\n                        {b.application.name} {b.versions.map(c => {\r\n                            return (\r\n                                <span>{c.version}</span>\r\n                            )\r\n                        })}</p>\r\n                    )\r\n                })}\r\n                </p>)\r\n                })}\r\n                {loadingItems && <Loader />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Jurisdictions;"]},"metadata":{},"sourceType":"module"}