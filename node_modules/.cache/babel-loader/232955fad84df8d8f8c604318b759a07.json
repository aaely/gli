{"ast":null,"code":"import _regeneratorRuntime from \"/home/aely/gli/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aely/gli/src/Components/Jurisdiction.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nvar apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\nvar strapi = new Strapi(apiUrl);\n\nvar Jurisdiction =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Jurisdiction, _Component);\n\n  function Jurisdiction() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, Jurisdiction);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(Jurisdiction)).call.apply(_getPrototypeOf2, [this].concat(args)));\n    _this.state = {\n      loadingItems: true,\n      jurisdiction: '',\n      submissions: [],\n      approvalstatuses: []\n    };\n    return _this;\n  }\n\n  _createClass(Jurisdiction, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return strapi.request('POST', '/graphql', {\n                  data: {\n                    query: \"query {\\n                    jurisdiction (id : \\\"\".concat(this.props.match.params.jurisdictionId, \"\\\") {\\n                        jurisdiction\\n                        approvalstatuses {\\n                            _id\\n                            status\\n                            submissions {\\n                            _id\\n                            file\\n                            application {\\n                                _id\\n                                name\\n                            }\\n                            versions {\\n                                _id\\n                                version\\n                            }\\n                        }\\n                    }\\n                        \\n                  }\\n                }\")\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n                this.setState({\n                  jurisdiction: response.data.jurisdiction.jurisdiction,\n                  approvalstatuses: response.data.jurisdiction.approvalstatuses,\n                  loadingItems: false\n                });\n                _context.next = 11;\n                break;\n\n              case 7:\n                _context.prev = 7;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                this.setState({\n                  loadingItems: false\n                });\n\n              case 11:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 7]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          jurisdiction = _this$state.jurisdiction,\n          approvalstatuses = _this$state.approvalstatuses,\n          loadingItems = _this$state.loadingItems;\n      console.log(approvalstatuses);\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }, \"Jurisdiction\"), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62\n        },\n        __self: this\n      }), React.createElement(\"h4\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }, jurisdiction), \" \", React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 63\n        },\n        __self: this\n      }), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 64\n        },\n        __self: this\n      }, \"Submissions for \", jurisdiction), approvalstatuses.map(function (app) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67\n          },\n          __self: this\n        }, app.status, \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68\n          },\n          __self: this\n        }), app.submissions.map(function (sub) {\n          return React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 71\n            },\n            __self: this\n          }, React.createElement(Link, {\n            to: \"/submission/\".concat(sub._id),\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }, sub.file), React.createElement(\"br\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 72\n            },\n            __self: this\n          }), sub.application.name, \" \", sub.versions.map(function (a) {\n            return React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 75\n              },\n              __self: this\n            }, a.version);\n          }));\n        }));\n      }), loadingItems && React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 83\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Jurisdiction;\n}(Component);\n\nexport default Jurisdiction;","map":{"version":3,"sources":["/home/aely/gli/src/Components/Jurisdiction.js"],"names":["React","Component","Link","Strapi","Loader","apiUrl","process","env","API_URL","strapi","Jurisdiction","state","loadingItems","jurisdiction","submissions","approvalstatuses","request","data","query","props","match","params","jurisdictionId","response","setState","console","log","textAlign","map","app","status","sub","_id","file","application","name","versions","a","version"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nconst apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\nconst strapi = new Strapi(apiUrl);\n\nclass Jurisdiction extends Component {\n    state = {\n        loadingItems: true,\n        jurisdiction: '',\n        submissions: [],\n        approvalstatuses: []\n    }\n\n    async componentDidMount() {\n        try {\n            //console.log(this.props.match.params.itemId);\n            const response = await strapi.request('POST', '/graphql', {\n            data: {\n                query: `query {\n                    jurisdiction (id : \"${this.props.match.params.jurisdictionId}\") {\n                        jurisdiction\n                        approvalstatuses {\n                            _id\n                            status\n                            submissions {\n                            _id\n                            file\n                            application {\n                                _id\n                                name\n                            }\n                            versions {\n                                _id\n                                version\n                            }\n                        }\n                    }\n                        \n                  }\n                }`\n            }\n        }\n        );\n        this.setState({\n            jurisdiction: response.data.jurisdiction.jurisdiction,\n            approvalstatuses: response.data.jurisdiction.approvalstatuses,\n            loadingItems: false\n        });\n        }catch (err) {\n            console.log(err);\n            this.setState({ loadingItems: false });\n        }\n    }\n\n    render() {\n        let { jurisdiction, approvalstatuses, loadingItems } = this.state;\n        console.log(approvalstatuses);\n        return(\n            <div style={{textAlign: 'center'}}>\n                <h1>Jurisdiction</h1> <br />\n                <h4>{jurisdiction}</h4> <br />\n                <h3>Submissions for {jurisdiction}</h3>\n                {approvalstatuses.map(app => {\n                    return(\n                        <div>\n                            {app.status} <br />\n                            {app.submissions.map(sub => {\n                                return (\n                                <p>\n                                <Link to={`/submission/${sub._id}`}>{sub.file}</Link><br />\n                                {sub.application.name} {sub.versions.map(a => {\n                                    return (\n                                        <span>{a.version}</span>\n                                    )\n                                })}\n                            \n                            </p>)\n                        })}</div>\n                    );\n                })}\n                {loadingItems && <Loader />}\n            </div>\n        );\n    }\n}\n\nexport default Jurisdiction;"]},"metadata":{},"sourceType":"module"}