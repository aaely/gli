{"ast":null,"code":"import _regeneratorRuntime from \"/home/aely/gli/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aely/gli/src/Components/Submission.js\";\nimport React, { Component } from 'react';\nimport Test from './propstest';\nimport { Link } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nimport { FaRegEdit } from 'react-icons/fa';\nimport { pdfjs, Document, Page, View } from 'react-pdf';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport htmlToDraft from 'html-to-draftjs';\nimport draftToHtml from 'draftjs-to-html';\nimport Collapsible from 'react-collapsible';\nimport ModsList from './ModsList';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Sector } from 'recharts';\npdfjs.GlobalWorkerOptions.workerSrc = \"//cdnjs.cloudflare.com/ajax/libs/pdf.js/\".concat(pdfjs.version, \"/pdf.worker.js\");\nvar apiUrl = process.env.API_URL || 'http://localhost:1337';\nvar strapi = new Strapi(apiUrl);\n\nvar renderActiveShape = function renderActiveShape(props) {\n  var RADIAN = Math.PI / 180;\n  var cx = props.cx,\n      cy = props.cy,\n      midAngle = props.midAngle,\n      innerRadius = props.innerRadius,\n      outerRadius = props.outerRadius,\n      startAngle = props.startAngle,\n      endAngle = props.endAngle,\n      fill = props.fill,\n      payload = props.payload,\n      percent = props.percent;\n  var sin = Math.sin(-RADIAN * midAngle);\n  var cos = Math.cos(-RADIAN * midAngle);\n  var sx = cx + (outerRadius + 10) * cos;\n  var sy = cy + (outerRadius + 10) * sin;\n  var mx = cx + (outerRadius + 30) * cos;\n  var my = cy + (outerRadius + 30) * sin;\n  var ex = mx + (cos >= 0 ? 1 : -1) * 22;\n  var ey = my;\n  var textAnchor = cos >= 0 ? 'start' : 'end';\n  return React.createElement(\"g\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(\"text\", {\n    x: cx,\n    y: cy,\n    dy: 8,\n    textAnchor: \"middle\",\n    fill: fill,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, payload.name), React.createElement(Sector, {\n    cx: cx,\n    cy: cy,\n    innerRadius: innerRadius,\n    outerRadius: outerRadius,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    fill: fill,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), React.createElement(Sector, {\n    cx: cx,\n    cy: cy,\n    startAngle: startAngle,\n    endAngle: endAngle,\n    innerRadius: outerRadius + 6,\n    outerRadius: outerRadius + 10,\n    fill: fill,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }), React.createElement(\"path\", {\n    d: \"M\".concat(sx, \",\").concat(sy, \"L\").concat(mx, \",\").concat(my, \"L\").concat(ex, \",\").concat(ey),\n    stroke: fill,\n    fill: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }), React.createElement(\"circle\", {\n    cx: ex,\n    cy: ey,\n    r: 2,\n    fill: fill,\n    stroke: \"none\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55\n    },\n    __self: this\n  }), React.createElement(\"text\", {\n    x: ex + (cos >= 0 ? 1 : -1) * 12,\n    y: ey,\n    textAnchor: textAnchor,\n    fill: \"#333\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, \"\".concat(payload.value)), React.createElement(\"text\", {\n    x: ex + (cos >= 0 ? 1 : -1) * 12,\n    y: ey,\n    dy: 18,\n    textAnchor: textAnchor,\n    fill: \"#999\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, \"\".concat((percent * 100).toFixed(2), \"%\")));\n};\n\nvar Submission =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Submission, _Component);\n\n  function Submission(props) {\n    var _this;\n\n    _classCallCheck(this, Submission);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Submission).call(this, props));\n\n    _this.onEditorStateChange = function (editorState) {\n      _this.setState({\n        editorState: editorState,\n        html: draftToHtml(convertToRaw(editorState.getCurrentContent())).replace(/[\\n]/g, '')\n      });\n    };\n\n    _this.onPieEnter = function (data, index) {\n      _this.setState({\n        activeIndex: index\n      });\n    };\n\n    var html = '<p>Testing 1234 ðŸ˜€</p>';\n    var contentBlock = htmlToDraft(html);\n\n    if (contentBlock) {\n      var contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      var editorState = EditorState.createWithContent(contentState);\n      _this.state = {\n        loadingItems: true,\n        submission: '',\n        jurisdictions: [],\n        vendor: '',\n        vendorId: '',\n        numPages: null,\n        pageNumber: 1,\n        urns: [],\n        mods: [],\n        application: [],\n        versions: [],\n        html: '',\n        editorState: editorState,\n        uploadedImages: [],\n        auditModsCount: 0,\n        modsCount: 0,\n        testableModsCount: 0,\n        completeModsCount: 0,\n        jiraModsCount: 0,\n        revokedModsCount: 0,\n        activeIndex: 0\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(Submission, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return strapi.request('POST', '/graphql', {\n                  data: {\n                    query: \"query {\\n                    submission (id : \\\"\".concat(this.props.match.params.submissionId, \"\\\") {\\n                        file\\n                        received\\n                        processed\\n                        begin\\n                        vendor {\\n                        _id\\n                        name\\n                        logo {\\n                          _id\\n                          url\\n                        }\\n                      }\\n                        jurisdictions {\\n                        _id\\n                        jurisdiction\\n                      }\\n                      urns {\\n                          _id\\n                          url\\n                      }\\n                      mods {\\n                          _id\\n                          modnumber\\n                          title\\n                          trackerid\\n                          moddetails\\n                          status\\n                          jira\\n                          testingzip {\\n                              _id\\n                              url\\n                          }\\n                      }\\n                      application {\\n                          _id\\n                          name\\n                      }\\n                      versions {\\n                          _id\\n                          version\\n                      }\\n                  }\\n                }\")\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n                this.setState({\n                  submission: response.data.submission.file,\n                  vendor: response.data.submission.vendor.name,\n                  jurisdictions: response.data.submission.jurisdictions,\n                  loadingItems: false,\n                  vendorId: response.data.submission.vendor._id,\n                  urns: response.data.submission.urns,\n                  application: response.data.submission.application,\n                  versions: response.data.submission.versions\n                });\n                console.log(this.state);\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                this.setState({\n                  loadingItems: false\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"renderDropDown1\",\n    value: function renderDropDown1() {\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 179\n        },\n        __self: this\n      }, \"Jurisdictions:\");\n    }\n  }, {\n    key: \"renderDropDown2\",\n    value: function renderDropDown2() {\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 187\n        },\n        __self: this\n      }, \"URNs:\");\n    }\n  }, {\n    key: \"renderDropDown3\",\n    value: function renderDropDown3() {\n      var modsCount = this.state.modsCount;\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196\n        },\n        __self: this\n      }, \"Mods:  (\", modsCount, \")\");\n    }\n    /*onDocumentLoadSuccess = ({ numPages }) => {\n        this.setState({ numPages });\n      }\n       changePage = offset => this.setState(prevState => ({\n        pageNumber: prevState.pageNumber + offset,\n      }));\n    \n      previousPage = () => this.changePage(-1);\n    \n      nextPage = () => this.changePage(1);\n       tableOfContents = () => this.setState({ pageNumber: 4});\n       onItemClick = ({ pageNumber }) => this.setState({ pageNumber: pageNumber });\n       removes the offset of text from the rendered PDF file\n      removeTextLayerOffset = () => {\n        const textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n          textLayers.forEach(layer => {\n            const { style } = layer;\n            style.top = \"0\";\n            style.left = \"0\";\n            style.transform = \"\";\n        });\n      }\n       renderURNs = () => {\n          let { urns, pageNumber, numPages } = this.state;\n          return (\n            <div>\n                {urns.map(a => {\n                    return (\n                        <div>\n                            <p>Page {pageNumber || (numPages ? 1 : '--')} of {numPages || '--'}</p>\n                            <button\n                            type=\"button\"\n                            disabled={pageNumber <= 1}\n                            onClick={this.previousPage}\n                            >\n                                Back\n                            </button>\n                            <button\n                            type=\"button\"\n                            disabled={pageNumber >= numPages}\n                            onClick={this.nextPage}\n                            >\n                                Next\n                            </button>\n                            <button\n                            type=\"button\"\n                            onClick={this.tableOfContents}\n                            >\n                                Table of Contents\n                            </button>\n                            <Document\n                            file={`${apiUrl}${a.url}`}\n                            className='canvas'\n                            onLoadSuccess={this.onDocumentLoadSuccess}\n                            onItemClick={this.onItemClick}\n                            >\n                                <Page pageNumber={pageNumber} onLoadSuccess={this.removeTextLayerOffset}/>\n                            </Document>                        \n                        </div>\n                    )\n                })}\n            </div>\n          );\n      }*/\n\n  }, {\n    key: \"renderPieChart\",\n    value: function renderPieChart() {\n      var _this$state = this.state,\n          modsCount = _this$state.modsCount,\n          auditModsCount = _this$state.auditModsCount,\n          completeModsCount = _this$state.completeModsCount,\n          jiraModsCount = _this$state.jiraModsCount,\n          testableModsCount = _this$state.testableModsCount,\n          revokedModsCount = _this$state.revokedModsCount,\n          activeIndex = _this$state.activeIndex;\n      var completeMods = completeModsCount + revokedModsCount;\n      var data = [{\n        name: 'Complete Mods',\n        value: parseInt(\"\".concat(completeMods))\n      }, {\n        name: 'JIRA Mods',\n        value: parseInt(\"\".concat(jiraModsCount))\n      }, {\n        name: 'Audit Mods',\n        value: parseInt(\"\".concat(auditModsCount))\n      }, {\n        name: 'Testable Mods',\n        value: parseInt(\"\".concat(testableModsCount))\n      }];\n      var COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n      return React.createElement(PieChart, {\n        width: 400,\n        height: 400,\n        style: {\n          margin: '0 auto'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 290\n        },\n        __self: this\n      }, React.createElement(Pie, {\n        activeIndex: activeIndex,\n        activeShape: renderActiveShape,\n        data: data,\n        cx: 200,\n        cy: 200,\n        innerRadius: 60,\n        outerRadius: 80,\n        fill: \"#8884d8\",\n        dataKey: \"value\",\n        onMouseEnter: this.onPieEnter,\n        nameKey: \"name\",\n        paddingAngle: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 291\n        },\n        __self: this\n      }, data.map(function (entry, index) {\n        return React.createElement(Cell, {\n          key: \"slice-\".concat(index),\n          fill: COLORS[index % COLORS.length],\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 307\n          },\n          __self: this\n        });\n      })));\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          submission = _this$state2.submission,\n          vendor = _this$state2.vendor,\n          jurisdictions = _this$state2.jurisdictions,\n          loadingItems = _this$state2.loadingItems,\n          vendorId = _this$state2.vendorId,\n          application = _this$state2.application,\n          versions = _this$state2.versions;\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 318\n        },\n        __self: this\n      }, React.createElement(Test, {\n        submissionId: this.props.match.params.submissionId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 320\n        },\n        __self: this\n      }, submission), React.createElement(Link, {\n        to: \"/manufacturer/\".concat(vendorId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }, vendor)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 321\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/application/\".concat(application._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 322\n        },\n        __self: this\n      }, application.name, \" \", versions.map(function (y) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 324\n          },\n          __self: this\n        }, y.version);\n      }))), React.createElement(Collapsible, {\n        transitionTime: \"250\",\n        trigger: this.renderDropDown1(),\n        triggerWhenOpen: this.renderHide(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 327\n        },\n        __self: this\n      }, jurisdictions.map(function (jurs) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/jurisdiction/\".concat(jurs._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }, jurs.jurisdiction));\n      })), this.renderPieChart(), React.createElement(ModsList, {\n        submissionId: this.props.match.params.submissionId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 348\n        },\n        __self: this\n      }), loadingItems && React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 349\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Submission;\n}(Component);\n\nexport default Submission;","map":{"version":3,"sources":["/home/aely/gli/src/Components/Submission.js"],"names":["React","Component","Test","Link","Strapi","Loader","FaRegEdit","pdfjs","Document","Page","View","Editor","EditorState","convertToRaw","ContentState","htmlToDraft","draftToHtml","Collapsible","ModsList","PieChart","Pie","Cell","ResponsiveContainer","Sector","GlobalWorkerOptions","workerSrc","version","apiUrl","process","env","API_URL","strapi","renderActiveShape","props","RADIAN","Math","PI","cx","cy","midAngle","innerRadius","outerRadius","startAngle","endAngle","fill","payload","percent","sin","cos","sx","sy","mx","my","ex","ey","textAnchor","name","value","toFixed","Submission","onEditorStateChange","editorState","setState","html","getCurrentContent","replace","onPieEnter","data","index","activeIndex","contentBlock","contentState","createFromBlockArray","contentBlocks","createWithContent","state","loadingItems","submission","jurisdictions","vendor","vendorId","numPages","pageNumber","urns","mods","application","versions","uploadedImages","auditModsCount","modsCount","testableModsCount","completeModsCount","jiraModsCount","revokedModsCount","request","query","match","params","submissionId","response","file","_id","console","log","completeMods","parseInt","COLORS","margin","map","entry","length","textAlign","y","renderDropDown1","renderHide","jurs","jurisdiction","renderPieChart"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Test from './propstest';\nimport { Link } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nimport { FaRegEdit } from 'react-icons/fa';\nimport { pdfjs, Document, Page, View } from 'react-pdf';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport htmlToDraft from 'html-to-draftjs';\nimport draftToHtml from 'draftjs-to-html';\nimport Collapsible from 'react-collapsible';\nimport ModsList from './ModsList';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Sector } from 'recharts';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nconst apiUrl = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiUrl);\n\nlet renderActiveShape = (props) => {\n    let RADIAN = Math.PI / 180;\n    let { cx, cy, midAngle, innerRadius, outerRadius, startAngle, endAngle,\n        fill, payload, percent } = props;\n    let sin = Math.sin(-RADIAN * midAngle);\n    let cos = Math.cos(-RADIAN * midAngle);\n    let sx = cx + (outerRadius + 10) * cos;\n    let sy = cy + (outerRadius + 10) * sin;\n    let mx = cx + (outerRadius + 30) * cos;\n    let my = cy + (outerRadius + 30) * sin;\n    let ex = mx + (cos >= 0 ? 1 : -1) * 22;\n    let ey = my;\n    let textAnchor = cos >= 0 ? 'start' : 'end';\n  \n    return (\n      <g>\n        <text x={cx} y={cy} dy={8} textAnchor=\"middle\" fill={fill}>{payload.name}</text>\n        <Sector\n          cx={cx}\n          cy={cy}\n          innerRadius={innerRadius}\n          outerRadius={outerRadius}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          fill={fill}\n        />\n        <Sector\n          cx={cx}\n          cy={cy}\n          startAngle={startAngle}\n          endAngle={endAngle}\n          innerRadius={outerRadius + 6}\n          outerRadius={outerRadius + 10}\n          fill={fill}\n        />\n        <path d={`M${sx},${sy}L${mx},${my}L${ex},${ey}`} stroke={fill} fill=\"none\"/>\n        <circle cx={ex} cy={ey} r={2} fill={fill} stroke=\"none\"/>\n        <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} textAnchor={textAnchor} fill=\"#333\">\n          {`${payload.value}`}\n        </text>\n        <text x={ex + (cos >= 0 ? 1 : -1) * 12} y={ey} dy={18} textAnchor={textAnchor} fill=\"#999\">\n          {`${(percent * 100).toFixed(2)}%`}\n        </text>\n      </g>\n    );\n  };\n\nclass Submission extends Component {\n\n    constructor(props) {\n        super(props);\n        let html = '<p>Testing 1234 ðŸ˜€</p>';\n        let contentBlock = htmlToDraft(html);\n        if (contentBlock) {\n            let contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n            let editorState = EditorState.createWithContent(contentState);\n            this.state = {\n                loadingItems: true,\n                submission: '',\n                jurisdictions: [],\n                vendor: '',\n                vendorId: '',\n                numPages: null,\n                pageNumber: 1,\n                urns: [],\n                mods: [],\n                application: [],\n                versions: [],\n                html: '',\n                editorState,\n                uploadedImages: [],\n                auditModsCount: 0,\n                modsCount: 0,\n                testableModsCount: 0,\n                completeModsCount: 0,\n                jiraModsCount: 0,\n                revokedModsCount: 0,\n                activeIndex: 0\n            }\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            let response = await strapi.request('POST', '/graphql', {\n            data: {\n                query: `query {\n                    submission (id : \"${this.props.match.params.submissionId}\") {\n                        file\n                        received\n                        processed\n                        begin\n                        vendor {\n                        _id\n                        name\n                        logo {\n                          _id\n                          url\n                        }\n                      }\n                        jurisdictions {\n                        _id\n                        jurisdiction\n                      }\n                      urns {\n                          _id\n                          url\n                      }\n                      mods {\n                          _id\n                          modnumber\n                          title\n                          trackerid\n                          moddetails\n                          status\n                          jira\n                          testingzip {\n                              _id\n                              url\n                          }\n                      }\n                      application {\n                          _id\n                          name\n                      }\n                      versions {\n                          _id\n                          version\n                      }\n                  }\n                }`\n            }\n        }\n        );\n        this.setState({\n            submission: response.data.submission.file,\n            vendor: response.data.submission.vendor.name,\n            jurisdictions: response.data.submission.jurisdictions,\n            loadingItems: false,\n            vendorId: response.data.submission.vendor._id,\n            urns: response.data.submission.urns,\n            application: response.data.submission.application,\n            versions: response.data.submission.versions,\n        });\n        console.log(this.state);\n        }catch (err) {\n            console.log(err);\n            this.setState({ loadingItems: false });\n        }\n    }\n\n    onEditorStateChange = (editorState) => {\n        this.setState({\n            editorState,\n            html: draftToHtml(convertToRaw(editorState.getCurrentContent())).replace(/[\\n]/g, '')\n        });\n    }\n\n    renderDropDown1() {\n        return (\n            <span className=\"trigger\">\n                Jurisdictions:\n            </span>\n        );\n    }\n\n    renderDropDown2() {\n        return (\n            <span className=\"trigger\">\n                URNs:\n            </span>\n        );\n    }\n\n    renderDropDown3() {\n        let { modsCount } = this.state;\n        return (\n            <span className=\"trigger\">\n                Mods:  ({modsCount})\n            </span>\n        );\n    }\n\n    /*onDocumentLoadSuccess = ({ numPages }) => {\n        this.setState({ numPages });\n      }\n\n      changePage = offset => this.setState(prevState => ({\n        pageNumber: prevState.pageNumber + offset,\n      }));\n    \n      previousPage = () => this.changePage(-1);\n    \n      nextPage = () => this.changePage(1);\n\n      tableOfContents = () => this.setState({ pageNumber: 4});\n\n      onItemClick = ({ pageNumber }) => this.setState({ pageNumber: pageNumber });\n\n      removes the offset of text from the rendered PDF file\n      removeTextLayerOffset = () => {\n        const textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n          textLayers.forEach(layer => {\n            const { style } = layer;\n            style.top = \"0\";\n            style.left = \"0\";\n            style.transform = \"\";\n        });\n      }\n\n      renderURNs = () => {\n          let { urns, pageNumber, numPages } = this.state;\n          return (\n            <div>\n                {urns.map(a => {\n                    return (\n                        <div>\n                            <p>Page {pageNumber || (numPages ? 1 : '--')} of {numPages || '--'}</p>\n                            <button\n                            type=\"button\"\n                            disabled={pageNumber <= 1}\n                            onClick={this.previousPage}\n                            >\n                                Back\n                            </button>\n                            <button\n                            type=\"button\"\n                            disabled={pageNumber >= numPages}\n                            onClick={this.nextPage}\n                            >\n                                Next\n                            </button>\n                            <button\n                            type=\"button\"\n                            onClick={this.tableOfContents}\n                            >\n                                Table of Contents\n                            </button>\n                            <Document\n                            file={`${apiUrl}${a.url}`}\n                            className='canvas'\n                            onLoadSuccess={this.onDocumentLoadSuccess}\n                            onItemClick={this.onItemClick}\n                            >\n                                <Page pageNumber={pageNumber} onLoadSuccess={this.removeTextLayerOffset}/>\n                            </Document>                        \n                        </div>\n                    )\n                })}\n            </div>\n          );\n      }*/\n    \n    onPieEnter = (data, index) => {\n        this.setState({\n            activeIndex: index,\n        });\n    }\n\n\n    renderPieChart() {\n        let { modsCount, auditModsCount, completeModsCount, jiraModsCount, testableModsCount, revokedModsCount, activeIndex } = this.state;\n        let completeMods = completeModsCount + revokedModsCount;\n        let data = [\n            { name: 'Complete Mods', value: parseInt(`${completeMods}`) },\n            { name: 'JIRA Mods', value: parseInt(`${jiraModsCount}`) },\n            { name: 'Audit Mods', value: parseInt(`${auditModsCount}`) },\n            { name: 'Testable Mods', value: parseInt(`${testableModsCount}`) },\n          ];\n        let COLORS = ['#0088FE', '#00C49F', '#FFBB28', '#FF8042'];\n        return (\n                <PieChart width={400} height={400} style={{margin: '0 auto'}}>\n                    <Pie\n                    activeIndex={activeIndex}\n                    activeShape={renderActiveShape}\n                    data={data}\n                    cx={200}\n                    cy={200}\n                    innerRadius={60}\n                    outerRadius={80}\n                    fill=\"#8884d8\"\n                    dataKey=\"value\"\n                    onMouseEnter={this.onPieEnter}\n                    nameKey=\"name\"\n                    paddingAngle={5}\n                    >\n                    {\n                    data.map((entry, index) => (\n                        <Cell key={`slice-${index}`} fill={COLORS[index % COLORS.length]}/>\n                    ))\n                    }\n                    </Pie>\n                </PieChart>\n        )\n    }\n    \n    render() {\n        let { submission, vendor, jurisdictions, loadingItems, vendorId, application, versions } = this.state;\n        return(\n            <div style={{textAlign: 'center'}}>\n                <Test submissionId={this.props.match.params.submissionId} />\n                <h1 style={{textAlign: 'center'}}>{submission}</h1>\n                <Link to={`/manufacturer/${vendorId}`}><h3 style={{textAlign: 'center'}}>{vendor}</h3></Link><br />\n                <h1 style={{textAlign: 'center'}}><Link to={`/application/${application._id}`}>{application.name} {versions.map(y => {\n                    return (\n                        <span>{y.version}</span>\n                    )\n                })}</Link></h1>\n                <Collapsible \n                transitionTime=\"250\" \n                trigger={this.renderDropDown1()}\n                triggerWhenOpen={this.renderHide()}\n                >\n                {jurisdictions.map(jurs => {\n                    return(\n                        <div>\n                           <Link to={`/jurisdiction/${jurs._id}`}>{jurs.jurisdiction}</Link>\n                        </div>\n                    );\n                })}\n                </Collapsible>\n{/*                <Collapsible \n                transitionTime=\"250\" \n                trigger={this.renderDropDown2()}\n                triggerWhenOpen={this.renderHide()}\n                >\n                    {this.renderURNs()}\n</Collapsible>*/}\n                {this.renderPieChart()}\n                <ModsList submissionId={this.props.match.params.submissionId}/>\n                {loadingItems && <Loader />}\n            </div>\n        );\n    }\n}\n\nexport default Submission;"]},"metadata":{},"sourceType":"module"}