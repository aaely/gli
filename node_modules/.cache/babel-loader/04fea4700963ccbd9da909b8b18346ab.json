{"ast":null,"code":"import _regeneratorRuntime from \"/home/aely/gli/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aely/gli/src/Components/Submission.js\";\nimport React, { Component } from 'react';\nimport Test from './propstest';\nimport { Link } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nimport MyPieChart from './PieChart';\nimport { FaRegEdit } from 'react-icons/fa';\nimport { pdfjs, Document, Page, View } from 'react-pdf';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport htmlToDraft from 'html-to-draftjs';\nimport draftToHtml from 'draftjs-to-html';\nimport Collapsible from 'react-collapsible';\nimport ModsList from './ModsList';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Sector } from 'recharts';\npdfjs.GlobalWorkerOptions.workerSrc = \"//cdnjs.cloudflare.com/ajax/libs/pdf.js/\".concat(pdfjs.version, \"/pdf.worker.js\");\nvar apiUrl = process.env.API_URL || 'http://localhost:1337';\nvar strapi = new Strapi(apiUrl);\n\nvar Submission =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Submission, _Component);\n\n  function Submission(props) {\n    var _this;\n\n    _classCallCheck(this, Submission);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Submission).call(this, props));\n\n    _this.onEditorStateChange = function (editorState) {\n      _this.setState({\n        editorState: editorState,\n        html: draftToHtml(convertToRaw(editorState.getCurrentContent())).replace(/[\\n]/g, '')\n      });\n    };\n\n    _this.onDocumentLoadSuccess = function (_ref) {\n      var numPages = _ref.numPages;\n\n      _this.setState({\n        numPages: numPages\n      });\n    };\n\n    _this.changePage = function (offset) {\n      return _this.setState(function (prevState) {\n        return {\n          pageNumber: prevState.pageNumber + offset\n        };\n      });\n    };\n\n    _this.previousPage = function () {\n      return _this.changePage(-1);\n    };\n\n    _this.nextPage = function () {\n      return _this.changePage(1);\n    };\n\n    _this.tableOfContents = function () {\n      return _this.setState({\n        pageNumber: 4\n      });\n    };\n\n    _this.onItemClick = function (_ref2) {\n      var pageNumber = _ref2.pageNumber;\n      return _this.setState({\n        pageNumber: pageNumber\n      });\n    };\n\n    _this.removeTextLayerOffset = function () {\n      var textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n      textLayers.forEach(function (layer) {\n        var style = layer.style;\n        style.top = \"0\";\n        style.left = \"0\";\n        style.transform = \"\";\n      });\n    };\n\n    _this.renderURNs = function () {\n      var _this$state = _this.state,\n          urns = _this$state.urns,\n          pageNumber = _this$state.pageNumber,\n          numPages = _this$state.numPages;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195\n        },\n        __self: this\n      }, urns.map(function (a) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 198\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 199\n          },\n          __self: this\n        }, \"Page \", pageNumber || (numPages ? 1 : '--'), \" of \", numPages || '--'), React.createElement(\"button\", {\n          type: \"button\",\n          disabled: pageNumber <= 1,\n          onClick: _this.previousPage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 200\n          },\n          __self: this\n        }, \"Back\"), React.createElement(\"button\", {\n          type: \"button\",\n          disabled: pageNumber >= numPages,\n          onClick: _this.nextPage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207\n          },\n          __self: this\n        }, \"Next\"), React.createElement(\"button\", {\n          type: \"button\",\n          onClick: _this.tableOfContents,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214\n          },\n          __self: this\n        }, \"Table of Contents\"), React.createElement(Document, {\n          file: \"\".concat(apiUrl).concat(a.url),\n          className: \"canvas\",\n          onLoadSuccess: _this.onDocumentLoadSuccess,\n          onItemClick: _this.onItemClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220\n          },\n          __self: this\n        }, React.createElement(Page, {\n          pageNumber: pageNumber,\n          onLoadSuccess: _this.removeTextLayerOffset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 226\n          },\n          __self: this\n        })));\n      }));\n    };\n\n    var html = '<p>Testing 1234 ðŸ˜€</p>';\n    var contentBlock = htmlToDraft(html);\n\n    if (contentBlock) {\n      var contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      var editorState = EditorState.createWithContent(contentState);\n      _this.state = {\n        loadingItems: true,\n        submission: '',\n        jurisdictions: [],\n        vendor: '',\n        vendorId: '',\n        numPages: null,\n        pageNumber: 1,\n        urns: [],\n        mods: [],\n        application: [],\n        versions: [],\n        html: '',\n        editorState: editorState,\n        uploadedImages: [],\n        auditModsCount: 0,\n        modsCount: 0,\n        testableModsCount: 0,\n        completeModsCount: 0,\n        jiraModsCount: 0,\n        revokedModsCount: 0,\n        activeIndex: 0\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(Submission, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return strapi.request('POST', '/graphql', {\n                  data: {\n                    query: \"query {\\n                    submission (id : \\\"\".concat(this.props.match.params.submissionId, \"\\\") {\\n                        file\\n                        received\\n                        processed\\n                        begin\\n                        vendor {\\n                        _id\\n                        name\\n                        logo {\\n                          _id\\n                          url\\n                        }\\n                      }\\n                        jurisdictions {\\n                        _id\\n                        jurisdiction\\n                      }\\n                      urns {\\n                          _id\\n                          url\\n                      }\\n                      mods {\\n                          _id\\n                          modnumber\\n                          title\\n                          trackerid\\n                          moddetails\\n                          status\\n                          jira\\n                          testingzip {\\n                              _id\\n                              url\\n                          }\\n                      }\\n                      application {\\n                          _id\\n                          name\\n                      }\\n                      versions {\\n                          _id\\n                          version\\n                      }\\n                  }\\n                }\")\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n                this.setState({\n                  submission: response.data.submission.file,\n                  vendor: response.data.submission.vendor.name,\n                  jurisdictions: response.data.submission.jurisdictions,\n                  loadingItems: false,\n                  vendorId: response.data.submission.vendor._id,\n                  urns: response.data.submission.urns,\n                  application: response.data.submission.application,\n                  versions: response.data.submission.versions\n                });\n                console.log(this.state);\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                this.setState({\n                  loadingItems: false\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"renderDropDown1\",\n    value: function renderDropDown1() {\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 133\n        },\n        __self: this\n      }, \"Jurisdictions:\");\n    }\n  }, {\n    key: \"renderDropDown2\",\n    value: function renderDropDown2() {\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 141\n        },\n        __self: this\n      }, \"URNs:\");\n    }\n  }, {\n    key: \"renderDropDown3\",\n    value: function renderDropDown3() {\n      var modsCount = this.state.modsCount;\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Mods:  (\", modsCount, \")\");\n    }\n  }, {\n    key: \"renderHide\",\n    value: function renderHide() {\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158\n        },\n        __self: this\n      }, \"Hide\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          urns = _this$state2.urns,\n          submission = _this$state2.submission,\n          vendor = _this$state2.vendor,\n          jurisdictions = _this$state2.jurisdictions,\n          loadingItems = _this$state2.loadingItems,\n          vendorId = _this$state2.vendorId,\n          application = _this$state2.application,\n          versions = _this$state2.versions;\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, submission), React.createElement(Link, {\n        to: \"/manufacturer/\".concat(vendorId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }, vendor)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 240\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/application/\".concat(application._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 241\n        },\n        __self: this\n      }, application.name, \" \", versions.map(function (y) {\n        return React.createElement(\"span\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }, y.version);\n      }))), React.createElement(Collapsible, {\n        transitionTime: \"250\",\n        trigger: this.renderDropDown1(),\n        triggerWhenOpen: this.renderHide(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, jurisdictions.map(function (jurs) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 253\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/jurisdiction/\".concat(jurs._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, jurs.jurisdiction));\n      })), urns.length > 0 && React.createElement(Collapsible, {\n        transitionTime: \"250\",\n        trigger: this.renderDropDown2(),\n        triggerWhenOpen: this.renderHide(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 260\n        },\n        __self: this\n      }, this.renderURNs()), loadingItems === false && React.createElement(MyPieChart, {\n        submissionId: this.props.match.params.submissionId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 267\n        },\n        __self: this\n      }), React.createElement(ModsList, {\n        submissionId: this.props.match.params.submissionId,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 268\n        },\n        __self: this\n      }), loadingItems && React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 269\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Submission;\n}(Component);\n\nexport default Submission;","map":{"version":3,"sources":["/home/aely/gli/src/Components/Submission.js"],"names":["React","Component","Test","Link","Strapi","Loader","MyPieChart","FaRegEdit","pdfjs","Document","Page","View","Editor","EditorState","convertToRaw","ContentState","htmlToDraft","draftToHtml","Collapsible","ModsList","PieChart","Pie","Cell","ResponsiveContainer","Sector","GlobalWorkerOptions","workerSrc","version","apiUrl","process","env","API_URL","strapi","Submission","props","onEditorStateChange","editorState","setState","html","getCurrentContent","replace","onDocumentLoadSuccess","numPages","changePage","offset","prevState","pageNumber","previousPage","nextPage","tableOfContents","onItemClick","removeTextLayerOffset","textLayers","document","querySelectorAll","forEach","layer","style","top","left","transform","renderURNs","state","urns","map","a","url","contentBlock","contentState","createFromBlockArray","contentBlocks","createWithContent","loadingItems","submission","jurisdictions","vendor","vendorId","mods","application","versions","uploadedImages","auditModsCount","modsCount","testableModsCount","completeModsCount","jiraModsCount","revokedModsCount","activeIndex","request","data","query","match","params","submissionId","response","file","name","_id","console","log","textAlign","y","renderDropDown1","renderHide","jurs","jurisdiction","length","renderDropDown2"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Test from './propstest';\nimport { Link } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nimport MyPieChart from './PieChart';\nimport { FaRegEdit } from 'react-icons/fa';\nimport { pdfjs, Document, Page, View } from 'react-pdf';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport htmlToDraft from 'html-to-draftjs';\nimport draftToHtml from 'draftjs-to-html';\nimport Collapsible from 'react-collapsible';\nimport ModsList from './ModsList';\nimport { PieChart, Pie, Cell, ResponsiveContainer, Sector } from 'recharts';\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\nconst apiUrl = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiUrl);\n\nclass Submission extends Component {\n\n    constructor(props) {\n        super(props);\n        let html = '<p>Testing 1234 ðŸ˜€</p>';\n        let contentBlock = htmlToDraft(html);\n        if (contentBlock) {\n            let contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n            let editorState = EditorState.createWithContent(contentState);\n            this.state = {\n                loadingItems: true,\n                submission: '',\n                jurisdictions: [],\n                vendor: '',\n                vendorId: '',\n                numPages: null,\n                pageNumber: 1,\n                urns: [],\n                mods: [],\n                application: [],\n                versions: [],\n                html: '',\n                editorState,\n                uploadedImages: [],\n                auditModsCount: 0,\n                modsCount: 0,\n                testableModsCount: 0,\n                completeModsCount: 0,\n                jiraModsCount: 0,\n                revokedModsCount: 0,\n                activeIndex: 0\n            }\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            let response = await strapi.request('POST', '/graphql', {\n            data: {\n                query: `query {\n                    submission (id : \"${this.props.match.params.submissionId}\") {\n                        file\n                        received\n                        processed\n                        begin\n                        vendor {\n                        _id\n                        name\n                        logo {\n                          _id\n                          url\n                        }\n                      }\n                        jurisdictions {\n                        _id\n                        jurisdiction\n                      }\n                      urns {\n                          _id\n                          url\n                      }\n                      mods {\n                          _id\n                          modnumber\n                          title\n                          trackerid\n                          moddetails\n                          status\n                          jira\n                          testingzip {\n                              _id\n                              url\n                          }\n                      }\n                      application {\n                          _id\n                          name\n                      }\n                      versions {\n                          _id\n                          version\n                      }\n                  }\n                }`\n            }\n        }\n        );\n        this.setState({\n            submission: response.data.submission.file,\n            vendor: response.data.submission.vendor.name,\n            jurisdictions: response.data.submission.jurisdictions,\n            loadingItems: false,\n            vendorId: response.data.submission.vendor._id,\n            urns: response.data.submission.urns,\n            application: response.data.submission.application,\n            versions: response.data.submission.versions,\n        });\n        console.log(this.state);\n        }catch (err) {\n            console.log(err);\n            this.setState({ loadingItems: false });\n        }\n    }\n\n    onEditorStateChange = (editorState) => {\n        this.setState({\n            editorState,\n            html: draftToHtml(convertToRaw(editorState.getCurrentContent())).replace(/[\\n]/g, '')\n        });\n    }\n\n    renderDropDown1() {\n        return (\n            <span className=\"trigger\">\n                Jurisdictions:\n            </span>\n        );\n    }\n\n    renderDropDown2() {\n        return (\n            <span className=\"trigger\">\n                URNs:\n            </span>\n        );\n    }\n\n    renderDropDown3() {\n        let { modsCount } = this.state;\n        return (\n            <span className=\"trigger\">\n                Mods:  ({modsCount})\n            </span>\n        );\n    }\n\n    renderHide() {\n        return (\n            <span className=\"trigger\">\n                Hide\n            </span>\n        );\n    }\n\n\n    onDocumentLoadSuccess = ({ numPages }) => {\n        this.setState({ numPages });\n      }\n\n      changePage = offset => this.setState(prevState => ({\n        pageNumber: prevState.pageNumber + offset,\n      }));\n    \n      previousPage = () => this.changePage(-1);\n    \n      nextPage = () => this.changePage(1);\n\n      tableOfContents = () => this.setState({ pageNumber: 4});\n\n      onItemClick = ({ pageNumber }) => this.setState({ pageNumber: pageNumber });\n\n      //removes the offset of text from the rendered PDF file\n      removeTextLayerOffset = () => {\n        const textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n          textLayers.forEach(layer => {\n            const { style } = layer;\n            style.top = \"0\";\n            style.left = \"0\";\n            style.transform = \"\";\n        });\n      }\n\n      renderURNs = () => {\n          let { urns, pageNumber, numPages } = this.state;\n          return (\n            <div>\n                {urns.map(a => {\n                    return (\n                        <div>\n                            <p>Page {pageNumber || (numPages ? 1 : '--')} of {numPages || '--'}</p>\n                            <button\n                            type=\"button\"\n                            disabled={pageNumber <= 1}\n                            onClick={this.previousPage}\n                            >\n                                Back\n                            </button>\n                            <button\n                            type=\"button\"\n                            disabled={pageNumber >= numPages}\n                            onClick={this.nextPage}\n                            >\n                                Next\n                            </button>\n                            <button\n                            type=\"button\"\n                            onClick={this.tableOfContents}\n                            >\n                                Table of Contents\n                            </button>\n                            <Document\n                            file={`${apiUrl}${a.url}`}\n                            className='canvas'\n                            onLoadSuccess={this.onDocumentLoadSuccess}\n                            onItemClick={this.onItemClick}\n                            >\n                                <Page pageNumber={pageNumber} onLoadSuccess={this.removeTextLayerOffset}/>\n                            </Document>                        \n                        </div>\n                    )\n                })}\n            </div>\n          );\n      }\n    \n    render() {\n        let { urns, submission, vendor, jurisdictions, loadingItems, vendorId, application, versions } = this.state;\n        return(\n            <div style={{textAlign: 'center'}}>\n                <h1 style={{textAlign: 'center'}}>{submission}</h1>\n                <Link to={`/manufacturer/${vendorId}`}><h3 style={{textAlign: 'center'}}>{vendor}</h3></Link><br />\n                <h1 style={{textAlign: 'center'}}><Link to={`/application/${application._id}`}>{application.name} {versions.map(y => {\n                    return (\n                        <span>{y.version}</span>\n                    )\n                })}</Link></h1>\n                <Collapsible \n                transitionTime=\"250\" \n                trigger={this.renderDropDown1()}\n                triggerWhenOpen={this.renderHide()}\n                >\n                {jurisdictions.map(jurs => {\n                    return(\n                        <div>\n                           <Link to={`/jurisdiction/${jurs._id}`}>{jurs.jurisdiction}</Link>\n                        </div>\n                    );\n                })}\n                </Collapsible>\n                {urns.length > 0 && \n                <Collapsible \n                transitionTime=\"250\" \n                trigger={this.renderDropDown2()}\n                triggerWhenOpen={this.renderHide()}\n                >\n                    {this.renderURNs()}\n                </Collapsible>}\n                {loadingItems === false && <MyPieChart submissionId={this.props.match.params.submissionId}/>}\n                <ModsList submissionId={this.props.match.params.submissionId}/>\n                {loadingItems && <Loader />}\n            </div>\n        );\n    }\n}\n\nexport default Submission;"]},"metadata":{},"sourceType":"module"}