{"ast":null,"code":"import _classCallCheck from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\aaron_e\\\\gli\\\\src\\\\Components\\\\Manufacturers.js\";\nimport React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport Strapi from \"strapi-sdk-javascript/build/main\";\nimport Iframe from 'react-iframe';\nimport { Box, SearchField, Icon, Image, Text, Card, Button, Container } from 'gestalt';\nimport Loader from './Loader';\nvar apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\nvar strapi = new Strapi(apiUrl);\n\nvar Manufacturers =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Manufacturers, _Component);\n\n  function Manufacturers() {\n    _classCallCheck(this, Manufacturers);\n\n    return _possibleConstructorReturn(this, _getPrototypeOf(Manufacturers).apply(this, arguments));\n  }\n\n  _createClass(Manufacturers, [{\n    key: \"render\",\n\n    /*state = {\r\n        submissions: [],\r\n        searchTerm: '',\r\n        loadingItems: true\r\n    }\r\n      async componentDidMount() {\r\n        try {\r\n            const response = await strapi.request('POST', '/graphql', {\r\n                data: {\r\n                    query: `query {\r\n                        submissions{\r\n                            _id\r\n                            file\r\n                            received\r\n                            processed\r\n                            begin\r\n                            vendor {\r\n                                _id\r\n                                name\r\n                                logo {\r\n                                  _id\r\n                                  url\r\n                                }\r\n                              }                              \r\n                            jurisdictions {\r\n                              _id\r\n                              jurisdiction\r\n                              number\r\n                            }\r\n                          application {\r\n                            _id\r\n                            name\r\n                          }\r\n                          versions {\r\n                            _id\r\n                            version\r\n                          }\r\n                        }\r\n                    }`\r\n                }\r\n            });\r\n            console.log(response);\r\n            this.setState({ \r\n                submissions: response.data.submissions,\r\n                  loadingItems: false\r\n            });\r\n            console.log(this.state.submissions);\r\n        } catch(err) {\r\n            console.error(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n      handleChange = ({ value }) => {\r\n        this.setState({ searchTerm: value});\r\n    };\r\n      filteredItems = ({ searchTerm, submissions }) => {\r\n        return submissions.filter(prop => {\r\n            return prop.vendor.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n        });\r\n    };*/\n    value: function render() {\n      //let { loadingItems, searchTerm } = this.state;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 86\n        },\n        __self: this\n      }, React.createElement(Iframe, {\n        url: \"http://www.youtube.com/embed/xDMP3i36naA\",\n        width: \"100%\",\n        height: \"100%\",\n        id: \"myId\",\n        className: \"myClassname\",\n        display: \"initial\",\n        position: \"absolute\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Manufacturers;\n}(Component);\n\nexport default Manufacturers;","map":{"version":3,"sources":["C:\\Users\\aaron_e\\gli\\src\\Components\\Manufacturers.js"],"names":["React","Component","Link","Strapi","Iframe","Box","SearchField","Icon","Image","Text","Card","Button","Container","Loader","apiUrl","process","env","API_URL","strapi","Manufacturers"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAAQC,GAAR,EACQC,WADR,EAEQC,IAFR,EAGQC,KAHR,EAIQC,IAJR,EAKQC,IALR,EAMQC,MANR,EAOQC,SAPR,QAOyB,SAPzB;AAQA,OAAOC,MAAP,MAAmB,UAAnB;AACA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,uBAAtC;AACA,IAAMC,MAAM,GAAG,IAAIf,MAAJ,CAAWW,MAAX,CAAf;;IAEMK,a;;;;;;;;;;;;;;AACF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;6BAiES;AACL;AACA,aACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SA+DY,oBAAC,MAAD;AAAQ,QAAA,GAAG,EAAC,0CAAZ;AACA,QAAA,KAAK,EAAC,MADN;AAEA,QAAA,MAAM,EAAC,MAFP;AAGA,QAAA,EAAE,EAAC,MAHH;AAIA,QAAA,SAAS,EAAC,aAJV;AAKA,QAAA,OAAO,EAAC,SALR;AAMA,QAAA,QAAQ,EAAC,UANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QA/DZ,CADA;AA0EH;;;;EA9IuBlB,S;;AAiJ5B,eAAekB,aAAf","sourcesContent":["import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Strapi from \"strapi-sdk-javascript/build/main\";\r\nimport Iframe from 'react-iframe';\r\nimport {Box, \r\n        SearchField, \r\n        Icon,\r\n        Image,\r\n        Text,\r\n        Card,\r\n        Button,\r\n        Container } from 'gestalt';\r\nimport Loader from './Loader';\r\nconst apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass Manufacturers extends Component {\r\n    /*state = {\r\n        submissions: [],\r\n        searchTerm: '',\r\n        loadingItems: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await strapi.request('POST', '/graphql', {\r\n                data: {\r\n                    query: `query {\r\n                        submissions{\r\n                            _id\r\n                            file\r\n                            received\r\n                            processed\r\n                            begin\r\n                            vendor {\r\n                                _id\r\n                                name\r\n                                logo {\r\n                                  _id\r\n                                  url\r\n                                }\r\n                              }                              \r\n                            jurisdictions {\r\n                              _id\r\n                              jurisdiction\r\n                              number\r\n                            }\r\n                          application {\r\n                            _id\r\n                            name\r\n                          }\r\n                          versions {\r\n                            _id\r\n                            version\r\n                          }\r\n                        }\r\n                    }`\r\n                }\r\n            });\r\n            console.log(response);\r\n            this.setState({ \r\n                submissions: response.data.submissions,\r\n\r\n                loadingItems: false\r\n            });\r\n            console.log(this.state.submissions);\r\n        } catch(err) {\r\n            console.error(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n\r\n    handleChange = ({ value }) => {\r\n        this.setState({ searchTerm: value});\r\n    };\r\n\r\n    filteredItems = ({ searchTerm, submissions }) => {\r\n        return submissions.filter(prop => {\r\n            return prop.vendor.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n        });\r\n    };*/\r\n\r\n    render() {\r\n        //let { loadingItems, searchTerm } = this.state;\r\n        return(\r\n        <div>\r\n            {/*<Container>\r\n                <Box display=\"flex\" justifyContent=\"center\" marginTop={4} marginBottom={4}>\r\n                <SearchField \r\n                id=\"searchField\" \r\n                accessibilityLabel=\"Items search field\" \r\n                onChange={this.handleChange} \r\n                placeholder=\"Search by Manufacturer\" \r\n                value={searchTerm}\r\n                />\r\n                <Box\r\n                margin={2}\r\n                >\r\n                    <Icon \r\n                    icon=\"filter\"\r\n                    color={searchTerm ? 'orange' : 'gray'}\r\n                    size={20}\r\n                    accessibilityLabel=\"Filter\"\r\n                    />\r\n                </Box>\r\n                </Box>\r\n                <Box wrap display =\"flex\" \r\n                justifyContent=\"around\"\r\n                dangerouslySetInlineStyle={{\r\n                    __style: {\r\n                        backgroundColor: '#d6e5ff'\r\n                    }\r\n                }}\r\n                shape= \"rounded\"\r\n            >\r\n            this.filteredItems(this.state).map(sub => {\r\n                console.log(sub);\r\n                return(\r\n                    <div className=\"card\" key={sub._id} style={{marginTop: '30px', width: '100%', display: 'inline-block', marginRight: '3px', marginLeft: '3px'}}>\r\n                    <div className=\"card-title\" style={{textAlign: 'center'}}>{sub.file}</div>\r\n                    <div className=\"card-image\" style={{height: '50%', width: '50%'}}>\r\n                        <Image src={`${apiUrl}${sub.vendor.logo.url}`} alt={`${sub.vendor.logo._id}`} className='coffeeimage' style={{width: '10%', height: '10%'}}/>\r\n                    </div>\r\n                    <div className=\"card-content\" style={{backgroundColor:'#686c72'}}>    \r\n                        <p></p>\r\n                        <p>Manufacturer : <span className=\"right\">{sub.vendor.name}</span></p>\r\n                        <p>Jurisdictions: {sub.jurisdictions.map(a => {\r\n                            return (\r\n                                <span>\r\n                                <Link style={{color: 'orange'}}to={`/jurisdiction/${a._id}`}>{a.jurisdiction} </Link>\r\n                                </span>\r\n                            )\r\n                        })} </p> \r\n                        <p>Application: <Link style={{color: '#7FFF00'}} to={`/application/${sub.application._id}`}>{sub.application.name}</Link></p>\r\n                        <p>Version: {sub.versions.map(a => {\r\n                            return (\r\n                                <span style={{textAlign: 'yellow'}}>{a.version}</span>\r\n                            )\r\n                        })}</p>\r\n                    </div>\r\n                    <div className=\"card-action\" style={{textAlign: 'center', backgroundColor:'#686c72'}}>\r\n                        <Link to={`/submission/${sub._id}`}>{sub.file}</Link>\r\n                    </div>\r\n                    </div>\r\n                    )})\r\n                    </Box>\r\n            </Container>*/}\r\n            \r\n                    <Iframe url=\"http://www.youtube.com/embed/xDMP3i36naA\"\r\n                    width=\"100%\"\r\n                    height=\"100%\"\r\n                    id=\"myId\"\r\n                    className=\"myClassname\"\r\n                    display=\"initial\"\r\n                    position=\"absolute\"/>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Manufacturers;"]},"metadata":{},"sourceType":"module"}