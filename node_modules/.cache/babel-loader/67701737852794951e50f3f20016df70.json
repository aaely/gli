{"ast":null,"code":"import _regeneratorRuntime from \"/home/aely/gli/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aely/gli/src/Components/ModRewrites.js\";\nimport React, { Component } from 'react';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nvar apiUrl = process.env.API_URL || 'http://localhost:1337';\nvar strapi = new Strapi(apiUrl);\n\nvar ModRewrites =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModRewrites, _Component);\n\n  function ModRewrites(props) {\n    var _this;\n\n    _classCallCheck(this, ModRewrites);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModRewrites).call(this, props));\n    _this.state = {\n      versions: []\n    };\n    return _this;\n  }\n\n  _createClass(ModRewrites, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                console.log(this.props.match.params.submissionId);\n                _context.next = 4;\n                return strapi.request('POST', '/graphql', {\n                  data: {\n                    query: \"query {\\n                    submission (id: \\\"\".concat(this.props.match.params.submissionId, \"\\\") {\\n                        versions {\\n                            _id\\n                            version\\n                            mods {\\n                                _id\\n                                rewrite\\n                            }\\n                        }\\n                  }\\n                }\")\n                  }\n                });\n\n              case 4:\n                response = _context.sent;\n                this.setState({\n                  versions: response.data.submission.versions\n                });\n                _context.next = 12;\n                break;\n\n              case 8:\n                _context.prev = 8;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                this.setState({\n                  loadingItems: false\n                });\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 8]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var versions = this.state.versions;\n      var start = 1;\n      console.log(versions);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      }, React.createElement(\"ol\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51\n        },\n        __self: this\n      }, versions.map(function (a) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 54\n          },\n          __self: this\n        }, React.createElement(\"h5\", {\n          style: {\n            textAlign: 'center'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, React.createElement(\"u\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 55\n          },\n          __self: this\n        }, a.version)), a.mods.map(function (b) {\n          return React.createElement(\"li\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 58\n            },\n            __self: this\n          }, b.rewrite, \" \");\n        }));\n      })));\n    }\n  }]);\n\n  return ModRewrites;\n}(Component);\n\nexport default ModRewrites;","map":{"version":3,"sources":["/home/aely/gli/src/Components/ModRewrites.js"],"names":["React","Component","Strapi","Loader","apiUrl","process","env","API_URL","strapi","ModRewrites","props","state","versions","console","log","match","params","submissionId","request","data","query","response","setState","submission","loadingItems","start","map","a","textAlign","version","mods","b","rewrite"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,kCAAnB;AACA,OAAOC,MAAP,MAAmB,UAAnB;AACA,IAAMC,MAAM,GAAGC,OAAO,CAACC,GAAR,CAAYC,OAAZ,IAAuB,uBAAtC;AACA,IAAMC,MAAM,GAAG,IAAIN,MAAJ,CAAWE,MAAX,CAAf;;IAEMK,W;;;;;AAEF,uBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,qFAAMA,KAAN;AACA,UAAKC,KAAL,GAAa;AACTC,MAAAA,QAAQ,EAAE;AADD,KAAb;AAFe;AAKlB;;;;;;;;;;;;;;AAIOC,gBAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,YAApC;;uBACqBT,MAAM,CAACU,OAAP,CAAe,MAAf,EAAuB,UAAvB,EAAmC;AACxDC,kBAAAA,IAAI,EAAE;AACFC,oBAAAA,KAAK,2DACkB,KAAKV,KAAL,CAAWK,KAAX,CAAiBC,MAAjB,CAAwBC,YAD1C;AADH;AADkD,iBAAnC,C;;;AAAjBI,gBAAAA,Q;AAiBR,qBAAKC,QAAL,CAAc;AACVV,kBAAAA,QAAQ,EAAES,QAAQ,CAACF,IAAT,CAAcI,UAAd,CAAyBX;AADzB,iBAAd;;;;;;;AAIIC,gBAAAA,OAAO,CAACC,GAAR;AACA,qBAAKQ,QAAL,CAAc;AAAEE,kBAAAA,YAAY,EAAE;AAAhB,iBAAd;;;;;;;;;;;;;;;;6BAIC;AAAA,UACCZ,QADD,GACc,KAAKD,KADnB,CACCC,QADD;AAEL,UAAIa,KAAK,GAAG,CAAZ;AACAZ,MAAAA,OAAO,CAACC,GAAR,CAAYF,QAAZ;AACA,aACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACKA,QAAQ,CAACc,GAAT,CAAa,UAAAC,CAAC,EAAI;AACf,eACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WACA;AAAI,UAAA,KAAK,EAAE;AAACC,YAAAA,SAAS,EAAE;AAAZ,WAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAkC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAID,CAAC,CAACE,OAAN,CAAlC,CADA,EAECF,CAAC,CAACG,IAAF,CAAOJ,GAAP,CAAW,UAAAK,CAAC,EAAI;AACb,iBACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAAKA,CAAC,CAACC,OAAP,MADJ;AAGH,SAJA,CAFD,CADJ;AAUH,OAXA,CADL,CADJ,CADJ;AAkBH;;;;EA5DqB/B,S;;AAgE1B,eAAeQ,WAAf","sourcesContent":["import React, { Component } from 'react';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nconst apiUrl = process.env.API_URL || 'http://localhost:1337';\nconst strapi = new Strapi(apiUrl);\n\nclass ModRewrites extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            versions: []\n        }\n    }\n\n    async componentDidMount() {\n        try {\n            console.log(this.props.match.params.submissionId);\n            let response = await strapi.request('POST', '/graphql', {\n            data: {\n                query: `query {\n                    submission (id: \"${this.props.match.params.submissionId}\") {\n                        versions {\n                            _id\n                            version\n                            mods {\n                                _id\n                                rewrite\n                            }\n                        }\n                  }\n                }`\n            }\n        }\n        );\n        this.setState({\n            versions: response.data.submission.versions\n        });\n        }catch (err) {\n            console.log(err);\n            this.setState({ loadingItems: false });\n        }\n    }\n\n    render() {\n        let { versions } = this.state;\n        let start = 1;\n        console.log(versions);\n        return(\n            <div>\n                <ol>\n                    {versions.map(a => {\n                        return(\n                            <div>\n                            <h5 style={{textAlign: 'center'}}><u>{a.version}</u></h5>\n                            {a.mods.map(b => {\n                                return(\n                                    <li>{b.rewrite} </li>\n                                )\n                            })}\n                            </div>\n                        )\n                    })}\n                </ol>\n            </div>\n        )\n    }\n\n}\n\nexport default ModRewrites;"]},"metadata":{},"sourceType":"module"}