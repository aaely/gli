{"ast":null,"code":"import _regeneratorRuntime from \"/home/aely/gli/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aely/gli/src/Components/UpdateMod.js\";\nimport React, { Component } from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { Form, Input, Button, Label, FormGroup, FormText, Col, Row } from 'reactstrap';\nimport Loader from './Loader';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport htmlToDraft from 'html-to-draftjs';\nimport draftToHtml from 'draftjs-to-html';\nimport { FaTrash, FaCheck } from 'react-icons/fa';\nvar apiUrl = process.env.API_URL || 'http://192.168.0.248:1337';\nvar strapi = new Strapi(apiUrl);\n\nvar UpdateMod =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(UpdateMod, _Component);\n\n  function UpdateMod(props) {\n    var _this;\n\n    _classCallCheck(this, UpdateMod);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(UpdateMod).call(this, props));\n\n    _this.handleTrackerIDChange = function (event) {\n      _this.setState({\n        trackerID: event.target.value\n      });\n\n      console.log(_this.state);\n    };\n\n    _this.handleStatusChange = function (event) {\n      _this.setState({\n        status: event.target.value\n      });\n    };\n\n    _this.handleRewriteChange = function (event) {\n      _this.setState({\n        rewrite: event.target.value\n      });\n    };\n\n    _this.handleTitleChange = function (event) {\n      _this.setState({\n        title: event.target.value\n      });\n    };\n\n    _this.handleModNumberChange = function (event) {\n      _this.setState({\n        modnumber: event.target.value\n      });\n    };\n\n    _this.handleSidenotesChange = function (event) {\n      _this.setState({\n        sidenotes: event.target.value\n      });\n    };\n\n    _this.handleTestingzip = function (event) {\n      _this.setState({\n        testingzip: event.target.value\n      });\n    };\n\n    _this.handleJiraChange = function (event) {\n      _this.setState({\n        jira: event.target.value\n      });\n    };\n\n    _this.handleVersionChange = function (event) {\n      _this.setState({\n        versionaffected: event.target.value\n      });\n    };\n\n    _this.handleIsAuditChange = function (event) {\n      _this.setState({\n        isaudit: !_this.state.isaudit\n      });\n    };\n\n    _this.handleVersionsChange = function (event) {\n      var ver = _this.state.versions.filter(function (prop) {\n        return prop.version.toLowerCase().includes(\"\".concat(event.target.value).toLowerCase());\n      });\n\n      if (_this.state.showinitialversion === true) {\n        _this.setState({\n          showinitialversion: false\n        });\n      }\n\n      _this.setState({\n        version: ver[0]._id\n      });\n    };\n\n    _this.onEditorStateChange = function (editorState) {\n      _this.setState({\n        editorState: editorState,\n        moddetails: draftToHtml(convertToRaw(editorState.getCurrentContent())).replace(/[\\n]/g, '')\n      });\n    };\n\n    _this.onEditorStateChange1 = function (editorState1) {\n      _this.setState({\n        editorState1: editorState1,\n        teststeps: draftToHtml(convertToRaw(editorState1.getCurrentContent())).replace(/[\\n]/g, '')\n      });\n    };\n\n    _this.saveMod =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee() {\n      var _this$state, isaudit, jira, versionaffected, sidenotes, appId, moddetails, teststeps, trackerID, status, rewrite, title, version, modnumber, subId;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _this$state = _this.state, isaudit = _this$state.isaudit, jira = _this$state.jira, versionaffected = _this$state.versionaffected, sidenotes = _this$state.sidenotes, appId = _this$state.appId, moddetails = _this$state.moddetails, teststeps = _this$state.teststeps, trackerID = _this$state.trackerID, status = _this$state.status, rewrite = _this$state.rewrite, title = _this$state.title, version = _this$state.version, modnumber = _this$state.modnumber, subId = _this$state.subId;\n\n              if (sidenotes === null) {\n                _this.setState({\n                  sidenotes: ''\n                });\n              }\n\n              if (rewrite === null) {\n                _this.setState({\n                  rewrite: ''\n                });\n              }\n\n              if (jira == \"https://tracker.gaminglabs.com:8443/browse/\") {\n                jira = '';\n                console.log(jira);\n              }\n\n              moddetails = moddetails.replace(/\"/g, '\\'\\'\\'');\n              moddetails = moddetails.replace(/\\\\/g, '----');\n              teststeps = teststeps.replace(/\"/g, '\\'\\'\\'');\n              teststeps = teststeps.replace(/\\\\/g, '----');\n              _context.next = 11;\n              return strapi.request('POST', '/graphql', {\n                data: {\n                  query: \"mutation {\\n                        updateMods(input: {\\n                          where: {\\n                              id: \\\"\".concat(_this.props.match.params.modId, \"\\\"\\n                          }\\n                          data: {\\n                            title: \\\"\").concat(title, \"\\\",\\n                            trackerid: \\\"\").concat(trackerID, \"\\\",\\n                            status: \").concat(status, \",\\n                            modnumber: \").concat(modnumber, \",\\n                            teststeps: \\\"\").concat(teststeps, \"\\\",\\n                            moddetails: \\\"\").concat(moddetails, \"\\\",\\n                            rewrite: \\\"\").concat(rewrite, \"\\\",\\n                            application: \\\"\").concat(appId, \"\\\",\\n                            submissions: \\\"\").concat(_this.props.match.params.submissionId, \"\\\",\\n                            versions: \\\"\").concat(version, \"\\\",\\n                            sidenotes: \\\"\").concat(sidenotes, \"\\\",\\n                            versionaffected: \\\"\").concat(versionaffected, \"\\\",\\n                            jira: \\\"\").concat(jira, \"\\\",\\n                            isaudit: \").concat(isaudit, \"\\n                          }\\n                        }) {\\n                          mod {\\n                            title\\n                            trackerid\\n                            status\\n                            jira\\n                            modnumber\\n                            teststeps\\n                            moddetails\\n                            rewrite\\n                            sidenotes\\n                            isaudit\\n                          }\\n                        }\\n                      }\")\n                }\n              });\n\n            case 11:\n              console.log('success!');\n\n              _this.props.history.goBack();\n\n              _context.next = 19;\n              break;\n\n            case 15:\n              _context.prev = 15;\n              _context.t0 = _context[\"catch\"](0);\n              console.log(_context.t0);\n\n              _this.setState({\n                loadingItems: false\n              });\n\n            case 19:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, this, [[0, 15]]);\n    }));\n    _this.deleteMod =\n    /*#__PURE__*/\n    _asyncToGenerator(\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function _callee2() {\n      var subId;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.prev = 0;\n              subId = _this.state.subId;\n              _context2.next = 4;\n              return strapi.request('POST', '/graphql', {\n                data: {\n                  query: \"mutation {\\n                        deleteMods(input: {\\n                          where: {\\n                            id: \\\"\".concat(_this.props.match.params.modId, \"\\\"\\n                          }\\n                        }) {\\n                          mod {\\n                            title\\n                            trackerid\\n                          }\\n                        }\\n                      }\")\n                }\n              });\n\n            case 4:\n              _this.props.history.push(\"/submission/\".concat(subId));\n\n              _context2.next = 10;\n              break;\n\n            case 7:\n              _context2.prev = 7;\n              _context2.t0 = _context2[\"catch\"](0);\n              console.log(_context2.t0);\n\n            case 10:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, this, [[0, 7]]);\n    }));\n\n    _this._uploadImageCallBack = function (file) {\n      // long story short, every time we upload an image, we\n      // need to save it to the state so we can get it's data\n      // later when we decide what to do with it.\n      // Make sure you have a uploadImages: [] as your default state\n      var uploadedImages = _this.state.uploadedImages;\n      console.log(uploadedImages);\n      var imageObject = {\n        file: file,\n        localSrc: URL.createObjectURL(file),\n        dburl: \"\".concat(apiUrl, \"/uploads/\").concat(file.name)\n      };\n      uploadedImages.push(imageObject);\n\n      _this.setState({\n        uploadedImages: uploadedImages\n      }); // We need to return a promise with the image src\n      // the img src we will use here will be what's needed\n      // to preview it in the browser. This will be different than what\n      // we will see in the index.md file we generate.\n\n\n      return new Promise(function (resolve, reject) {\n        resolve({\n          data: {\n            link: imageObject.localSrc\n          }\n        });\n      });\n    };\n\n    var _moddetails = '';\n    var contentBlock = htmlToDraft(_moddetails);\n\n    if (contentBlock) {\n      var contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      var editorState = EditorState.createWithContent(contentState);\n      var editorState1 = EditorState.createWithContent(contentState);\n      _this.state = {\n        editorState: editorState,\n        editorState1: editorState1,\n        uploadedImages: [],\n        moddetails: '',\n        teststeps: '',\n        trackerID: '',\n        status: null,\n        rewrite: '',\n        title: '',\n        modnumber: 0,\n        submission: '',\n        app: '',\n        appId: '',\n        version: '',\n        subId: '',\n        sidenotes: '',\n        testingzip: [],\n        versionaffected: '',\n        loadingItems: true,\n        jira: '',\n        versions: '',\n        showinitialversion: true,\n        isaudit: false\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(UpdateMod, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var response, initialversion, x, y, contentBlock, contentBlock1, contentState, contentState1, editorState, editorState1;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return strapi.request('POST', '/graphql', {\n                  data: {\n                    query: \"query {\\n                    mod (id : \\\"\".concat(this.props.match.params.modId, \"\\\") {\\n                      title\\n                      moddetails\\n                      teststeps\\n                      modnumber\\n                      trackerid\\n                      status\\n                      rewrite\\n                      sidenotes\\n                      isaudit\\n                      jira\\n                      versionaffected\\n                      versions {\\n                          _id\\n                      }\\n                      submissions {\\n                          _id\\n                          file\\n                          versions {\\n                              _id\\n                              version\\n                          }\\n                      }\\n                      application {\\n                          _id\\n                          name\\n                      }\\n                  }\\n                }\")\n                  }\n                });\n\n              case 3:\n                response = _context3.sent;\n                initialversion = response.data.mod.submissions[0].versions.filter(function (prop) {\n                  return prop._id.toLowerCase().includes(\"\".concat(response.data.mod.versions[0]._id));\n                });\n                console.log(initialversion);\n                this.setState({\n                  moddetails: response.data.mod.moddetails,\n                  teststeps: response.data.mod.teststeps,\n                  trackerID: response.data.mod.trackerid,\n                  status: response.data.mod.status,\n                  rewrite: response.data.mod.rewrite,\n                  title: response.data.mod.title,\n                  modnumber: response.data.mod.modnumber,\n                  submission: response.data.mod.submissions[0].file,\n                  app: response.data.mod.application.name,\n                  appId: response.data.mod.application._id,\n                  version: response.data.mod.versions[0]._id,\n                  subId: response.data.mod.submissions[0]._id,\n                  sidenotes: response.data.mod.sidenotes,\n                  versionaffected: response.data.mod.versionaffected,\n                  loadingItems: false,\n                  jira: response.data.mod.jira,\n                  versions: response.data.mod.submissions[0].versions,\n                  initialversion: initialversion[0].version,\n                  isaudit: response.data.mod.isaudit\n                });\n\n                if (this.state.teststeps === null) {\n                  this.setState({\n                    teststeps: '<p>Input test steps here</p>'\n                  });\n                }\n\n                if (this.state.moddetails === null) {\n                  this.setState({\n                    moddetails: '<p>Input test mod details here</p>'\n                  });\n                }\n\n                if (this.state.jira === null || this.state.jira === '') {\n                  this.setState({\n                    jira: 'https://tracker.gaminglabs.com:8443/browse/'\n                  });\n                }\n\n                x = this.state.moddetails.replace(/'''/g, '\"');\n                y = this.state.teststeps.replace(/'''/g, '\"');\n                contentBlock = htmlToDraft(x.replace(/----/g, '\\\\'));\n                contentBlock1 = htmlToDraft(y.replace(/----/g, '\\\\'));\n\n                if (contentBlock && contentBlock1) {\n                  contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n                  contentState1 = ContentState.createFromBlockArray(contentBlock1.contentBlocks);\n                  editorState = EditorState.createWithContent(contentState);\n                  editorState1 = EditorState.createWithContent(contentState1);\n                  this.setState({\n                    editorState: editorState,\n                    editorState1: editorState1\n                  });\n                }\n\n                _context3.next = 21;\n                break;\n\n              case 17:\n                _context3.prev = 17;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n                this.setState({\n                  loadingItems: false\n                });\n\n              case 21:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 17]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          isaudit = _this$state2.isaudit,\n          initialversion = _this$state2.initialversion,\n          showinitialversion = _this$state2.showinitialversion,\n          versions = _this$state2.versions,\n          loadingItems = _this$state2.loadingItems,\n          versionaffected = _this$state2.versionaffected,\n          version = _this$state2.version,\n          testingzip = _this$state2.testingzip,\n          submission = _this$state2.submission,\n          app = _this$state2.app,\n          editorState = _this$state2.editorState,\n          editorState1 = _this$state2.editorState1,\n          jira = _this$state2.jira,\n          title = _this$state2.title,\n          trackerID = _this$state2.trackerID,\n          modnumber = _this$state2.modnumber,\n          rewrite = _this$state2.rewrite,\n          sidenotes = _this$state2.sidenotes,\n          status = _this$state2.status;\n      console.log(this.state);\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 366\n        },\n        __self: this\n      }, React.createElement(\"h3\", {\n        style: {\n          marginTop: '20px',\n          marginBottom: '20px',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 367\n        },\n        __self: this\n      }, app), React.createElement(\"h3\", {\n        style: {\n          marginTop: '20px',\n          marginBottom: '20px',\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 368\n        },\n        __self: this\n      }, submission), !loadingItems && React.createElement(Form, {\n        style: {\n          marginTop: '20px',\n          marginLeft: '20px',\n          marginRight: '20px'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 370\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 371\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"fileNumber\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 372\n        },\n        __self: this\n      }, \"Submission #\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 373\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"file\",\n        id: \"file\",\n        value: \"\".concat(submission),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 374\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 377\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"modTitle\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 378\n        },\n        __self: this\n      }, \"Mod Title\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 379\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"title\",\n        id: \"title\",\n        onChange: this.handleTitleChange.bind(this),\n        value: title,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 380\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 383\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"versionaffected\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 384\n        },\n        __self: this\n      }, \"Version Affected\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 385\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"versionaffected\",\n        id: \"versionaffected\",\n        onChange: this.handleVersionChange.bind(this),\n        value: versionaffected,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 386\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 389\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"trackerID\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 390\n        },\n        __self: this\n      }, \"Tracker ID\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 391\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"trackerid\",\n        id: \"trackerid\",\n        placeholder: \"EBS-555\",\n        onChange: this.handleTrackerIDChange.bind(this),\n        value: trackerID,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 392\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 395\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"modnumber\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 396\n        },\n        __self: this\n      }, \"Mod Number\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 397\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"number\",\n        name: \"modnumber\",\n        id: \"modnumber\",\n        placeholder: \"1\",\n        onChange: this.handleModNumberChange.bind(this),\n        value: modnumber,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 398\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 401\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"statusSelect\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 402\n        },\n        __self: this\n      }, \"Status\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"select\",\n        id: \"exampleSelect\",\n        onChange: this.handleStatusChange,\n        value: status,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 404\n        },\n        __self: this\n      }, React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 405\n        },\n        __self: this\n      }, \"Testable\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 406\n        },\n        __self: this\n      }, \"Audit\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 407\n        },\n        __self: this\n      }, \"JIRA\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 408\n        },\n        __self: this\n      }, \"Complete\"), React.createElement(\"option\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 409\n        },\n        __self: this\n      }, \"Revoked\")))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 413\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"isaudit\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 414\n        },\n        __self: this\n      }, \"Audited?\"), React.createElement(Col, {\n        sm: {\n          size: 10\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 415\n        },\n        __self: this\n      }, React.createElement(FormGroup, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 416\n        },\n        __self: this\n      }, React.createElement(Label, {\n        check: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 417\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"checkbox\",\n        id: \"isaudit\",\n        onChange: this.handleIsAuditChange,\n        checked: isaudit,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 418\n        },\n        __self: this\n      }), ' ', \"Check if audit\")))), showinitialversion === true && React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 425\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"statusSelect\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 426\n        },\n        __self: this\n      }, \"Version\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 427\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"versions\",\n        id: \"versions\",\n        onChange: this.handleVersionsChange,\n        value: initialversion,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 428\n        },\n        __self: this\n      }, versions.map(function (a) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 431\n          },\n          __self: this\n        }, a.version);\n      })))), showinitialversion === false && React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 438\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"statusSelect\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 439\n        },\n        __self: this\n      }, \"Version\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 440\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"select\",\n        name: \"versions\",\n        id: \"versions\",\n        onChange: this.handleVersionsChange,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 441\n        },\n        __self: this\n      }, versions.map(function (a) {\n        return React.createElement(\"option\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 444\n          },\n          __self: this\n        }, a.version);\n      })))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 450\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"trackerID\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 451\n        },\n        __self: this\n      }, \"JIRA\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 452\n        },\n        __self: this\n      }, React.createElement(Input, {\n        type: \"text\",\n        name: \"jira\",\n        id: \"jira\",\n        placeholder: \"https://tracker.gaminglabs.com:8443/browse\",\n        onChange: this.handleJiraChange.bind(this),\n        value: jira,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 453\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 456\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleText\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 457\n        },\n        __self: this\n      }, \"Mod Wording\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 458\n        },\n        __self: this\n      }, React.createElement(Editor, {\n        editorStyle: {\n          borderStyle: 'solid',\n          borderWidth: '2px',\n          borderColor: '#ddd'\n        },\n        editorState: editorState,\n        onEditorStateChange: this.onEditorStateChange,\n        toolbar: {\n          image: {\n            uploadCallback: this._uploadImageCallBack\n          },\n          inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg,application/pdf,text/plain,application/vnd.openxmlformatsofficedocument.wordprocessingml.document,application/msword,application/vnd.ms-excel'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 459\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 470\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleText\",\n        sm: 2,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 471\n        },\n        __self: this\n      }, \"Test Steps\"), React.createElement(Col, {\n        sm: 10,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 472\n        },\n        __self: this\n      }, React.createElement(Editor, {\n        editorStyle: {\n          borderStyle: 'solid',\n          borderWidth: '2px',\n          borderColor: '#ddd'\n        },\n        editorState: editorState1,\n        onEditorStateChange: this.onEditorStateChange1,\n        toolbar: {\n          image: {\n            uploadCallback: this._uploadImageCallBack\n          },\n          inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg,application/pdf,text/plain,application/vnd.openxmlformatsofficedocument.wordprocessingml.document,application/msword,application/vnd.ms-excel'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 473\n        },\n        __self: this\n      }))), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 484\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 485\n        },\n        __self: this\n      }, \"Mod Rewrite\"), React.createElement(Input, {\n        type: \"textarea\",\n        name: \"rewrite\",\n        id: \"rewrite\",\n        onChange: this.handleRewriteChange.bind(this),\n        value: rewrite,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 486\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 488\n        },\n        __self: this\n      }, React.createElement(Label, {\n        for: \"exampleText\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, \"Side Notes\"), React.createElement(Input, {\n        type: \"text\",\n        name: \"sidenotes\",\n        id: \"sidenotes\",\n        onChange: this.handleSidenotesChange.bind(this),\n        value: sidenotes,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 490\n        },\n        __self: this\n      })), React.createElement(FormGroup, {\n        check: true,\n        row: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 492\n        },\n        __self: this\n      }, React.createElement(Col, {\n        sm: {\n          size: 10,\n          offset: 2\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 493\n        },\n        __self: this\n      }, React.createElement(Button, {\n        style: {\n          marginRight: '10px'\n        },\n        color: \"success\",\n        onClick: this.saveMod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      }, React.createElement(FaCheck, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 494\n        },\n        __self: this\n      })), React.createElement(Button, {\n        style: {\n          marginLeft: '10px'\n        },\n        color: \"danger\",\n        onClick: this.deleteMod,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }, React.createElement(FaTrash, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 495\n        },\n        __self: this\n      }))))), loadingItems && React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 499\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return UpdateMod;\n}(Component);\n\nexport default UpdateMod;","map":{"version":3,"sources":["/home/aely/gli/src/Components/UpdateMod.js"],"names":["React","Component","Redirect","Form","Input","Button","Label","FormGroup","FormText","Col","Row","Loader","Strapi","Editor","EditorState","convertToRaw","ContentState","htmlToDraft","draftToHtml","FaTrash","FaCheck","apiUrl","process","env","API_URL","strapi","UpdateMod","props","handleTrackerIDChange","event","setState","trackerID","target","value","console","log","state","handleStatusChange","status","handleRewriteChange","rewrite","handleTitleChange","title","handleModNumberChange","modnumber","handleSidenotesChange","sidenotes","handleTestingzip","testingzip","handleJiraChange","jira","handleVersionChange","versionaffected","handleIsAuditChange","isaudit","handleVersionsChange","ver","versions","filter","prop","version","toLowerCase","includes","showinitialversion","_id","onEditorStateChange","editorState","moddetails","getCurrentContent","replace","onEditorStateChange1","editorState1","teststeps","saveMod","appId","subId","request","data","query","match","params","modId","submissionId","history","goBack","loadingItems","deleteMod","push","_uploadImageCallBack","file","uploadedImages","imageObject","localSrc","URL","createObjectURL","dburl","name","Promise","resolve","reject","link","contentBlock","contentState","createFromBlockArray","contentBlocks","createWithContent","submission","app","response","initialversion","mod","submissions","trackerid","application","x","y","contentBlock1","contentState1","marginTop","marginBottom","textAlign","marginLeft","marginRight","bind","size","map","a","borderStyle","borderWidth","borderColor","image","uploadCallback","inputAccept","offset"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Redirect } from 'react-router-dom';\r\nimport { Form, Input, Button, Label, FormGroup, FormText, Col, Row } from 'reactstrap';\r\nimport Loader from './Loader';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport { FaTrash, FaCheck } from 'react-icons/fa';\r\nconst apiUrl = process.env.API_URL || 'http://192.168.0.248:1337';\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass UpdateMod extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let moddetails = '';\r\n        let contentBlock = htmlToDraft(moddetails);\r\n        if (contentBlock) {\r\n            let contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n            let editorState = EditorState.createWithContent(contentState);\r\n            let editorState1 = EditorState.createWithContent(contentState);\r\n            this.state = {\r\n                editorState,\r\n                editorState1,\r\n                uploadedImages: [],\r\n                moddetails: '',\r\n                teststeps: '',\r\n                trackerID: '',\r\n                status: null,\r\n                rewrite: '',\r\n                title: '',\r\n                modnumber: 0,\r\n                submission: '',\r\n                app: '',\r\n                appId: '',\r\n                version: '',\r\n                subId: '',\r\n                sidenotes: '',\r\n                testingzip: [],\r\n                versionaffected: '',\r\n                loadingItems: true,\r\n                jira: '',\r\n                versions: '',\r\n                showinitialversion: true,\r\n                isaudit: false\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    mod (id : \"${this.props.match.params.modId}\") {\r\n                      title\r\n                      moddetails\r\n                      teststeps\r\n                      modnumber\r\n                      trackerid\r\n                      status\r\n                      rewrite\r\n                      sidenotes\r\n                      isaudit\r\n                      jira\r\n                      versionaffected\r\n                      versions {\r\n                          _id\r\n                      }\r\n                      submissions {\r\n                          _id\r\n                          file\r\n                          versions {\r\n                              _id\r\n                              version\r\n                          }\r\n                      }\r\n                      application {\r\n                          _id\r\n                          name\r\n                      }\r\n                  }\r\n                }`\r\n            }\r\n        }\r\n        );\r\n        let initialversion = response.data.mod.submissions[0].versions.filter(prop => {\r\n            return prop._id.toLowerCase().includes(`${response.data.mod.versions[0]._id}`);\r\n        })\r\n        console.log(initialversion);\r\n        this.setState({\r\n            moddetails: response.data.mod.moddetails,\r\n            teststeps: response.data.mod.teststeps,\r\n            trackerID: response.data.mod.trackerid,\r\n            status: response.data.mod.status,\r\n            rewrite: response.data.mod.rewrite,\r\n            title: response.data.mod.title,\r\n            modnumber: response.data.mod.modnumber,\r\n            submission: response.data.mod.submissions[0].file,\r\n            app: response.data.mod.application.name,\r\n            appId: response.data.mod.application._id,\r\n            version: response.data.mod.versions[0]._id,\r\n            subId: response.data.mod.submissions[0]._id,\r\n            sidenotes: response.data.mod.sidenotes,\r\n            versionaffected: response.data.mod.versionaffected,\r\n            loadingItems: false,\r\n            jira: response.data.mod.jira,\r\n            versions: response.data.mod.submissions[0].versions,\r\n            initialversion: initialversion[0].version,\r\n            isaudit: response.data.mod.isaudit\r\n        });\r\n        if (this.state.teststeps === null) {\r\n            this.setState({\r\n                teststeps: '<p>Input test steps here</p>'\r\n            })\r\n        }\r\n        if (this.state.moddetails === null) {\r\n            this.setState({\r\n                moddetails: '<p>Input test mod details here</p>'\r\n            })\r\n        }\r\n        if (this.state.jira === null || this.state.jira === '') {\r\n            this.setState({\r\n                jira: 'https://tracker.gaminglabs.com:8443/browse/'\r\n            })\r\n        }\r\n        let x = this.state.moddetails.replace(/'''/g, '\"');\r\n        let y = this.state.teststeps.replace(/'''/g, '\"');\r\n        let contentBlock = htmlToDraft(x.replace(/----/g, '\\\\'));\r\n        let contentBlock1 = htmlToDraft(y.replace(/----/g, '\\\\'));\r\n        if (contentBlock && contentBlock1) {\r\n            let contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n            let contentState1 = ContentState.createFromBlockArray(contentBlock1.contentBlocks);\r\n            let editorState = EditorState.createWithContent(contentState);\r\n            let editorState1 = EditorState.createWithContent(contentState1);\r\n            this.setState({\r\n                editorState,\r\n                editorState1\r\n            });}\r\n        }catch (err) {\r\n            console.log(err);\r\n            this.setState({\r\n                loadingItems: false\r\n            })\r\n        }\r\n    }\r\n\r\n    handleTrackerIDChange = (event) => {\r\n        this.setState({\r\n            trackerID: event.target.value\r\n        })\r\n        console.log(this.state);\r\n    }\r\n\r\n    handleStatusChange = (event) => {\r\n        this.setState({\r\n            status: event.target.value\r\n        })\r\n    }\r\n\r\n    handleRewriteChange = (event) => {\r\n        this.setState({\r\n            rewrite: event.target.value\r\n        })\r\n    }\r\n\r\n    handleTitleChange = (event) => {\r\n        this.setState({\r\n            title: event.target.value\r\n        })\r\n    }\r\n\r\n    handleModNumberChange = (event) => {\r\n        this.setState({\r\n            modnumber: event.target.value\r\n        })\r\n    }\r\n\r\n    handleSidenotesChange = (event) => {\r\n        this.setState({\r\n            sidenotes: event.target.value\r\n        })\r\n    }\r\n\r\n    handleTestingzip = (event) => {\r\n        this.setState({\r\n            testingzip: event.target.value\r\n        })\r\n    }\r\n\r\n    handleJiraChange = (event) => {\r\n        this.setState({\r\n            jira: event.target.value\r\n        })\r\n    }\r\n\r\n    handleVersionChange = (event) => {\r\n        this.setState({\r\n            versionaffected: event.target.value\r\n        })\r\n    }\r\n\r\n    handleIsAuditChange = (event) => {\r\n        this.setState({\r\n            isaudit: !this.state.isaudit\r\n        })\r\n    }\r\n\r\n    handleVersionsChange = (event) => {\r\n        let ver = this.state.versions.filter(prop => {\r\n            return prop.version.toLowerCase().includes(`${event.target.value}`.toLowerCase())\r\n        });\r\n        if (this.state.showinitialversion === true) {\r\n            this.setState({\r\n                showinitialversion: false\r\n            })\r\n        }\r\n        this.setState({\r\n            version: ver[0]._id\r\n        })\r\n    }\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n            moddetails: draftToHtml(convertToRaw(editorState.getCurrentContent())).replace(/[\\n]/g, '')\r\n        });\r\n    }\r\n\r\n    onEditorStateChange1 = (editorState1) => {\r\n        this.setState({\r\n            editorState1,\r\n            teststeps: draftToHtml(convertToRaw(editorState1.getCurrentContent())).replace(/[\\n]/g, '')\r\n        });\r\n    }\r\n\r\n    saveMod = async () => {\r\n        try {\r\n            let { isaudit, jira, versionaffected, sidenotes, appId, moddetails, teststeps, trackerID, status, rewrite, title, version, modnumber, subId } = this.state;\r\n            if (sidenotes === null) {\r\n                this.setState({\r\n                    sidenotes: ''\r\n                })\r\n            }\r\n            if (rewrite === null) {\r\n                this.setState({\r\n                    rewrite: ''\r\n                })\r\n            }\r\n            if (jira == \"https://tracker.gaminglabs.com:8443/browse/\") {\r\n                jira = '';\r\n                console.log(jira);\r\n            }\r\n            moddetails = moddetails.replace(/\"/g, '\\'\\'\\'');\r\n            moddetails = moddetails.replace(/\\\\/g, '----');\r\n            teststeps = teststeps.replace(/\"/g, '\\'\\'\\'');\r\n            teststeps = teststeps.replace(/\\\\/g, '----');\r\n            await strapi.request('POST', '/graphql', {\r\n                data: {\r\n                    query: `mutation {\r\n                        updateMods(input: {\r\n                          where: {\r\n                              id: \"${this.props.match.params.modId}\"\r\n                          }\r\n                          data: {\r\n                            title: \"${title}\",\r\n                            trackerid: \"${trackerID}\",\r\n                            status: ${status},\r\n                            modnumber: ${modnumber},\r\n                            teststeps: \"${teststeps}\",\r\n                            moddetails: \"${moddetails}\",\r\n                            rewrite: \"${rewrite}\",\r\n                            application: \"${appId}\",\r\n                            submissions: \"${this.props.match.params.submissionId}\",\r\n                            versions: \"${version}\",\r\n                            sidenotes: \"${sidenotes}\",\r\n                            versionaffected: \"${versionaffected}\",\r\n                            jira: \"${jira}\",\r\n                            isaudit: ${isaudit}\r\n                          }\r\n                        }) {\r\n                          mod {\r\n                            title\r\n                            trackerid\r\n                            status\r\n                            jira\r\n                            modnumber\r\n                            teststeps\r\n                            moddetails\r\n                            rewrite\r\n                            sidenotes\r\n                            isaudit\r\n                          }\r\n                        }\r\n                      }`\r\n                }\r\n            });\r\n            console.log('success!');\r\n            this.props.history.goBack();\r\n        } catch (err) {\r\n            console.log(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n\r\n    deleteMod = async () => {\r\n        try {\r\n            let { subId } = this.state;\r\n            await strapi.request('POST', '/graphql', {\r\n                data: {\r\n                    query: `mutation {\r\n                        deleteMods(input: {\r\n                          where: {\r\n                            id: \"${this.props.match.params.modId}\"\r\n                          }\r\n                        }) {\r\n                          mod {\r\n                            title\r\n                            trackerid\r\n                          }\r\n                        }\r\n                      }`\r\n                }\r\n            });\r\n            this.props.history.push(`/submission/${subId}`);\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    _uploadImageCallBack = (file) => {\r\n        // long story short, every time we upload an image, we\r\n        // need to save it to the state so we can get it's data\r\n        // later when we decide what to do with it.\r\n    \r\n       // Make sure you have a uploadImages: [] as your default state\r\n        let { uploadedImages } = this.state;\r\n        console.log(uploadedImages);\r\n        const imageObject = {\r\n          file: file,\r\n          localSrc: URL.createObjectURL(file),\r\n          dburl: `${apiUrl}/uploads/${file.name}`\r\n        }\r\n\r\n        uploadedImages.push(imageObject);\r\n    \r\n        this.setState({uploadedImages: uploadedImages})\r\n    \r\n        // We need to return a promise with the image src\r\n        // the img src we will use here will be what's needed\r\n        // to preview it in the browser. This will be different than what\r\n        // we will see in the index.md file we generate.\r\n        return new Promise(\r\n          (resolve, reject) => {\r\n            resolve({ data: { link: imageObject.localSrc } });\r\n          }\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let { isaudit, initialversion, showinitialversion, versions, loadingItems, versionaffected, version, testingzip, submission, app, editorState, editorState1, jira, title, trackerID, modnumber, rewrite, sidenotes, status } = this.state;\r\n        console.log(this.state);\r\n        return(\r\n            <div>\r\n                <h3 style={{marginTop: '20px', marginBottom: '20px', textAlign: 'center'}}>{app}</h3>\r\n                <h3 style={{marginTop: '20px', marginBottom: '20px', textAlign: 'center'}}>{submission}</h3>\r\n                {!loadingItems &&\r\n                <Form style={{marginTop: '20px', marginLeft: '20px', marginRight: '20px'}}>\r\n                    <FormGroup row>\r\n                        <Label for=\"fileNumber\" sm={2}>Submission #</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"text\" name=\"file\" id=\"file\" value={`${submission}`} />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"modTitle\" sm={2}>Mod Title</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"text\" name=\"title\" id=\"title\" onChange={this.handleTitleChange.bind(this)} value={title}/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"versionaffected\" sm={2}>Version Affected</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"text\" name=\"versionaffected\" id=\"versionaffected\" onChange={this.handleVersionChange.bind(this)} value={versionaffected}/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"trackerID\" sm={2}>Tracker ID</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"text\" name=\"trackerid\" id=\"trackerid\" placeholder=\"EBS-555\" onChange={this.handleTrackerIDChange.bind(this)} value={trackerID}/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"modnumber\" sm={2}>Mod Number</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"number\" name=\"modnumber\" id=\"modnumber\" placeholder=\"1\" onChange={this.handleModNumberChange.bind(this)} value={modnumber}/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"statusSelect\" sm={2}>Status</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"select\" name=\"select\" id=\"exampleSelect\" onChange={this.handleStatusChange} value={status}>\r\n                            <option>Testable</option>\r\n                            <option>Audit</option>\r\n                            <option>JIRA</option>\r\n                            <option>Complete</option>\r\n                            <option>Revoked</option>\r\n                        </Input>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"isaudit\" sm={2}>Audited?</Label>\r\n                        <Col sm={{ size: 10 }}>\r\n                        <FormGroup check>\r\n                            <Label check>\r\n                            <Input type=\"checkbox\" id=\"isaudit\" onChange={this.handleIsAuditChange} checked={isaudit} />{' '}\r\n                            Check if audit\r\n                            </Label>\r\n                        </FormGroup>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    {showinitialversion === true && \r\n                    <FormGroup row>\r\n                        <Label for=\"statusSelect\" sm={2}>Version</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"select\" name=\"versions\" id=\"versions\" onChange={this.handleVersionsChange} value={initialversion} >\r\n                           {versions.map(a => {\r\n                               return(\r\n                                   <option>{a.version}</option>\r\n                               )\r\n                           })} \r\n                        </Input>\r\n                        </Col>\r\n                    </FormGroup>}\r\n                    {showinitialversion === false && \r\n                    <FormGroup row>\r\n                        <Label for=\"statusSelect\" sm={2}>Version</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"select\" name=\"versions\" id=\"versions\" onChange={this.handleVersionsChange} >\r\n                           {versions.map(a => {\r\n                               return(\r\n                                   <option>{a.version}</option>\r\n                               )\r\n                           })} \r\n                        </Input>\r\n                        </Col>\r\n                    </FormGroup>}\r\n                    <FormGroup row>\r\n                        <Label for=\"trackerID\" sm={2}>JIRA</Label>\r\n                        <Col sm={10}>\r\n                        <Input type=\"text\" name=\"jira\" id=\"jira\" placeholder=\"https://tracker.gaminglabs.com:8443/browse\" onChange={this.handleJiraChange.bind(this)} value={jira}/>\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"exampleText\" sm={2}>Mod Wording</Label>\r\n                        <Col sm={10}>\r\n                        <Editor\r\n                        editorStyle={{borderStyle: 'solid', borderWidth: '2px', borderColor: '#ddd'}} \r\n                        editorState={editorState}\r\n                        onEditorStateChange={this.onEditorStateChange}\r\n                        toolbar={{\r\n                            image: { uploadCallback: this._uploadImageCallBack },\r\n                            inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg,application/pdf,text/plain,application/vnd.openxmlformatsofficedocument.wordprocessingml.document,application/msword,application/vnd.ms-excel'\r\n                            }}\r\n                        />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup row>\r\n                        <Label for=\"exampleText\" sm={2}>Test Steps</Label>\r\n                        <Col sm={10}>\r\n                        <Editor\r\n                        editorStyle={{borderStyle: 'solid', borderWidth: '2px', borderColor: '#ddd'}} \r\n                        editorState={editorState1}\r\n                        onEditorStateChange={this.onEditorStateChange1}\r\n                        toolbar={{\r\n                            image: { uploadCallback: this._uploadImageCallBack },\r\n                            inputAccept: 'image/gif,image/jpeg,image/jpg,image/png,image/svg,application/pdf,text/plain,application/vnd.openxmlformatsofficedocument.wordprocessingml.document,application/msword,application/vnd.ms-excel'\r\n                            }}\r\n                        />\r\n                        </Col>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"exampleText\">Mod Rewrite</Label>\r\n                        <Input type=\"textarea\" name=\"rewrite\" id=\"rewrite\" onChange={this.handleRewriteChange.bind(this)} value={rewrite}/>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                        <Label for=\"exampleText\">Side Notes</Label>\r\n                        <Input type=\"text\" name=\"sidenotes\" id=\"sidenotes\" onChange={this.handleSidenotesChange.bind(this)} value={sidenotes}/>\r\n                    </FormGroup>\r\n                    <FormGroup check row>\r\n                        <Col sm={{ size: 10, offset: 2 }}>\r\n                        <Button style ={{marginRight: '10px'}} color='success' onClick={this.saveMod}><FaCheck /></Button>\r\n                        <Button style ={{marginLeft: '10px'}} color='danger' onClick={this.deleteMod}><FaTrash /></Button>\r\n                        </Col>\r\n                    </FormGroup>\r\n                </Form>}\r\n                {loadingItems && <Loader />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default UpdateMod;"]},"metadata":{},"sourceType":"module"}