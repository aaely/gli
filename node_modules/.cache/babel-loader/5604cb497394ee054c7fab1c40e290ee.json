{"ast":null,"code":"import _regeneratorRuntime from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\.registry.npmjs.org\\\\@babel\\\\runtime\\\\7.0.0\\\\node_modules\\\\@babel\\\\runtime/regenerator\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\.registry.npmjs.org\\\\@babel\\\\runtime\\\\7.0.0\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\.registry.npmjs.org\\\\@babel\\\\runtime\\\\7.0.0\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\.registry.npmjs.org\\\\@babel\\\\runtime\\\\7.0.0\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\.registry.npmjs.org\\\\@babel\\\\runtime\\\\7.0.0\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\.registry.npmjs.org\\\\@babel\\\\runtime\\\\7.0.0\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"C:\\\\Users\\\\aaron_e\\\\gli\\\\node_modules\\\\.registry.npmjs.org\\\\@babel\\\\runtime\\\\7.0.0\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"C:\\\\Users\\\\aaron_e\\\\gli\\\\src\\\\Components\\\\Application.js\";\nimport React, { Component } from 'react';\nimport { Box, Heading, Text, Image, Mask, Card, Button, Container, IconButton } from 'gestalt';\nimport { Link } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport htmlToDraft from 'html-to-draftjs';\nimport draftToHtml from 'draftjs-to-html';\nvar apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\nvar strapi = new Strapi(apiUrl);\n\nvar Vendors =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Vendors, _Component);\n\n  /*state = {\r\n      application: [],\r\n      submissions: [],\r\n      loadingItems: true,\r\n      EditorState,\r\n      ContentState\r\n  }*/\n  function Vendors(props) {\n    var _this;\n\n    _classCallCheck(this, Vendors);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Vendors).call(this, props));\n\n    _this.onEditorStateChange = function (editorState) {\n      _this.setState({\n        editorState: editorState,\n        html: draftToHtml(convertToRaw(editorState.getCurrentContent())).replace(/[\\n\\r\\s]/ + g, '')\n      });\n    };\n\n    var html = '<p>Testing 1234 ðŸ˜€</p>';\n    var contentBlock = htmlToDraft(html);\n\n    if (contentBlock) {\n      var contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      var editorState = EditorState.createWithContent(contentState);\n      _this.state = {\n        application: [],\n        submissions: [],\n        loadingItems: true,\n        editorState: editorState,\n        uploadData: '',\n        html: html\n      };\n    }\n\n    return _this;\n  }\n\n  _createClass(Vendors, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, contentBlock, contentState, editorState;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return strapi.request('POST', '/graphql', {\n                  data: {\n                    query: \"query {\\n                    application (id: \\\"\".concat(this.props.match.params.applicationId, \"\\\") {\\n                    _id\\n                    name\\n                    howto\\n                    submissions {\\n                        _id\\n                        file\\n                        versions {\\n                            _id\\n                            version\\n                        }\\n                        jurisdictions {\\n                            _id\\n                            jurisdiction\\n                            approvalstatuses {\\n                                _id\\n                                status\\n                            }\\n                        }\\n                    }\\n                  }\\n                }\")\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n                this.setState({\n                  application: response.data.application,\n                  submissions: response.data.application.submissions,\n                  loadingItems: false\n                });\n                contentBlock = htmlToDraft(this.state.application.howto);\n\n                if (contentBlock) {\n                  contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n                  editorState = EditorState.createWithContent(contentState);\n                  this.setState({\n                    editorState: editorState\n                  });\n                }\n\n                _context.next = 13;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                this.setState({\n                  loadingItems: false\n                });\n\n              case 13:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      }\n\n      return componentDidMount;\n    }()\n  }, {\n    key: \"saveChanges\",\n    value: function saveChanges() {\n      try {\n        var _this$state = this.state,\n            html = _this$state.html,\n            application = _this$state.application;\n        strapi.request('POST', 'graphql', {\n          data: {\n            query: \"mutation {\\n                        updateApplication(input: {\\n                          where: {\\n                            id: \\\"\".concat(application._id, \"\\\"\\n                          },\\n                          data: {\\n                            howto: \\\"\").concat(html, \"\\\"\\n                          }\\n                        }) {\\n                          application {\\n                            howto\\n                          }\\n                        }\\n                      }\")\n          }\n        });\n      } catch (err) {\n        console.log(err);\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state2 = this.state,\n          loadingItems = _this$state2.loadingItems,\n          application = _this$state2.application,\n          submissions = _this$state2.submissions,\n          editorState = _this$state2.editorState;\n      console.log(this.state);\n      return React.createElement(Container, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 135\n        },\n        __self: this\n      }, React.createElement(Box, {\n        marginTop: 5,\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignItems: \"start\",\n        dangerouslySetInlineStyle: {\n          __style: {\n            flexWrap: \"wrap-reverse\"\n          }\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 136\n        },\n        __self: this\n      }, React.createElement(Box, {\n        display: \"flex\",\n        direction: \"column\",\n        alignItems: \"center\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 147\n        },\n        __self: this\n      }, React.createElement(Box, {\n        marginBottom: 5,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, React.createElement(Heading, {\n        color: \"blue\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149\n        },\n        __self: this\n      }, application.name), React.createElement(\"h3\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 150\n        },\n        __self: this\n      }, \"Submissions:\")), submissions.map(function (a) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/application/\".concat(_this2.props.match.params.applicationId, \"/howto\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }, a.file), \" \", React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 154\n          },\n          __self: this\n        }), application.name, a.versions.map(function (b) {\n          return React.createElement(\"span\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 158\n            },\n            __self: this\n          }, \" \", b.version);\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 160\n          },\n          __self: this\n        }), a.jurisdictions.map(function (c) {\n          return React.createElement(\"p\", {\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 163\n            },\n            __self: this\n          }, c.jurisdiction, \" -- Status: \", c.approvalstatuses.map(function (d) {\n            return React.createElement(\"span\", {\n              __source: {\n                fileName: _jsxFileName,\n                lineNumber: 165\n              },\n              __self: this\n            }, d.status);\n          }), \"   \");\n        }), React.createElement(Editor, {\n          editorState: editorState,\n          onEditorStateChange: _this2.onEditorStateChange,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170\n          },\n          __self: this\n        }), React.createElement(\"textarea\", {\n          enabled: true,\n          value: draftToHtml(convertToRaw(editorState.getCurrentContent())),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174\n          },\n          __self: this\n        }), React.createElement(\"br\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 177\n          },\n          __self: this\n        }), React.createElement(\"button\", {\n          style: {\n            color: 'black',\n            borderRadius: '20px'\n          },\n          onClick: _this2.saveChanges,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178\n          },\n          __self: this\n        }, \"Save\"));\n      })))), loadingItems && React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 186\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Vendors;\n}(Component);\n\nexport default Vendors;","map":{"version":3,"sources":["C:/Users/aaron_e/gli/src/Components/Application.js"],"names":["React","Component","Box","Heading","Text","Image","Mask","Card","Button","Container","IconButton","Link","Strapi","Loader","Editor","EditorState","convertToRaw","ContentState","htmlToDraft","draftToHtml","apiUrl","process","env","API_URL","strapi","Vendors","props","onEditorStateChange","editorState","setState","html","getCurrentContent","replace","g","contentBlock","contentState","createFromBlockArray","contentBlocks","createWithContent","state","application","submissions","loadingItems","uploadData","request","data","query","match","params","applicationId","response","howto","console","log","_id","err","__style","flexWrap","name","map","a","file","versions","b","version","jurisdictions","c","jurisdiction","approvalstatuses","d","status","color","borderRadius","saveChanges"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { Box,\r\n    Heading,\r\n    Text,\r\n    Image,\r\n    Mask,\r\n    Card,\r\n    Button,\r\n    Container, \r\n    IconButton} from 'gestalt';\r\nimport { Link } from 'react-router-dom';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nimport Loader from './Loader';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport draftToHtml from 'draftjs-to-html';\r\nconst apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass Vendors extends Component {\r\n    /*state = {\r\n        application: [],\r\n        submissions: [],\r\n        loadingItems: true,\r\n        EditorState,\r\n        ContentState\r\n    }*/\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let html = '<p>Testing 1234 ðŸ˜€</p>';\r\n        let contentBlock = htmlToDraft(html);\r\n        if (contentBlock) {\r\n            let contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n            let editorState = EditorState.createWithContent(contentState);\r\n            this.state = {\r\n                application: [],\r\n                submissions: [],\r\n                loadingItems: true,\r\n                editorState,\r\n                uploadData: '',\r\n                html\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            //console.log(this.props.match.params.itemId);\r\n            let response = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    application (id: \"${this.props.match.params.applicationId}\") {\r\n                    _id\r\n                    name\r\n                    howto\r\n                    submissions {\r\n                        _id\r\n                        file\r\n                        versions {\r\n                            _id\r\n                            version\r\n                        }\r\n                        jurisdictions {\r\n                            _id\r\n                            jurisdiction\r\n                            approvalstatuses {\r\n                                _id\r\n                                status\r\n                            }\r\n                        }\r\n                    }\r\n                  }\r\n                }`\r\n            }\r\n        }\r\n        );\r\n        this.setState({\r\n            application: response.data.application,\r\n            submissions: response.data.application.submissions,\r\n            loadingItems: false\r\n        });\r\n        let contentBlock = htmlToDraft(this.state.application.howto);\r\n        if (contentBlock) {\r\n            let contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n            let editorState = EditorState.createWithContent(contentState);\r\n            this.setState({\r\n                editorState\r\n            });\r\n        }\r\n        }catch (err) {\r\n            console.log(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n\r\n    saveChanges() {\r\n        try {\r\n            let { html, application } = this.state;\r\n            strapi.request('POST', 'graphql', {\r\n                data: {\r\n                    query: `mutation {\r\n                        updateApplication(input: {\r\n                          where: {\r\n                            id: \"${application._id}\"\r\n                          },\r\n                          data: {\r\n                            howto: \"${html}\"\r\n                          }\r\n                        }) {\r\n                          application {\r\n                            howto\r\n                          }\r\n                        }\r\n                      }`\r\n                }\r\n            });\r\n            }catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n            html: draftToHtml(convertToRaw(editorState.getCurrentContent())).replace(/[\\n\\r\\s]/+g, '')\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { loadingItems, application, submissions, editorState } = this.state;\r\n        console.log(this.state);\r\n        return(\r\n            <Container>\r\n            <Box\r\n            marginTop={5}\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"start\"\r\n            dangerouslySetInlineStyle={{\r\n                __style: {\r\n                    flexWrap: \"wrap-reverse\"\r\n                }\r\n            }}\r\n            >\r\n            <Box display=\"flex\" direction=\"column\" alignItems=\"center\">\r\n                <Box marginBottom={5}>\r\n                    <Heading color=\"blue\">{application.name}</Heading>\r\n                    <h3><strong>Submissions:</strong></h3>\r\n                {submissions.map(a => {\r\n                    return (\r\n                        <p>\r\n                            <Link to={`/application/${this.props.match.params.applicationId}/howto`}>{a.file}</Link> <br />\r\n                            {application.name}\r\n                            {a.versions.map(b => {\r\n                                return (\r\n                                    <span> {b.version}</span>\r\n                                )\r\n                            })}<br />\r\n                            {a.jurisdictions.map(c => {\r\n                                return (\r\n                                    <p>{c.jurisdiction} -- Status: {c.approvalstatuses.map(d => {\r\n                                        return (\r\n                                            <span>{d.status}</span>\r\n                                        )\r\n                                    })}   </p>\r\n                                )\r\n                            })}\r\n                            <Editor \r\n                            editorState={editorState}\r\n                            onEditorStateChange={this.onEditorStateChange}\r\n                            />\r\n                            <textarea\r\n                            enabled\r\n                            value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n                            /><br />\r\n                    <button style={{color: 'black', borderRadius: '20px'}} onClick={this.saveChanges}>Save</button>\r\n                        </p>\r\n                    )\r\n                })}\r\n\r\n                </Box>\r\n            </Box>\r\n            </Box>\r\n            {loadingItems && <Loader />}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Vendors;"]},"metadata":{},"sourceType":"module"}