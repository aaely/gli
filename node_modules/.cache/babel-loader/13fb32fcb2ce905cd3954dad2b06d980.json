{"ast":null,"code":"import _regeneratorRuntime from \"/home/aely/gli/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/aely/gli/src/Components/Submission.js\";\nimport React, { Component } from 'react';\nimport { PieChart, Pie, Legend, Sector, Cell } from 'recharts';\nimport { Button } from 'reactstrap';\nimport Collapsible from 'react-collapsible';\nimport ModList from './ModList';\nimport MyPieChart from './MyPieChart';\nimport { Link } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport Loader from './Loader';\nimport { pdfjs, Document, Page, View } from 'react-pdf';\npdfjs.GlobalWorkerOptions.workerSrc = \"//cdnjs.cloudflare.com/ajax/libs/pdf.js/\".concat(pdfjs.version, \"/pdf.worker.js\");\nvar apiUrl = process.env.API_URL || 'http://192.168.0.248:1337';\nvar strapi = new Strapi(apiUrl);\n\nvar Submission =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Submission, _Component);\n\n  function Submission(props) {\n    var _this;\n\n    _classCallCheck(this, Submission);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Submission).call(this, props));\n\n    _this.onDocumentLoadSuccess = function (_ref) {\n      var numPages = _ref.numPages;\n\n      _this.setState({\n        numPages: numPages\n      });\n    };\n\n    _this.changePage = function (offset) {\n      return _this.setState(function (prevState) {\n        return {\n          pageNumber: prevState.pageNumber + offset\n        };\n      });\n    };\n\n    _this.previousPage = function () {\n      return _this.changePage(-1);\n    };\n\n    _this.nextPage = function () {\n      return _this.changePage(1);\n    };\n\n    _this.tableOfContents = function () {\n      return _this.setState({\n        pageNumber: 4\n      });\n    };\n\n    _this.onItemClick = function (_ref2) {\n      var pageNumber = _ref2.pageNumber;\n      return _this.setState({\n        pageNumber: pageNumber\n      });\n    };\n\n    _this.removeTextLayerOffset = function () {\n      var textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\n      textLayers.forEach(function (layer) {\n        var style = layer.style;\n        style.top = \"0\";\n        style.left = \"0\";\n        style.transform = \"\";\n      });\n    };\n\n    _this.renderURNs = function () {\n      var _this$state = _this.state,\n          urns = _this$state.urns,\n          pageNumber = _this$state.pageNumber,\n          numPages = _this$state.numPages;\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 192\n        },\n        __self: this\n      }, urns.map(function (a) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 195\n          },\n          __self: this\n        }, React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 196\n          },\n          __self: this\n        }, \"Page \", pageNumber || (numPages ? 1 : '--'), \" of \", numPages || '--'), React.createElement(\"button\", {\n          type: \"button\",\n          disabled: pageNumber <= 1,\n          onClick: _this.previousPage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 197\n          },\n          __self: this\n        }, \"Back\"), React.createElement(\"button\", {\n          type: \"button\",\n          disabled: pageNumber >= numPages,\n          onClick: _this.nextPage,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204\n          },\n          __self: this\n        }, \"Next\"), React.createElement(\"button\", {\n          type: \"button\",\n          onClick: _this.tableOfContents,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211\n          },\n          __self: this\n        }, \"Table of Contents\"), React.createElement(Document, {\n          file: \"\".concat(apiUrl).concat(a.url),\n          className: \"canvas\",\n          onLoadSuccess: _this.onDocumentLoadSuccess,\n          onItemClick: _this.onItemClick,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 217\n          },\n          __self: this\n        }, React.createElement(Page, {\n          pageNumber: pageNumber,\n          onLoadSuccess: _this.removeTextLayerOffset,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223\n          },\n          __self: this\n        })));\n      }));\n    };\n\n    _this.state = {\n      loadingItems: true,\n      submission: '',\n      jurisdictions: [],\n      vendor: '',\n      vendorId: '',\n      numPages: null,\n      pageNumber: 1,\n      urns: [],\n      application: [],\n      versions: [],\n      uploadedImages: [],\n      excelsheet: [],\n      packageurl: '',\n      testableModsCount: 0,\n      completeModsCount: 0,\n      jiraModsCount: 0,\n      questionableModsCount: 0,\n      revokedModsCount: 0,\n      auditModsCount: 0,\n      activeIndex: 0\n    };\n    return _this;\n  }\n\n  _createClass(Submission, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee() {\n        var response, getMods, ModsList, i, j;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return strapi.request('POST', '/graphql', {\n                  data: {\n                    query: \"query {\\n                    submission (id : \\\"\".concat(this.props.match.params.submissionId, \"\\\") {\\n                        file\\n                        received\\n                        processed\\n                        begin\\n                        packageurl\\n                        modtestplan {\\n                            _id\\n                            url\\n                        }\\n                        vendor {\\n                        _id\\n                        name\\n                        logo {\\n                          _id\\n                          url\\n                        }\\n                      }\\n                        jurisdictions {\\n                        _id\\n                        jurisdiction\\n                      }\\n                      urns {\\n                          _id\\n                          url\\n                      }\\n                      application {\\n                          _id\\n                          name\\n                      }\\n                      versions {\\n                          _id\\n                          version\\n                          mods {\\n                            _id\\n                            status\\n                            isaudit\\n                        }\\n                      }\\n                  }\\n                }\")\n                  }\n                });\n\n              case 3:\n                response = _context.sent;\n                getMods = response.data.submission.versions.map(function (a) {\n                  return a.mods.sort(function (a, b) {\n                    return a.modnumber - b.modnumber;\n                  });\n                });\n                ModsList = [];\n\n                for (i = 0; i < getMods.length; i++) {\n                  j = 0;\n\n                  while (j < getMods[i].length) {\n                    ModsList.push(getMods[i][j]);\n                    j++;\n                  }\n                }\n\n                this.setState({\n                  submission: response.data.submission.file,\n                  packageurl: response.data.submission.packageurl,\n                  excelsheet: response.data.submission.modtestplan,\n                  vendor: response.data.submission.vendor.name,\n                  jurisdictions: response.data.submission.jurisdictions,\n                  loadingItems: false,\n                  vendorId: response.data.submission.vendor._id,\n                  urns: response.data.submission.urns,\n                  application: response.data.submission.application,\n                  versions: response.data.submission.versions,\n                  modsCount: ModsList.length,\n                  auditModsCount: ModsList.filter(function (prop) {\n                    return prop.isaudit === true;\n                  }).length,\n                  testableModsCount: ModsList.filter(function (prop) {\n                    return prop.status.toLowerCase().includes('testable'.toLowerCase());\n                  }).length,\n                  completeModsCount: ModsList.filter(function (prop) {\n                    return prop.status.toLowerCase().includes('complete'.toLowerCase());\n                  }).length,\n                  jiraModsCount: ModsList.filter(function (prop) {\n                    return prop.status.toLowerCase().includes('jira'.toLowerCase());\n                  }).length,\n                  questionableModsCount: ModsList.filter(function (prop) {\n                    return prop.status.toLowerCase().includes('questionable'.toLowerCase());\n                  }).length,\n                  revokedModsCount: ModsList.filter(function (prop) {\n                    return prop.status.toLowerCase().includes('revoked'.toLowerCase());\n                  }).length\n                });\n                _context.next = 14;\n                break;\n\n              case 10:\n                _context.prev = 10;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n                this.setState({\n                  loadingItems: false\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 10]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"renderDropDown1\",\n    value: function renderDropDown1() {\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140\n        },\n        __self: this\n      }, \"Jurisdictions:\");\n    }\n  }, {\n    key: \"renderDropDown2\",\n    value: function renderDropDown2() {\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 148\n        },\n        __self: this\n      }, \"URNs:\");\n    }\n  }, {\n    key: \"renderHide\",\n    value: function renderHide() {\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 156\n        },\n        __self: this\n      }, \"Hide\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state2 = this.state,\n          packageurl = _this$state2.packageurl,\n          submission = _this$state2.submission,\n          vendor = _this$state2.vendor,\n          jurisdictions = _this$state2.jurisdictions,\n          loadingItems = _this$state2.loadingItems,\n          vendorId = _this$state2.vendorId,\n          application = _this$state2.application,\n          versions = _this$state2.versions,\n          auditModsCount = _this$state2.auditModsCount,\n          modsCount = _this$state2.modsCount,\n          jiraModsCount = _this$state2.jiraModsCount,\n          testableModsCount = _this$state2.testableModsCount,\n          completeModsCount = _this$state2.completeModsCount,\n          revokedModsCount = _this$state2.revokedModsCount,\n          questionableModsCount = _this$state2.questionableModsCount;\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 235\n        },\n        __self: this\n      }, React.createElement(\"h1\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 236\n        },\n        __self: this\n      }, submission), React.createElement(\"h3\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/manufacturer/\".concat(vendorId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }, vendor)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 237\n        },\n        __self: this\n      }), React.createElement(\"h1\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/application/\".concat(application._id),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }, application.name)), React.createElement(\"br\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 238\n        },\n        __self: this\n      }), React.createElement(\"h5\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"strong\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, React.createElement(\"u\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 239\n        },\n        __self: this\n      }, \"Versions attached to this submission:\"))), versions.map(function (y) {\n        return React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, y.version);\n      }), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/modtestplan/\".concat(this.props.match.params.submissionId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245\n        },\n        __self: this\n      }, \"Mod Test Plan\")), React.createElement(\"h5\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, React.createElement(Link, {\n        to: \"/rewrites/\".concat(this.props.match.params.submissionId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 246\n        },\n        __self: this\n      }, \"ReWrites\")), packageurl != null && React.createElement(Link, {\n        to: packageurl,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 248\n        },\n        __self: this\n      }, \"DM Flash\"), loadingItems === false && React.createElement(MyPieChart, {\n        submissionId: this.props.match.params.submissionId,\n        modsCount: modsCount,\n        auditModsCount: auditModsCount,\n        completeModsCount: completeModsCount,\n        jiraModsCount: jiraModsCount,\n        questionableModsCount: questionableModsCount,\n        revokedModsCount: revokedModsCount,\n        testableModsCount: testableModsCount,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 251\n        },\n        __self: this\n      }), React.createElement(Collapsible, {\n        transitionTime: 250,\n        trigger: this.renderDropDown1(),\n        triggerWhenOpen: this.renderHide(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 261\n        },\n        __self: this\n      }, jurisdictions.map(function (jurs) {\n        return React.createElement(\"div\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 268\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/jurisdiction/\".concat(jurs._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 269\n          },\n          __self: this\n        }, jurs.jurisdiction));\n      })), loadingItems === false && React.createElement(ModList, {\n        submissionId: this.props.match.params.submissionId,\n        modsCount: modsCount,\n        auditModsCount: auditModsCount,\n        completeModsCount: completeModsCount,\n        jiraModsCount: jiraModsCount,\n        questionableModsCount: questionableModsCount,\n        revokedModsCount: revokedModsCount,\n        testableModsCount: testableModsCount,\n        history: this.props.history,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 281\n        },\n        __self: this\n      }), loadingItems && React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 292\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return Submission;\n}(Component);\n\nexport default Submission;","map":{"version":3,"sources":["/home/aely/gli/src/Components/Submission.js"],"names":["React","Component","PieChart","Pie","Legend","Sector","Cell","Button","Collapsible","ModList","MyPieChart","Link","Strapi","Loader","pdfjs","Document","Page","View","GlobalWorkerOptions","workerSrc","version","apiUrl","process","env","API_URL","strapi","Submission","props","onDocumentLoadSuccess","numPages","setState","changePage","offset","prevState","pageNumber","previousPage","nextPage","tableOfContents","onItemClick","removeTextLayerOffset","textLayers","document","querySelectorAll","forEach","layer","style","top","left","transform","renderURNs","state","urns","map","a","url","loadingItems","submission","jurisdictions","vendor","vendorId","application","versions","uploadedImages","excelsheet","packageurl","testableModsCount","completeModsCount","jiraModsCount","questionableModsCount","revokedModsCount","auditModsCount","activeIndex","request","data","query","match","params","submissionId","response","getMods","mods","sort","b","modnumber","ModsList","i","length","j","push","file","modtestplan","name","_id","modsCount","filter","prop","isaudit","status","toLowerCase","includes","console","log","textAlign","y","renderDropDown1","renderHide","jurs","jurisdiction","history"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport { PieChart, Pie, Legend, Sector, Cell } from 'recharts';\r\nimport { Button } from 'reactstrap';\r\nimport Collapsible from 'react-collapsible';\r\nimport ModList from './ModList';\r\nimport MyPieChart from './MyPieChart';\r\nimport { Link } from 'react-router-dom';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nimport Loader from './Loader';\r\nimport { pdfjs, Document, Page, View } from 'react-pdf';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\nconst apiUrl = process.env.API_URL || 'http://192.168.0.248:1337';\r\nconst strapi = new Strapi(apiUrl);   \r\n\r\nclass Submission extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n            this.state = {\r\n                loadingItems: true,\r\n                submission: '',\r\n                jurisdictions: [],\r\n                vendor: '',\r\n                vendorId: '',\r\n                numPages: null,\r\n                pageNumber: 1,\r\n                urns: [],\r\n                application: [],\r\n                versions: [],\r\n                uploadedImages: [],\r\n                excelsheet: [],\r\n                packageurl: '',\r\n                testableModsCount: 0,\r\n                completeModsCount: 0,\r\n                jiraModsCount: 0,\r\n                questionableModsCount: 0,\r\n                revokedModsCount: 0,\r\n                auditModsCount: 0,\r\n                activeIndex: 0\r\n            }\r\n        }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let response = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    submission (id : \"${this.props.match.params.submissionId}\") {\r\n                        file\r\n                        received\r\n                        processed\r\n                        begin\r\n                        packageurl\r\n                        modtestplan {\r\n                            _id\r\n                            url\r\n                        }\r\n                        vendor {\r\n                        _id\r\n                        name\r\n                        logo {\r\n                          _id\r\n                          url\r\n                        }\r\n                      }\r\n                        jurisdictions {\r\n                        _id\r\n                        jurisdiction\r\n                      }\r\n                      urns {\r\n                          _id\r\n                          url\r\n                      }\r\n                      application {\r\n                          _id\r\n                          name\r\n                      }\r\n                      versions {\r\n                          _id\r\n                          version\r\n                          mods {\r\n                            _id\r\n                            status\r\n                            isaudit\r\n                        }\r\n                      }\r\n                  }\r\n                }`\r\n            }\r\n        }\r\n        );\r\n        let getMods = response.data.submission.versions.map(a => {return a.mods.sort((a, b) => (a.modnumber - b.modnumber))});\r\n        let ModsList = [];\r\n        for (let i = 0; i < getMods.length; i++){\r\n            let j = 0;\r\n            while (j < getMods[i].length) {\r\n                ModsList.push(getMods[i][j])\r\n                j++\r\n            }\r\n        }\r\n        this.setState({\r\n            submission: response.data.submission.file,\r\n            packageurl: response.data.submission.packageurl,\r\n            excelsheet: response.data.submission.modtestplan,\r\n            vendor: response.data.submission.vendor.name,\r\n            jurisdictions: response.data.submission.jurisdictions,\r\n            loadingItems: false,\r\n            vendorId: response.data.submission.vendor._id,\r\n            urns: response.data.submission.urns,\r\n            application: response.data.submission.application,\r\n            versions: response.data.submission.versions,\r\n            modsCount: ModsList.length,\r\n            auditModsCount: ModsList.filter(prop => {\r\n                return prop.isaudit === true\r\n            }).length,\r\n            testableModsCount: ModsList.filter(prop => {\r\n                return prop.status.toLowerCase().includes('testable'.toLowerCase())\r\n            }).length,\r\n            completeModsCount: ModsList.filter(prop => {\r\n                return prop.status.toLowerCase().includes('complete'.toLowerCase())\r\n            }).length,\r\n            jiraModsCount: ModsList.filter(prop => {\r\n                return prop.status.toLowerCase().includes('jira'.toLowerCase())\r\n            }).length,\r\n            questionableModsCount: ModsList.filter(prop => {\r\n                return prop.status.toLowerCase().includes('questionable'.toLowerCase())\r\n            }).length,\r\n            revokedModsCount: ModsList.filter(prop => {\r\n                return prop.status.toLowerCase().includes('revoked'.toLowerCase())\r\n            }).length\r\n        });\r\n        }catch (err) {\r\n            console.log(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n\r\n    renderDropDown1() {\r\n        return (\r\n            <span className=\"trigger\">\r\n                Jurisdictions:\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderDropDown2() {\r\n        return (\r\n            <span className=\"trigger\">\r\n                URNs:\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderHide() {\r\n        return (\r\n            <span className=\"trigger\">\r\n                Hide\r\n            </span>\r\n        );\r\n    }\r\n\r\n    onDocumentLoadSuccess = ({ numPages }) => {\r\n        this.setState({ numPages });\r\n      }\r\n\r\n    changePage = offset => this.setState(prevState => ({\r\n        pageNumber: prevState.pageNumber + offset,\r\n      }));\r\n    \r\n    previousPage = () => this.changePage(-1);\r\n    \r\n    nextPage = () => this.changePage(1);\r\n\r\n    tableOfContents = () => this.setState({ pageNumber: 4});\r\n\r\n    onItemClick = ({ pageNumber }) => this.setState({ pageNumber: pageNumber });\r\n\r\n      //removes the offset of text from the rendered PDF file\r\n    removeTextLayerOffset = () => {\r\n        const textLayers = document.querySelectorAll(\".react-pdf__Page__textContent\");\r\n          textLayers.forEach(layer => {\r\n            const { style } = layer;\r\n            style.top = \"0\";\r\n            style.left = \"0\";\r\n            style.transform = \"\";\r\n        });\r\n      }\r\n\r\n    renderURNs = () => {\r\n          let { urns, pageNumber, numPages } = this.state;\r\n          return (\r\n            <div>\r\n                {urns.map(a => {\r\n                    return (\r\n                        <div>\r\n                            <p>Page {pageNumber || (numPages ? 1 : '--')} of {numPages || '--'}</p>\r\n                            <button\r\n                            type=\"button\"\r\n                            disabled={pageNumber <= 1}\r\n                            onClick={this.previousPage}\r\n                            >\r\n                                Back\r\n                            </button>\r\n                            <button\r\n                            type=\"button\"\r\n                            disabled={pageNumber >= numPages}\r\n                            onClick={this.nextPage}\r\n                            >\r\n                                Next\r\n                            </button>\r\n                            <button\r\n                            type=\"button\"\r\n                            onClick={this.tableOfContents}\r\n                            >\r\n                                Table of Contents\r\n                            </button>\r\n                            <Document\r\n                            file={`${apiUrl}${a.url}`}\r\n                            className='canvas'\r\n                            onLoadSuccess={this.onDocumentLoadSuccess}\r\n                            onItemClick={this.onItemClick}\r\n                            >\r\n                                <Page pageNumber={pageNumber} onLoadSuccess={this.removeTextLayerOffset}/>\r\n                            </Document>                        \r\n                        </div>\r\n                    )\r\n                })}\r\n            </div>\r\n          );\r\n      }\r\n    \r\n    render() {\r\n        let { packageurl, submission, vendor, jurisdictions, loadingItems, vendorId, application, versions, auditModsCount, modsCount, jiraModsCount, testableModsCount, completeModsCount, revokedModsCount, questionableModsCount } = this.state;\r\n        return(\r\n            <div style={{textAlign: 'center'}}>\r\n                <h1 style={{textAlign: 'center'}}>{submission}</h1>\r\n                <h3 style={{textAlign: 'center'}}><Link to={`/manufacturer/${vendorId}`}>{vendor}</Link></h3><br />\r\n                <h1 style={{textAlign: 'center'}}><Link to={`/application/${application._id}`}>{application.name}</Link></h1><br />\r\n                <h5 style={{textAlign: 'center'}}><strong><u>Versions attached to this submission:</u></strong></h5>\r\n                {versions.map(y => {\r\n                    return (\r\n                        <p>{y.version}</p>\r\n                    )\r\n                })}\r\n                <h5><Link to={`/modtestplan/${this.props.match.params.submissionId}`}>Mod Test Plan</Link></h5>\r\n                <h5><Link to={`/rewrites/${this.props.match.params.submissionId}`}>ReWrites</Link></h5>\r\n                {packageurl != null &&\r\n                <Link to={packageurl}>DM Flash</Link>\r\n                }\r\n                {loadingItems === false &&\r\n                    <MyPieChart \r\n                    submissionId={this.props.match.params.submissionId}\r\n                    modsCount={modsCount}\r\n                    auditModsCount={auditModsCount}\r\n                    completeModsCount={completeModsCount}\r\n                    jiraModsCount={jiraModsCount}\r\n                    questionableModsCount={questionableModsCount}\r\n                    revokedModsCount={revokedModsCount}\r\n                    testableModsCount={testableModsCount}\r\n                    />}\r\n                <Collapsible \r\n                transitionTime={250} \r\n                trigger={this.renderDropDown1()}\r\n                triggerWhenOpen={this.renderHide()}\r\n                >\r\n                {jurisdictions.map(jurs => {\r\n                    return(\r\n                        <div>\r\n                           <Link to={`/jurisdiction/${jurs._id}`}>{jurs.jurisdiction}</Link>\r\n                        </div>\r\n                    );\r\n                })}\r\n                </Collapsible>\r\n                {/*<Collapsible\r\n                transitionTime={250}\r\n                trigger={<span className='trigger'>URNs:</span>}\r\n                >\r\n                {this.renderURNs()}\r\n                </Collapsible>*/}\r\n                {loadingItems === false &&\r\n                <ModList \r\n                submissionId={this.props.match.params.submissionId}\r\n                modsCount={modsCount}\r\n                auditModsCount={auditModsCount}\r\n                completeModsCount={completeModsCount}\r\n                jiraModsCount={jiraModsCount}\r\n                questionableModsCount={questionableModsCount}\r\n                revokedModsCount={revokedModsCount}\r\n                testableModsCount={testableModsCount}\r\n                history={this.props.history}\r\n                />}\r\n                {loadingItems && <Loader />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Submission;"]},"metadata":{},"sourceType":"module"}