{"ast":null,"code":"import _regeneratorRuntime from \"/home/aely/gli/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _classCallCheck from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _assertThisInitialized from \"/home/aely/gli/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nvar _jsxFileName = \"/home/aely/gli/src/Components/ModList.js\";\nimport React, { Component } from 'react';\nimport Loader from './Loader';\nimport { Link } from 'react-router-dom';\nimport Strapi from 'strapi-sdk-javascript/build/main';\nimport { Alert } from 'reactstrap';\nimport { Editor } from 'react-draft-wysiwyg';\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\nimport htmlToDraft from 'html-to-draftjs';\nimport draftToHtml from 'draftjs-to-html';\nimport Collapsible from 'react-collapsible';\nimport { FaEdit, FaFileUpload, FaTrash, FaSearchDollar } from 'react-icons/fa';\nvar apiUrl = process.env.API_URL || 'http://192.168.0.248:1337';\nvar strapi = new Strapi(apiUrl);\n\nvar ModList =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ModList, _Component);\n\n  function ModList(props) {\n    var _this;\n\n    _classCallCheck(this, ModList);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(ModList).call(this, props));\n\n    _this.onEditorStateChange = function (editorState) {\n      _this.setState({\n        editorState: editorState,\n        html: draftToHtml(convertToRaw(editorState.getCurrentContent())).replace(/[\\n]/g, '')\n      });\n    };\n\n    _this.deleteMod =\n    /*#__PURE__*/\n    function () {\n      var _ref = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee(id) {\n        var mods, index;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                _context.next = 3;\n                return strapi.request('DELETE', \"/mods/\".concat(id), {\n                  data: {\n                    query: \"mutation {\\n                        deleteMods(input: {\\n                          where: {\\n                            id: \\\"\".concat(id, \"\\\"\\n                          }\\n                        }) {\\n                          mod {\\n                            title\\n                            trackerid\\n                          }\\n                        }\\n                      }\")\n                  }\n                });\n\n              case 3:\n                //window.location.reload();\n                mods = _this.state.mods;\n                index = mods.findIndex(function (x) {\n                  return x._id === id;\n                });\n                mods = mods.splice(index, 1);\n                console.log(mods);\n                /*this.setState({\r\n                    mods: mods.splice(index, 1),\r\n                    modsCount: mods.length\r\n                })*/\n\n                _context.next = 12;\n                break;\n\n              case 9:\n                _context.prev = 9;\n                _context.t0 = _context[\"catch\"](0);\n                console.log(_context.t0);\n\n              case 12:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, this, [[0, 9]]);\n      }));\n\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    _this.auditMod =\n    /*#__PURE__*/\n    function () {\n      var _ref2 = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee2(id, isaudit) {\n        var mods, index;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.prev = 0;\n                _context2.next = 3;\n                return strapi.request('POST', \"/graphql\", {\n                  data: {\n                    query: \"mutation {\\n                        updateMods(input: {\\n                          where: {\\n                            id: \\\"\".concat(id, \"\\\"\\n                          }\\n                          data: {\\n                            isaudit: \").concat(!isaudit, \"\\n                          }\\n                        }) {\\n                          mod {\\n                            isaudit\\n                          }\\n                        }\\n                      }\")\n                  }\n                });\n\n              case 3:\n                //window.location.reload();\n                mods = _this.state.mods;\n                index = mods.findIndex(function (x) {\n                  return x._id === id;\n                });\n                mods[index].isaudit = !isaudit;\n\n                _this.setState({\n                  mods: mods,\n                  auditModsCount: mods.filter(function (prop) {\n                    return prop.isaudit === true;\n                  }).length\n                });\n\n                _context2.next = 12;\n                break;\n\n              case 9:\n                _context2.prev = 9;\n                _context2.t0 = _context2[\"catch\"](0);\n                console.log(_context2.t0);\n\n              case 12:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2, this, [[0, 9]]);\n      }));\n\n      return function (_x2, _x3) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    _this._uploadImageCallBack = function (file) {\n      // long story short, every time we upload an image, we\n      // need to save it to the state so we can get it's data\n      // later when we decide what to do with it.\n      // Make sure you have a uploadImages: [] as your default state\n      var uploadedImages = _this.state.uploadedImages;\n      console.log(uploadedImages);\n      var imageObject = {\n        file: file,\n        localSrc: URL.createObjectURL(file),\n        dburl: \"\".concat(apiUrl, \"/uploads/\").concat(file.name)\n      };\n      uploadedImages.push(imageObject);\n\n      _this.setState({\n        uploadedImages: uploadedImages\n      }); // We need to return a promise with the image src\n      // the img src we will use here will be what's needed\n      // to preview it in the browser. This will be different than what\n      // we will see in the index.md file we generate.\n\n\n      return new Promise(function (resolve, reject) {\n        resolve({\n          data: {\n            link: imageObject.localSrc\n          }\n        });\n      });\n    };\n\n    _this.renderQuestionableMods = function () {\n      var mods = _this.state.mods;\n      var questionableMods = mods.filter(function (prop) {\n        return prop.status.toLowerCase().includes('questionable'.toLowerCase());\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 319\n        },\n        __self: this\n      }, questionableMods.map(function (x) {\n        return React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: React.createElement(\"span\", {\n            className: \"trigger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 324\n            },\n            __self: this\n          }, \"Mod \", x.modnumber, \" | \", x.title),\n          triggerWhenOpen: React.createElement(\"span\", {\n            className: \"trigger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 325\n            },\n            __self: this\n          }, \"Mod \", x.modnumber),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 322\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          key: x._id,\n          style: {\n            marginTop: '10px',\n            backgroundColor: '#eee',\n            display: 'block'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/updatemod/\".concat(x._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 329\n          },\n          __self: this\n        }, React.createElement(FaEdit, {\n          size: 30,\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 330\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 333\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl, \"/admin/plugins/content-manager/mods/\").concat(x._id, \"?redirectUrl=/plugins/content-manager/mods?_limit=10&_page=1&_sort=_id&_q=abc&source=content-manager\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 334\n          },\n          __self: this\n        }, React.createElement(FaFileUpload, {\n          size: 30,\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 335\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 338\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"#\",\n          onClick: _this.auditMod.bind(_assertThisInitialized(_assertThisInitialized(_this)), x._id, x.isaudit),\n          style: {\n            backgroundColor: '#333'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 339\n          },\n          __self: this\n        }, React.createElement(FaSearchDollar, {\n          size: 30,\n          style: {\n            color: 'orange',\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 340\n          },\n          __self: this\n        }))), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 343\n          },\n          __self: this\n        }, \"Mod \", x.modnumber), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 344\n          },\n          __self: this\n        }, x.trackerid), React.createElement(\"h5\", {\n          style: {\n            color: '#007bff'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 345\n          },\n          __self: this\n        }, x.title), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 346\n          },\n          __self: this\n        }, \"Testing Status: \", x.status), x.jira != null && x.jira !== '' && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 348\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: x.jira,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 349\n          },\n          __self: this\n        }, \"Jira\")), x.testingzip != null && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 353\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl).concat(x.testingzip.url),\n          style: {\n            backgroundColor: 'black',\n            color: 'hsl(128, 100%, 50%)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 354\n          },\n          __self: this\n        }, \"Download Testing Performed\")), React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: _this.renderDropDown4(),\n          triggerWhenOpen: _this.renderHide(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 357\n          },\n          __self: this\n        }, React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.moddetails.replace(/'''/g, '\"')).contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 362\n          },\n          __self: this\n        })), x.teststeps != null && React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: _this.renderDropDown9(),\n          triggerWhenOpen: _this.renderHide(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 369\n          },\n          __self: this\n        }, React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.teststeps.replace(/'''/g, '\"')).contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 374\n          },\n          __self: this\n        })), x.sidenotes != null && x.sidenotes != '' && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 382\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 383\n          },\n          __self: this\n        }, \"Notes: \", \"\\xA0\"), React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384\n          },\n          __self: this\n        }, x.sidenotes))));\n      }));\n    };\n\n    _this.renderRevokedMods = function () {\n      var mods = _this.state.mods;\n      var revokedMods = mods.filter(function (prop) {\n        return prop.status.toLowerCase().includes('revoked'.toLowerCase());\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 403\n        },\n        __self: this\n      }, revokedMods.map(function (x) {\n        return React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: React.createElement(\"span\", {\n            className: \"trigger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 408\n            },\n            __self: this\n          }, \"Mod \", x.modnumber, \" | \", x.title),\n          triggerWhenOpen: React.createElement(\"span\", {\n            className: \"trigger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 409\n            },\n            __self: this\n          }, \"Mod \", x.modnumber),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 406\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          key: x._id,\n          style: {\n            marginTop: '10px',\n            backgroundColor: '#eee',\n            display: 'block'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 411\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 412\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/updatemod/\".concat(x._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 413\n          },\n          __self: this\n        }, React.createElement(FaEdit, {\n          size: 30,\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 414\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 417\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl, \"/admin/plugins/content-manager/mods/\").concat(x._id, \"?redirectUrl=/plugins/content-manager/mods?_limit=10&_page=1&_sort=_id&_q=abc&source=content-manager\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 418\n          },\n          __self: this\n        }, React.createElement(FaFileUpload, {\n          size: 30,\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 419\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 422\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"#\",\n          onClick: _this.auditMod.bind(_assertThisInitialized(_assertThisInitialized(_this)), x._id, x.isaudit),\n          style: {\n            backgroundColor: '#333'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 423\n          },\n          __self: this\n        }, React.createElement(FaSearchDollar, {\n          size: 30,\n          style: {\n            color: 'orange',\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 424\n          },\n          __self: this\n        }))), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 427\n          },\n          __self: this\n        }, \"Mod \", x.modnumber), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 428\n          },\n          __self: this\n        }, x.trackerid), React.createElement(\"h5\", {\n          style: {\n            color: '#007bff'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 429\n          },\n          __self: this\n        }, x.title), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 430\n          },\n          __self: this\n        }, \"Testing Status: \", x.status), x.jira != null && x.jira !== '' && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 432\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: x.jira,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 433\n          },\n          __self: this\n        }, \"Jira\")), x.testingzip != null && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 437\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl).concat(x.testingzip.url),\n          style: {\n            backgroundColor: 'black',\n            color: 'hsl(128, 100%, 50%)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 438\n          },\n          __self: this\n        }, \"Download Testing Performed\")), React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: _this.renderDropDown4(),\n          triggerWhenOpen: _this.renderHide(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 441\n          },\n          __self: this\n        }, React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.moddetails.replace(/'''/g, '\"')).contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 446\n          },\n          __self: this\n        })), x.teststeps != null && React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: _this.renderDropDown9(),\n          triggerWhenOpen: _this.renderHide(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 453\n          },\n          __self: this\n        }, React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.teststeps.replace(/'''/g, '\"')).contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 458\n          },\n          __self: this\n        })), x.sidenotes != null && x.sidenotes != '' && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 466\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 467\n          },\n          __self: this\n        }, \"Notes: \", \"\\xA0\"), React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 468\n          },\n          __self: this\n        }, x.sidenotes))));\n      }));\n    };\n\n    _this.renderAuditMods = function () {\n      var mods = _this.state.mods;\n      var auditMods = mods.filter(function (prop) {\n        return prop.isaudit === true;\n      });\n      /*let auditMods = mods.filter(prop => {\r\n          return prop.status.toLowerCase().includes('audit'.toLowerCase())\r\n      })*/\n\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 489\n        },\n        __self: this\n      }, auditMods.map(function (x) {\n        return React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: React.createElement(\"span\", {\n            className: \"trigger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 494\n            },\n            __self: this\n          }, \"Mod \", x.modnumber, \" | \", x.title),\n          triggerWhenOpen: React.createElement(\"span\", {\n            className: \"trigger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 495\n            },\n            __self: this\n          }, \"Mod \", x.modnumber),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 492\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          key: x._id,\n          style: {\n            marginTop: '10px',\n            backgroundColor: '#eee',\n            display: 'block'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 497\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 498\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/updatemod/\".concat(x._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 499\n          },\n          __self: this\n        }, React.createElement(FaEdit, {\n          size: 30,\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 500\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 503\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl, \"/admin/plugins/content-manager/mods/\").concat(x._id, \"?redirectUrl=/plugins/content-manager/mods?_limit=10&_page=1&_sort=_id&_q=abc&source=content-manager\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 504\n          },\n          __self: this\n        }, React.createElement(FaFileUpload, {\n          size: 30,\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 505\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 508\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"#\",\n          onClick: _this.auditMod.bind(_assertThisInitialized(_assertThisInitialized(_this)), x._id, x.isaudit),\n          style: {\n            backgroundColor: '#333'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 509\n          },\n          __self: this\n        }, React.createElement(FaSearchDollar, {\n          size: 30,\n          style: {\n            color: 'orange',\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 510\n          },\n          __self: this\n        }))), x.isaudit === true && React.createElement(Alert, {\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 514\n          },\n          __self: this\n        }, \"Audited\"), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 516\n          },\n          __self: this\n        }, \"Mod \", x.modnumber), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 517\n          },\n          __self: this\n        }, x.trackerid), React.createElement(\"h5\", {\n          style: {\n            color: '#007bff'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 518\n          },\n          __self: this\n        }, x.title), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 519\n          },\n          __self: this\n        }, \"Testing Status: \", x.status), x.jira != null && x.jira !== '' && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 521\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: x.jira,\n          style: {\n            backgroundColor: 'black',\n            color: 'orange'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 522\n          },\n          __self: this\n        }, \"Jira\")), x.testingzip != null && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 526\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl).concat(x.testingzip.url),\n          style: {\n            backgroundColor: 'black',\n            color: 'hsl(128, 100%, 50%)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 527\n          },\n          __self: this\n        }, \"Download Testing Performed\")), React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: _this.renderDropDown4(),\n          triggerWhenOpen: _this.renderHide(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 530\n          },\n          __self: this\n        }, React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.moddetails.replace(/'''/g, '\"')).contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 535\n          },\n          __self: this\n        })), x.teststeps != null && React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: _this.renderDropDown9(),\n          triggerWhenOpen: _this.renderHide(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 542\n          },\n          __self: this\n        }, React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.teststeps.replace(/'''/g, '\"')).contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 547\n          },\n          __self: this\n        })), x.sidenotes != null && x.sidenotes != '' && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 555\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 556\n          },\n          __self: this\n        }, \"Notes: \", \"\\xA0\"), React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 557\n          },\n          __self: this\n        }, x.sidenotes))));\n      }));\n    };\n\n    _this.renderTestableMods = function () {\n      var mods = _this.state.mods;\n      var testableMods = mods.filter(function (prop) {\n        return prop.status.toLowerCase().includes('testable'.toLowerCase());\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 574\n        },\n        __self: this\n      }, testableMods.map(function (x) {\n        return React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: React.createElement(\"span\", {\n            className: \"trigger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 579\n            },\n            __self: this\n          }, \"Mod \", x.modnumber, \" | \", x.title),\n          triggerWhenOpen: React.createElement(\"span\", {\n            className: \"trigger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 580\n            },\n            __self: this\n          }, \"Mod \", x.modnumber),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 577\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          key: x._id,\n          style: {\n            marginTop: '10px',\n            backgroundColor: '#eee',\n            display: 'block'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 582\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 583\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/updatemod/\".concat(x._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 584\n          },\n          __self: this\n        }, React.createElement(FaEdit, {\n          size: 30,\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 585\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 588\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl, \"/admin/plugins/content-manager/mods/\").concat(x._id, \"?redirectUrl=/plugins/content-manager/mods?_limit=10&_page=1&_sort=_id&_q=abc&source=content-manager\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 589\n          },\n          __self: this\n        }, React.createElement(FaFileUpload, {\n          size: 30,\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 590\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 593\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"#\",\n          onClick: _this.auditMod.bind(_assertThisInitialized(_assertThisInitialized(_this)), x._id, x.isaudit),\n          style: {\n            backgroundColor: '#333'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 594\n          },\n          __self: this\n        }, React.createElement(FaSearchDollar, {\n          size: 30,\n          style: {\n            color: 'orange',\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 595\n          },\n          __self: this\n        }))), x.isaudit === true && React.createElement(Alert, {\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 599\n          },\n          __self: this\n        }, \"Audited\"), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 601\n          },\n          __self: this\n        }, \"Mod \", x.modnumber), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 602\n          },\n          __self: this\n        }, x.trackerid), React.createElement(\"h5\", {\n          style: {\n            color: '#007bff'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 603\n          },\n          __self: this\n        }, x.title), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 604\n          },\n          __self: this\n        }, \"Testing Status: \", x.status), x.jira != null && x.jira !== '' && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 606\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: x.jira,\n          style: {\n            backgroundColor: 'black',\n            color: 'orange'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 607\n          },\n          __self: this\n        }, \"Jira\")), x.testingzip != null && x.sidenotes != '' && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 611\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl).concat(x.testingzip.url),\n          style: {\n            backgroundColor: 'black',\n            color: 'hsl(128, 100%, 50%)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 612\n          },\n          __self: this\n        }, \"Download Testing Performed\")), React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: _this.renderDropDown4(),\n          triggerWhenOpen: _this.renderHide(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 615\n          },\n          __self: this\n        }, React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.moddetails.replace(/'''/g, '\"')).contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 620\n          },\n          __self: this\n        })), x.teststeps != null && React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: _this.renderDropDown9(),\n          triggerWhenOpen: _this.renderHide(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 627\n          },\n          __self: this\n        }, React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.teststeps.replace(/'''/g, '\"')).contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 632\n          },\n          __self: this\n        })), x.sidenotes != null && x.sidenotes != '' && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 640\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 641\n          },\n          __self: this\n        }, \"Notes: \", \"\\xA0\"), React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 642\n          },\n          __self: this\n        }, x.sidenotes))));\n      }));\n    };\n\n    _this.renderJiraMods = function () {\n      var mods = _this.state.mods;\n      var jiraMods = mods.filter(function (prop) {\n        return prop.status.toLowerCase().includes('jira'.toLowerCase());\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 659\n        },\n        __self: this\n      }, jiraMods.map(function (x) {\n        return React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: React.createElement(\"span\", {\n            className: \"trigger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 664\n            },\n            __self: this\n          }, \"Mod \", x.modnumber, \" | \", x.title),\n          triggerWhenOpen: React.createElement(\"span\", {\n            className: \"trigger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 665\n            },\n            __self: this\n          }, \"Mod \", x.modnumber),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 662\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          key: x._id,\n          style: {\n            marginTop: '10px',\n            backgroundColor: '#eee',\n            display: 'block'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 667\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 668\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/updatemod/\".concat(x._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 669\n          },\n          __self: this\n        }, React.createElement(FaEdit, {\n          size: 30,\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 670\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 673\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl, \"/admin/plugins/content-manager/mods/\").concat(x._id, \"?redirectUrl=/plugins/content-manager/mods?_limit=10&_page=1&_sort=_id&_q=abc&source=content-manager\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 674\n          },\n          __self: this\n        }, React.createElement(FaFileUpload, {\n          size: 30,\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 675\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 678\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"#\",\n          onClick: _this.auditMod.bind(_assertThisInitialized(_assertThisInitialized(_this)), x._id, x.isaudit),\n          style: {\n            backgroundColor: '#333'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 679\n          },\n          __self: this\n        }, React.createElement(FaSearchDollar, {\n          size: 30,\n          style: {\n            color: 'orange',\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 680\n          },\n          __self: this\n        }))), x.isaudit === true && React.createElement(Alert, {\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 684\n          },\n          __self: this\n        }, \"Audited\"), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 686\n          },\n          __self: this\n        }, \"Mod \", x.modnumber), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 687\n          },\n          __self: this\n        }, x.trackerid), React.createElement(\"h5\", {\n          style: {\n            color: '#007bff'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 688\n          },\n          __self: this\n        }, x.title), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 689\n          },\n          __self: this\n        }, \"Testing Status: \", x.status), x.jira != null && x.jira !== '' && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 691\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: x.jira,\n          style: {\n            backgroundColor: 'black',\n            color: 'orange'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 692\n          },\n          __self: this\n        }, \"Jira\")), x.testingzip != null && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 696\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl).concat(x.testingzip.url),\n          style: {\n            backgroundColor: 'black',\n            color: 'hsl(128, 100%, 50%)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 697\n          },\n          __self: this\n        }, \"Download Testing Performed\")), React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: _this.renderDropDown4(),\n          triggerWhenOpen: _this.renderHide(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 700\n          },\n          __self: this\n        }, React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.moddetails.replace(/'''/g, '\"')).contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 705\n          },\n          __self: this\n        })), x.teststeps != null && React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: _this.renderDropDown9(),\n          triggerWhenOpen: _this.renderHide(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 712\n          },\n          __self: this\n        }, React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.teststeps.replace(/'''/g, '\"')).contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 717\n          },\n          __self: this\n        })), x.sidenotes != null && x.sidenotes != '' && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 725\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 726\n          },\n          __self: this\n        }, \"Notes: \", \"\\xA0\"), React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 727\n          },\n          __self: this\n        }, x.sidenotes))));\n      }));\n    };\n\n    _this.renderCompleteMods = function () {\n      var mods = _this.state.mods;\n      var completeMods = mods.filter(function (prop) {\n        return prop.status.toLowerCase().includes('complete'.toLowerCase());\n      });\n      return React.createElement(\"div\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 744\n        },\n        __self: this\n      }, completeMods.map(function (x) {\n        return React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: React.createElement(\"span\", {\n            className: \"trigger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 749\n            },\n            __self: this\n          }, \"Mod \", x.modnumber, \" | \", x.title),\n          triggerWhenOpen: React.createElement(\"span\", {\n            className: \"trigger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 750\n            },\n            __self: this\n          }, \"Mod \", x.modnumber),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 747\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          key: x._id,\n          style: {\n            marginTop: '10px',\n            backgroundColor: '#eee',\n            display: 'block'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 752\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 753\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/updatemod/\".concat(x._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 754\n          },\n          __self: this\n        }, React.createElement(FaEdit, {\n          size: 30,\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 755\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 758\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl, \"/admin/plugins/content-manager/mods/\").concat(x._id, \"?redirectUrl=/plugins/content-manager/mods?_limit=10&_page=1&_sort=_id&_q=abc&source=content-manager\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 759\n          },\n          __self: this\n        }, React.createElement(FaFileUpload, {\n          size: 30,\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 760\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 763\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"#\",\n          onClick: _this.auditMod.bind(_assertThisInitialized(_assertThisInitialized(_this)), x._id, x.isaudit),\n          style: {\n            backgroundColor: '#333'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 764\n          },\n          __self: this\n        }, React.createElement(FaSearchDollar, {\n          size: 30,\n          style: {\n            color: 'orange',\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 765\n          },\n          __self: this\n        }))), x.isaudit === true && React.createElement(Alert, {\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 769\n          },\n          __self: this\n        }, \"Audited\"), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 771\n          },\n          __self: this\n        }, \"Mod \", x.modnumber), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 772\n          },\n          __self: this\n        }, x.trackerid), React.createElement(\"h5\", {\n          style: {\n            color: '#007bff'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 773\n          },\n          __self: this\n        }, x.title), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 774\n          },\n          __self: this\n        }, \"Testing Status: \", x.status), x.jira != null && x.jira !== '' && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 776\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: x.jira,\n          style: {\n            backgroundColor: 'black',\n            color: 'orange'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 777\n          },\n          __self: this\n        }, \"Jira\")), x.testingzip != null && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 781\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl).concat(x.testingzip.url),\n          style: {\n            backgroundColor: 'black',\n            color: 'hsl(128, 100%, 50%)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 782\n          },\n          __self: this\n        }, \"Download Testing Performed\")), React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: _this.renderDropDown4(),\n          triggerWhenOpen: _this.renderHide(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 785\n          },\n          __self: this\n        }, React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.moddetails.replace(/'''/g, '\"')).contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 790\n          },\n          __self: this\n        })), x.teststeps != null && React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: _this.renderDropDown9(),\n          triggerWhenOpen: _this.renderHide(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 797\n          },\n          __self: this\n        }, React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.teststeps.replace(/'''/g, '\"')).contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 802\n          },\n          __self: this\n        })), x.sidenotes != null && x.sidenotes != '' && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 810\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 811\n          },\n          __self: this\n        }, \"Notes: \", \"\\xA0\"), React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 812\n          },\n          __self: this\n        }, x.sidenotes))));\n      }));\n    };\n\n    console.log(_this.props);\n    var html = '<p>Testing 1234 😀</p>';\n    var contentBlock = htmlToDraft(html);\n\n    if (contentBlock) {\n      var contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\n      var editorState = EditorState.createWithContent(contentState);\n      _this.state = {\n        loadingItems: true,\n        mods: [],\n        html: '',\n        editorState: editorState,\n        auditModsCount: _this.props.auditModsCount,\n        modsCount: _this.props.modsCount,\n        testableModsCount: _this.props.testableModsCount,\n        completeModsCount: _this.props.completeModsCount,\n        jiraModsCount: _this.props.jiraModsCount,\n        questionableModsCount: _this.props.questionableModsCount,\n        revokedModsCount: _this.props.revokedModsCount\n      };\n    }\n\n    console.log(_this.state);\n    return _this;\n  }\n\n  _createClass(ModList, [{\n    key: \"componentDidMount\",\n    value: function () {\n      var _componentDidMount = _asyncToGenerator(\n      /*#__PURE__*/\n      _regeneratorRuntime.mark(function _callee3() {\n        var response, getMods, ModsList, i, j;\n        return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.prev = 0;\n                _context3.next = 3;\n                return strapi.request('POST', '/graphql', {\n                  data: {\n                    query: \"query {\\n                    submission (id : \\\"\".concat(this.props.submissionId, \"\\\") {\\n                        file\\n                        received\\n                        processed\\n                        begin\\n                        packageurl\\n                        versions {\\n                            _id\\n                            version\\n                            mods {\\n                                _id\\n                                modnumber\\n                                title\\n                                isaudit\\n                                trackerid\\n                                moddetails\\n                                status\\n                                jira\\n                                teststeps\\n                                sidenotes\\n                                rewrite\\n                                testingzip {\\n                                    _id\\n                                    url\\n                                }\\n                            }\\n                        }\\n                        vendor {\\n                        _id\\n                        name\\n                        logo {\\n                          _id\\n                          url\\n                        }\\n                      }\\n                        jurisdictions {\\n                        _id\\n                        jurisdiction\\n                      }\\n                      urns {\\n                          _id\\n                          url\\n                      }\\n                      application {\\n                          _id\\n                          name\\n                      }\\n                  }\\n                }\")\n                  }\n                });\n\n              case 3:\n                response = _context3.sent;\n                getMods = response.data.submission.versions.sort(function (a, b) {\n                  return b.version.localeCompare(a.version);\n                }).map(function (a) {\n                  return a.mods.sort(function (a, b) {\n                    return a.modnumber - b.modnumber;\n                  });\n                });\n                ModsList = [];\n\n                for (i = 0; i < getMods.length; i++) {\n                  j = 0;\n\n                  while (j < getMods[i].length) {\n                    ModsList.push(getMods[i][j]);\n                    j++;\n                  }\n                }\n\n                this.setState({\n                  loadingItems: false,\n                  mods: ModsList\n                });\n                _context3.next = 14;\n                break;\n\n              case 10:\n                _context3.prev = 10;\n                _context3.t0 = _context3[\"catch\"](0);\n                console.log(_context3.t0);\n                this.setState({\n                  loadingItems: false\n                });\n\n              case 14:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, _callee3, this, [[0, 10]]);\n      }));\n\n      return function componentDidMount() {\n        return _componentDidMount.apply(this, arguments);\n      };\n    }()\n  }, {\n    key: \"renderMods\",\n    value: function renderMods() {\n      var _this2 = this;\n\n      var mods = this.state.mods;\n      return mods.map(function (x, index) {\n        return React.createElement(Collapsible, {\n          transitionTime: \"250\",\n          trigger: React.createElement(\"span\", {\n            className: \"trigger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 227\n            },\n            __self: this\n          }, \"Mod \", index + 1, \" | \", x.title, \" | \", x.trackerid, \" \"),\n          triggerWhenOpen: React.createElement(\"span\", {\n            className: \"trigger\",\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 228\n            },\n            __self: this\n          }, \"Mod \", index + 1),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 225\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"card\",\n          key: x._id,\n          style: {\n            marginTop: '10px',\n            backgroundColor: '#eee',\n            display: 'block'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 230\n          },\n          __self: this\n        }, React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 231\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"/updatemod/\".concat(x._id),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 232\n          },\n          __self: this\n        }, React.createElement(FaEdit, {\n          size: 30,\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 233\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"iconbutton\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 236\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl, \"/admin/plugins/content-manager/mods/\").concat(x._id, \"?redirectUrl=/plugins/content-manager/mods?_limit=10&_page=1&_sort=_id&_q=abc&source=content-manager\"),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 237\n          },\n          __self: this\n        }, React.createElement(FaFileUpload, {\n          size: 30,\n          style: {\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 238\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginLeft: '10px',\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"#\",\n          onClick: _this2.deleteMod.bind(_this2, x._id, index),\n          style: {\n            backgroundColor: '#333'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 242\n          },\n          __self: this\n        }, React.createElement(FaTrash, {\n          size: 30,\n          style: {\n            color: 'red',\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 243\n          },\n          __self: this\n        }))), React.createElement(\"div\", {\n          className: \"iconbutton\",\n          style: {\n            marginRight: '10px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246\n          },\n          __self: this\n        }, React.createElement(Link, {\n          to: \"#\",\n          onClick: _this2.auditMod.bind(_this2, x._id, x.isaudit, index),\n          style: {\n            backgroundColor: '#333'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247\n          },\n          __self: this\n        }, React.createElement(FaSearchDollar, {\n          size: 30,\n          style: {\n            color: 'orange',\n            marginTop: '5px',\n            marginBottom: '5px'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 248\n          },\n          __self: this\n        }))), x.isaudit === true && React.createElement(Alert, {\n          color: \"danger\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 252\n          },\n          __self: this\n        }, \"Audited\"), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 254\n          },\n          __self: this\n        }, \"Mod \", index + 1), x.trackerid != null && x.trackerid !== '' && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 256\n          },\n          __self: this\n        }, x.trackerid), React.createElement(\"h5\", {\n          style: {\n            color: '#007bff'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 258\n          },\n          __self: this\n        }, x.title), React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259\n          },\n          __self: this\n        }, \"Testing Status: \", x.status), x.jira != null && x.jira !== '' && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: x.jira,\n          style: {\n            backgroundColor: 'black',\n            color: 'orange'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 262\n          },\n          __self: this\n        }, \"Jira\")), x.testingzip != null && React.createElement(\"h5\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 266\n          },\n          __self: this\n        }, React.createElement(\"a\", {\n          href: \"\".concat(apiUrl).concat(x.testingzip.url),\n          style: {\n            backgroundColor: 'black',\n            color: 'hsl(128, 100%, 50%)'\n          },\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 267\n          },\n          __self: this\n        }, \"Download Testing Performed\")), React.createElement(Collapsible, {\n          transitionTime: 250,\n          trigger: _this2.renderDropDown4(),\n          triggerWhenOpen: _this2.renderHide(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 270\n          },\n          __self: this\n        }, React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.moddetails.replace(/'''/g, '\"')).contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 275\n          },\n          __self: this\n        })), x.teststeps != null && React.createElement(Collapsible, {\n          transitionTime: 250,\n          trigger: _this2.renderDropDown9(),\n          triggerWhenOpen: _this2.renderHide(),\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 282\n          },\n          __self: this\n        }, React.createElement(Editor, {\n          editorState: EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.teststeps.replace(/'''/g, '\"')).contentBlocks)),\n          readOnly: \"true\",\n          toolbarHidden: \"true\",\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287\n          },\n          __self: this\n        })), x.sidenotes != null && x.sidenotes !== '' && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 295\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 296\n          },\n          __self: this\n        }, \"Notes: \", \"\\xA0\"), React.createElement(\"em\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 297\n          },\n          __self: this\n        }, x.sidenotes)), x.rewrite != null && x.rewrite !== '' && React.createElement(\"p\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 301\n          },\n          __self: this\n        }, React.createElement(\"strong\", {\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 302\n          },\n          __self: this\n        }, \"Rewrite:\"), \" \", x.rewrite)));\n      });\n    }\n  }, {\n    key: \"renderDropDown3\",\n    value: function renderDropDown3() {\n      var modsCount = this.state.modsCount;\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 826\n        },\n        __self: this\n      }, \"Mods:  (\", modsCount, \")\");\n    }\n  }, {\n    key: \"renderDropDown4\",\n    value: function renderDropDown4() {\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 834\n        },\n        __self: this\n      }, \"Details:\");\n    }\n  }, {\n    key: \"renderDropDown9\",\n    value: function renderDropDown9() {\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 842\n        },\n        __self: this\n      }, \"Test Steps:\");\n    }\n  }, {\n    key: \"renderDropDown5\",\n    value: function renderDropDown5() {\n      var auditModsCount = this.state.auditModsCount;\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 851\n        },\n        __self: this\n      }, \"Audited Mods: (\", auditModsCount, \")\");\n    }\n  }, {\n    key: \"renderDropDown6\",\n    value: function renderDropDown6() {\n      var testableModsCount = this.state.testableModsCount;\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 860\n        },\n        __self: this\n      }, \"Testable Mods: (\", testableModsCount, \")\");\n    }\n  }, {\n    key: \"renderDropDown7\",\n    value: function renderDropDown7() {\n      var jiraModsCount = this.state.jiraModsCount;\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 869\n        },\n        __self: this\n      }, \"Mods in JIRA:  (\", jiraModsCount, \")\");\n    }\n  }, {\n    key: \"renderDropDown8\",\n    value: function renderDropDown8() {\n      var questionableModsCount = this.state.questionableModsCount;\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 878\n        },\n        __self: this\n      }, \"Possible Audit:  (\", questionableModsCount, \")\");\n    }\n  }, {\n    key: \"renderDropDown11\",\n    value: function renderDropDown11() {\n      var revokedModsCount = this.state.revokedModsCount;\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 887\n        },\n        __self: this\n      }, \"Revoked Mods: (\", revokedModsCount, \")\");\n    }\n  }, {\n    key: \"renderDropDown10\",\n    value: function renderDropDown10() {\n      var completeModsCount = this.state.completeModsCount;\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 896\n        },\n        __self: this\n      }, \"Completed:  (\", completeModsCount, \")\");\n    }\n  }, {\n    key: \"renderHide\",\n    value: function renderHide() {\n      return React.createElement(\"span\", {\n        className: \"trigger\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 904\n        },\n        __self: this\n      }, \"Hide\");\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loadingItems = _this$state.loadingItems,\n          revokedModsCount = _this$state.revokedModsCount,\n          auditModsCount = _this$state.auditModsCount,\n          completeModsCount = _this$state.completeModsCount,\n          jiraModsCount = _this$state.jiraModsCount,\n          questionableModsCount = _this$state.questionableModsCount,\n          testableModsCount = _this$state.testableModsCount;\n      return React.createElement(\"div\", {\n        style: {\n          textAlign: 'center'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 913\n        },\n        __self: this\n      }, React.createElement(Collapsible, {\n        transitionTime: 250,\n        trigger: this.renderDropDown3(),\n        triggerWhenOpen: this.renderHide(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 914\n        },\n        __self: this\n      }, this.renderMods()), auditModsCount > 0 && React.createElement(Collapsible, {\n        transitionTime: 250,\n        trigger: this.renderDropDown5(),\n        triggerWhenOpen: this.renderHide(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 922\n        },\n        __self: this\n      }, this.renderAuditMods()), testableModsCount > 0 && React.createElement(Collapsible, {\n        transitionTime: 250,\n        trigger: this.renderDropDown6(),\n        triggerWhenOpen: this.renderHide(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 930\n        },\n        __self: this\n      }, this.renderTestableMods()), jiraModsCount > 0 && React.createElement(Collapsible, {\n        transitionTime: 250,\n        trigger: this.renderDropDown7(),\n        triggerWhenOpen: this.renderHide(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 938\n        },\n        __self: this\n      }, this.renderJiraMods()), questionableModsCount > 0 && React.createElement(Collapsible, {\n        transitionTime: 250,\n        trigger: this.renderDropDown8(),\n        triggerWhenOpen: this.renderHide(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 946\n        },\n        __self: this\n      }, this.renderQuestionableMods()), completeModsCount > 0 && React.createElement(Collapsible, {\n        transitionTime: 250,\n        trigger: this.renderDropDown10(),\n        triggerWhenOpen: this.renderHide(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 954\n        },\n        __self: this\n      }, this.renderCompleteMods()), revokedModsCount > 0 && React.createElement(Collapsible, {\n        transitionTime: 250,\n        trigger: this.renderDropDown11(),\n        triggerWhenOpen: this.renderHide(),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 962\n        },\n        __self: this\n      }, this.renderRevokedMods()), React.createElement(\"div\", {\n        className: \"fixed-action-btn\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 969\n        },\n        __self: this\n      }, React.createElement(Link, {\n        style: {\n          backgroundColor: '#333',\n          marginRight: '20px'\n        },\n        className: \"btn-floating btn-large right\",\n        to: \"/newmod/\".concat(this.props.submissionId),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970\n        },\n        __self: this\n      }, React.createElement(\"i\", {\n        className: \"material-icons\",\n        style: {\n          color: 'hsl(128, 100%, 50%)'\n        },\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 971\n        },\n        __self: this\n      }, \"add\"))), loadingItems && React.createElement(Loader, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 974\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ModList;\n}(Component);\n\nexport default ModList;","map":{"version":3,"sources":["/home/aely/gli/src/Components/ModList.js"],"names":["React","Component","Loader","Link","Strapi","Alert","Editor","EditorState","convertToRaw","ContentState","htmlToDraft","draftToHtml","Collapsible","FaEdit","FaFileUpload","FaTrash","FaSearchDollar","apiUrl","process","env","API_URL","strapi","ModList","props","onEditorStateChange","editorState","setState","html","getCurrentContent","replace","deleteMod","id","request","data","query","mods","state","index","findIndex","x","_id","splice","console","log","auditMod","isaudit","auditModsCount","filter","prop","length","_uploadImageCallBack","file","uploadedImages","imageObject","localSrc","URL","createObjectURL","dburl","name","push","Promise","resolve","reject","link","renderQuestionableMods","questionableMods","status","toLowerCase","includes","map","modnumber","title","marginTop","backgroundColor","display","marginLeft","marginRight","marginBottom","bind","color","trackerid","jira","testingzip","url","renderDropDown4","renderHide","createWithContent","createFromBlockArray","moddetails","contentBlocks","teststeps","renderDropDown9","sidenotes","renderRevokedMods","revokedMods","renderAuditMods","auditMods","renderTestableMods","testableMods","renderJiraMods","jiraMods","renderCompleteMods","completeMods","contentBlock","contentState","loadingItems","modsCount","testableModsCount","completeModsCount","jiraModsCount","questionableModsCount","revokedModsCount","submissionId","response","getMods","submission","versions","sort","a","b","version","localeCompare","ModsList","i","j","rewrite","textAlign","renderDropDown3","renderMods","renderDropDown5","renderDropDown6","renderDropDown7","renderDropDown8","renderDropDown10","renderDropDown11"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Loader from './Loader';\r\nimport { Link } from 'react-router-dom';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nimport { Alert } from 'reactstrap';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport Collapsible from 'react-collapsible';\r\nimport { FaEdit, FaFileUpload, FaTrash, FaSearchDollar } from 'react-icons/fa';\r\nconst apiUrl = process.env.API_URL || 'http://192.168.0.248:1337';const strapi = new Strapi(apiUrl);\r\n\r\nclass ModList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        console.log(this.props);\r\n        let html = '<p>Testing 1234 😀</p>';\r\n        let contentBlock = htmlToDraft(html);\r\n        if (contentBlock) {\r\n            let contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n            let editorState = EditorState.createWithContent(contentState);\r\n            this.state = {\r\n                loadingItems: true,\r\n                mods: [],\r\n                html: '',\r\n                editorState,\r\n                auditModsCount: this.props.auditModsCount,\r\n                modsCount: this.props.modsCount,\r\n                testableModsCount: this.props.testableModsCount,\r\n                completeModsCount: this.props.completeModsCount,\r\n                jiraModsCount: this.props.jiraModsCount,\r\n                questionableModsCount: this.props.questionableModsCount,\r\n                revokedModsCount: this.props.revokedModsCount\r\n            }\r\n        }\r\n        console.log(this.state);\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            let response = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    submission (id : \"${this.props.submissionId}\") {\r\n                        file\r\n                        received\r\n                        processed\r\n                        begin\r\n                        packageurl\r\n                        versions {\r\n                            _id\r\n                            version\r\n                            mods {\r\n                                _id\r\n                                modnumber\r\n                                title\r\n                                isaudit\r\n                                trackerid\r\n                                moddetails\r\n                                status\r\n                                jira\r\n                                teststeps\r\n                                sidenotes\r\n                                rewrite\r\n                                testingzip {\r\n                                    _id\r\n                                    url\r\n                                }\r\n                            }\r\n                        }\r\n                        vendor {\r\n                        _id\r\n                        name\r\n                        logo {\r\n                          _id\r\n                          url\r\n                        }\r\n                      }\r\n                        jurisdictions {\r\n                        _id\r\n                        jurisdiction\r\n                      }\r\n                      urns {\r\n                          _id\r\n                          url\r\n                      }\r\n                      application {\r\n                          _id\r\n                          name\r\n                      }\r\n                  }\r\n                }`\r\n            }\r\n        }\r\n        );\r\n        let getMods = response.data.submission.versions.sort((a, b) => (b.version.localeCompare(a.version))).map(a => {return a.mods.sort((a, b) => (a.modnumber - b.modnumber))});\r\n        let ModsList = [];\r\n        for (let i = 0; i < getMods.length; i++){\r\n            let j = 0;\r\n            while (j < getMods[i].length) {\r\n                ModsList.push(getMods[i][j])\r\n                j++\r\n            }\r\n        }\r\n        this.setState({\r\n            loadingItems: false,\r\n            mods: ModsList\r\n        });\r\n        }catch (err) {\r\n            console.log(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState,\r\n            html: draftToHtml(convertToRaw(editorState.getCurrentContent())).replace(/[\\n]/g, '')\r\n        });\r\n    }\r\n\r\n    deleteMod = async (id) => {\r\n        try {\r\n            await strapi.request('DELETE', `/mods/${id}`, {\r\n                data: {\r\n                    query: `mutation {\r\n                        deleteMods(input: {\r\n                          where: {\r\n                            id: \"${id}\"\r\n                          }\r\n                        }) {\r\n                          mod {\r\n                            title\r\n                            trackerid\r\n                          }\r\n                        }\r\n                      }`\r\n                }\r\n            });\r\n            //window.location.reload();\r\n            let mods = this.state.mods;\r\n            let index = mods.findIndex(x => x._id === id);\r\n            mods = mods.splice(index, 1);\r\n            console.log(mods);\r\n            /*this.setState({\r\n                mods: mods.splice(index, 1),\r\n                modsCount: mods.length\r\n            })*/\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    auditMod = async (id, isaudit) => {\r\n        try {\r\n            await strapi.request('POST', `/graphql`, {\r\n                data: {\r\n                    query: `mutation {\r\n                        updateMods(input: {\r\n                          where: {\r\n                            id: \"${id}\"\r\n                          }\r\n                          data: {\r\n                            isaudit: ${!isaudit}\r\n                          }\r\n                        }) {\r\n                          mod {\r\n                            isaudit\r\n                          }\r\n                        }\r\n                      }`\r\n                }\r\n            });\r\n            //window.location.reload();\r\n            let mods = this.state.mods;\r\n            let index = mods.findIndex(x => x._id === id)\r\n            mods[index].isaudit = !isaudit;\r\n            this.setState({\r\n                mods: mods,\r\n                auditModsCount: mods.filter(prop => {\r\n                    return prop.isaudit === true\r\n                }).length\r\n            })\r\n        } catch (err) {\r\n            console.log(err);\r\n        }\r\n    }\r\n\r\n    _uploadImageCallBack = (file) => {\r\n        // long story short, every time we upload an image, we\r\n        // need to save it to the state so we can get it's data\r\n        // later when we decide what to do with it.\r\n    \r\n       // Make sure you have a uploadImages: [] as your default state\r\n        let { uploadedImages } = this.state;\r\n        console.log(uploadedImages);\r\n        const imageObject = {\r\n          file: file,\r\n          localSrc: URL.createObjectURL(file),\r\n          dburl: `${apiUrl}/uploads/${file.name}`\r\n        }\r\n\r\n        uploadedImages.push(imageObject);\r\n    \r\n        this.setState({uploadedImages: uploadedImages})\r\n    \r\n        // We need to return a promise with the image src\r\n        // the img src we will use here will be what's needed\r\n        // to preview it in the browser. This will be different than what\r\n        // we will see in the index.md file we generate.\r\n        return new Promise(\r\n          (resolve, reject) => {\r\n            resolve({ data: { link: imageObject.localSrc } });\r\n          }\r\n        );\r\n    }\r\n\r\n    renderMods() {\r\n        let { mods } = this.state;\r\n        return (\r\n        mods.map((x, index) => {\r\n        return (\r\n            <Collapsible\r\n            transitionTime='250'\r\n            trigger={<span className='trigger'>Mod {index + 1} | {x.title} | {x.trackerid} </span>}\r\n            triggerWhenOpen={<span className='trigger'>Mod {index + 1}</span>}\r\n            >\r\n            <div className=\"card\" key={x._id} style={{marginTop: '10px', backgroundColor: '#eee', display: 'block'}}>\r\n            <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                <Link to={`/updatemod/${x._id}`}>\r\n                    <FaEdit size={30} style={{marginTop:'5px', marginBottom: '5px'}}/>\r\n                </Link>\r\n            </div>\r\n            <div className='iconbutton'>\r\n            <a href={`${apiUrl}/admin/plugins/content-manager/mods/${x._id}?redirectUrl=/plugins/content-manager/mods?_limit=10&_page=1&_sort=_id&_q=abc&source=content-manager`} >\r\n                    <FaFileUpload size={30} style={{marginTop:'5px', marginBottom: '5px'}}/>\r\n                </a>\r\n            </div>\r\n            <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                <Link to='#' onClick={this.deleteMod.bind(this, x._id, index)} style={{backgroundColor: '#333'}}>\r\n                    <FaTrash size={30} style={{color: 'red', marginTop:'5px', marginBottom: '5px'}}/>\r\n                </Link>\r\n            </div>\r\n            <div className='iconbutton' style={{marginRight: '10px'}}>\r\n                <Link to='#' onClick={this.auditMod.bind(this, x._id, x.isaudit, index)} style={{backgroundColor: '#333'}}>\r\n                    <FaSearchDollar size={30} style={{color: 'orange', marginTop:'5px', marginBottom: '5px'}}/>\r\n                </Link>\r\n            </div>\r\n                {x.isaudit === true &&\r\n                <Alert color='danger'>Audited</Alert>\r\n                }\r\n                <h5>Mod {index + 1}</h5>\r\n                {x.trackerid != null && x.trackerid !== '' &&\r\n                <h5>{x.trackerid}</h5>\r\n                }\r\n                <h5 style={{color: '#007bff'}}>{x.title}</h5>\r\n                <h5>Testing Status: {x.status}</h5>\r\n                {x.jira != null && x.jira !== '' &&\r\n                    <h5>\r\n                        <a href={x.jira} style={{backgroundColor: 'black', color: 'orange'}}>Jira</a>\r\n                    </h5>\r\n                }\r\n                {x.testingzip != null &&\r\n                    <h5>\r\n                        <a href={`${apiUrl}${x.testingzip.url}`} style={{backgroundColor: 'black', color: 'hsl(128, 100%, 50%)'}}>Download Testing Performed</a>\r\n                    </h5>\r\n                }\r\n                <Collapsible \r\n                transitionTime={250}\r\n                trigger={this.renderDropDown4()}\r\n                triggerWhenOpen={this.renderHide()}\r\n                >\r\n                    <Editor \r\n                    editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.moddetails.replace(/'''/g, '\"')).contentBlocks))}\r\n                    readOnly='true'\r\n                    toolbarHidden='true'\r\n                    />\r\n                </Collapsible>\r\n                {x.teststeps != null &&\r\n                    <Collapsible \r\n                    transitionTime={250}\r\n                    trigger={this.renderDropDown9()}\r\n                    triggerWhenOpen={this.renderHide()}\r\n                    >\r\n                        <Editor \r\n                        editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.teststeps.replace(/'''/g, '\"')).contentBlocks))}\r\n                        readOnly='true'\r\n                        toolbarHidden='true'\r\n                        />\r\n                    </Collapsible>\r\n                }\r\n                {x.sidenotes != null && x.sidenotes !== '' &&\r\n                    <p>\r\n                        <strong>Notes: {'\\u00A0'}</strong>\r\n                        <em>{x.sidenotes}</em>\r\n                    </p>\r\n                }\r\n                {x.rewrite != null && x.rewrite !== '' &&\r\n                    <p>\r\n                        <strong>Rewrite:</strong> {x.rewrite}\r\n                    </p>\r\n                }\r\n            </div>\r\n            </Collapsible>\r\n            );\r\n            }\r\n        ))\r\n    }\r\n\r\n    renderQuestionableMods = () => {\r\n        let { mods } = this.state;\r\n        let questionableMods = mods.filter(prop => {\r\n            return prop.status.toLowerCase().includes('questionable'.toLowerCase())\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                {questionableMods.map(x => {\r\n                return (\r\n                    <Collapsible\r\n                    transitionTime='250'\r\n                    trigger={<span className='trigger'>Mod {x.modnumber} | {x.title}</span>}\r\n                    triggerWhenOpen={<span className='trigger'>Mod {x.modnumber}</span>}\r\n                    >\r\n                    <div className=\"card\" key={x._id} style={{marginTop: '10px', backgroundColor: '#eee', display: 'block'}}>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                    <Link to={`/updatemod/${x._id}`}>\r\n                        <FaEdit size={30} style={{marginTop:'5px', marginBottom: '5px'}}/>\r\n                    </Link>\r\n                    </div>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                    <a href={`${apiUrl}/admin/plugins/content-manager/mods/${x._id}?redirectUrl=/plugins/content-manager/mods?_limit=10&_page=1&_sort=_id&_q=abc&source=content-manager`} >\r\n                        <FaFileUpload size={30} style={{marginTop:'5px', marginBottom: '5px'}}/>\r\n                    </a>\r\n                    </div>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                        <Link to='#' onClick={this.auditMod.bind(this, x._id, x.isaudit)} style={{backgroundColor: '#333'}}>\r\n                            <FaSearchDollar size={30} style={{color: 'orange', marginTop:'5px', marginBottom: '5px'}}/>\r\n                        </Link>\r\n                    </div>\r\n                    <h5>Mod {x.modnumber}</h5>\r\n                    <h5>{x.trackerid}</h5>                   \r\n                    <h5 style={{color: '#007bff'}}>{x.title}</h5>\r\n                    <h5>Testing Status: {x.status}</h5>\r\n                    {x.jira != null && x.jira !== '' &&\r\n                        <h5>\r\n                            <a href={x.jira}>Jira</a>\r\n                        </h5>\r\n                    }\r\n                    {x.testingzip != null &&\r\n                        <h5>\r\n                            <a href={`${apiUrl}${x.testingzip.url}`} style={{backgroundColor: 'black', color: 'hsl(128, 100%, 50%)'}}>Download Testing Performed</a>\r\n                        </h5>\r\n                    }\r\n                    <Collapsible \r\n                    transitionTime=\"250\"\r\n                    trigger={this.renderDropDown4()}\r\n                    triggerWhenOpen={this.renderHide()}\r\n                    >\r\n                        <Editor \r\n                        editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.moddetails.replace(/'''/g, '\"')).contentBlocks))}\r\n                        readOnly='true'\r\n                        toolbarHidden='true'\r\n                        />\r\n                    </Collapsible>\r\n                    {x.teststeps != null &&\r\n                    <Collapsible \r\n                    transitionTime=\"250\"\r\n                    trigger={this.renderDropDown9()}\r\n                    triggerWhenOpen={this.renderHide()}\r\n                    >\r\n                        <Editor \r\n                        editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.teststeps.replace(/'''/g, '\"')).contentBlocks))}\r\n                        readOnly='true'\r\n                        toolbarHidden='true'\r\n                        />\r\n                    </Collapsible>\r\n                    }\r\n                    {x.sidenotes != null && x.sidenotes != '' &&\r\n                        <p>\r\n                            <strong>Notes: {'\\u00A0'}</strong>\r\n                            <em>{x.sidenotes}</em>\r\n                        </p>\r\n                    }\r\n                </div>\r\n                </Collapsible>\r\n                )\r\n                })}\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    renderRevokedMods = () => {\r\n        let { mods } = this.state;\r\n        let revokedMods = mods.filter(prop => {\r\n            return prop.status.toLowerCase().includes('revoked'.toLowerCase())\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                {revokedMods.map(x => {\r\n                return (\r\n                    <Collapsible\r\n                    transitionTime='250'\r\n                    trigger={<span className='trigger'>Mod {x.modnumber} | {x.title}</span>}\r\n                    triggerWhenOpen={<span className='trigger'>Mod {x.modnumber}</span>}\r\n                    >\r\n                    <div className=\"card\" key={x._id} style={{marginTop: '10px', backgroundColor: '#eee', display: 'block'}}>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                    <Link to={`/updatemod/${x._id}`}>\r\n                        <FaEdit size={30} style={{marginTop:'5px', marginBottom: '5px'}}/>\r\n                    </Link>\r\n                    </div>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                    <a href={`${apiUrl}/admin/plugins/content-manager/mods/${x._id}?redirectUrl=/plugins/content-manager/mods?_limit=10&_page=1&_sort=_id&_q=abc&source=content-manager`} >\r\n                        <FaFileUpload size={30} style={{marginTop:'5px', marginBottom: '5px'}}/>\r\n                    </a>\r\n                    </div>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                        <Link to='#' onClick={this.auditMod.bind(this, x._id, x.isaudit)} style={{backgroundColor: '#333'}}>\r\n                            <FaSearchDollar size={30} style={{color: 'orange', marginTop:'5px', marginBottom: '5px'}}/>\r\n                        </Link>\r\n                    </div>\r\n                    <h5>Mod {x.modnumber}</h5>\r\n                    <h5>{x.trackerid}</h5>                   \r\n                    <h5 style={{color: '#007bff'}}>{x.title}</h5>\r\n                    <h5>Testing Status: {x.status}</h5>\r\n                    {x.jira != null && x.jira !== '' &&\r\n                        <h5>\r\n                            <a href={x.jira}>Jira</a>\r\n                        </h5>\r\n                    }\r\n                    {x.testingzip != null &&\r\n                        <h5>\r\n                            <a href={`${apiUrl}${x.testingzip.url}`} style={{backgroundColor: 'black', color: 'hsl(128, 100%, 50%)'}}>Download Testing Performed</a>\r\n                        </h5>\r\n                    }\r\n                    <Collapsible \r\n                    transitionTime=\"250\"\r\n                    trigger={this.renderDropDown4()}\r\n                    triggerWhenOpen={this.renderHide()}\r\n                    >\r\n                        <Editor \r\n                        editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.moddetails.replace(/'''/g, '\"')).contentBlocks))}\r\n                        readOnly='true'\r\n                        toolbarHidden='true'\r\n                        />\r\n                    </Collapsible>\r\n                    {x.teststeps != null &&\r\n                    <Collapsible \r\n                    transitionTime=\"250\"\r\n                    trigger={this.renderDropDown9()}\r\n                    triggerWhenOpen={this.renderHide()}\r\n                    >\r\n                        <Editor \r\n                        editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.teststeps.replace(/'''/g, '\"')).contentBlocks))}\r\n                        readOnly='true'\r\n                        toolbarHidden='true'\r\n                        />\r\n                    </Collapsible>\r\n                    }\r\n                    {x.sidenotes != null && x.sidenotes != '' &&\r\n                        <p>\r\n                            <strong>Notes: {'\\u00A0'}</strong>\r\n                            <em>{x.sidenotes}</em>\r\n                        </p>\r\n                    }\r\n                </div>\r\n                </Collapsible>\r\n                )\r\n                })}\r\n            </div>\r\n            \r\n        )\r\n    }\r\n\r\n    renderAuditMods = () => {\r\n        let { mods } = this.state;\r\n        let auditMods = mods.filter(prop => {\r\n            return prop.isaudit === true\r\n        })\r\n        /*let auditMods = mods.filter(prop => {\r\n            return prop.status.toLowerCase().includes('audit'.toLowerCase())\r\n        })*/\r\n        return (\r\n            <div>\r\n                {auditMods.map(x => {\r\n                return (\r\n                    <Collapsible\r\n                    transitionTime='250'\r\n                    trigger={<span className='trigger'>Mod {x.modnumber} | {x.title}</span>}\r\n                    triggerWhenOpen={<span className='trigger'>Mod {x.modnumber}</span>}\r\n                    >\r\n                    <div className=\"card\" key={x._id} style={{marginTop: '10px', backgroundColor: '#eee', display: 'block'}}>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                    <Link to={`/updatemod/${x._id}`}>\r\n                        <FaEdit size={30} style={{marginTop:'5px', marginBottom: '5px'}}/>\r\n                    </Link>\r\n                    </div>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                    <a href={`${apiUrl}/admin/plugins/content-manager/mods/${x._id}?redirectUrl=/plugins/content-manager/mods?_limit=10&_page=1&_sort=_id&_q=abc&source=content-manager`} >\r\n                        <FaFileUpload size={30} style={{marginTop:'5px', marginBottom: '5px'}}/>\r\n                    </a>\r\n                    </div>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                        <Link to='#' onClick={this.auditMod.bind(this, x._id, x.isaudit)} style={{backgroundColor: '#333'}}>\r\n                            <FaSearchDollar size={30} style={{color: 'orange', marginTop:'5px', marginBottom: '5px'}}/>\r\n                        </Link>\r\n                    </div>\r\n                    {x.isaudit === true &&\r\n                    <Alert color='danger'>Audited</Alert>\r\n                    }\r\n                    <h5>Mod {x.modnumber}</h5>\r\n                    <h5>{x.trackerid}</h5>                   \r\n                    <h5 style={{color: '#007bff'}}>{x.title}</h5>\r\n                    <h5>Testing Status: {x.status}</h5>\r\n                    {x.jira != null && x.jira !== '' &&\r\n                        <h5>\r\n                            <a href={x.jira} style={{backgroundColor: 'black', color: 'orange'}}>Jira</a>\r\n                        </h5>\r\n                    }\r\n                    {x.testingzip != null &&\r\n                        <h5>\r\n                            <a href={`${apiUrl}${x.testingzip.url}`} style={{backgroundColor: 'black', color: 'hsl(128, 100%, 50%)'}}>Download Testing Performed</a>\r\n                        </h5>\r\n                    }\r\n                    <Collapsible \r\n                    transitionTime=\"250\"\r\n                    trigger={this.renderDropDown4()}\r\n                    triggerWhenOpen={this.renderHide()}\r\n                    >\r\n                        <Editor \r\n                        editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.moddetails.replace(/'''/g, '\"')).contentBlocks))}\r\n                        readOnly='true'\r\n                        toolbarHidden='true'\r\n                        />\r\n                    </Collapsible>\r\n                    {x.teststeps != null &&\r\n                    <Collapsible \r\n                    transitionTime=\"250\"\r\n                    trigger={this.renderDropDown9()}\r\n                    triggerWhenOpen={this.renderHide()}\r\n                    >\r\n                        <Editor \r\n                        editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.teststeps.replace(/'''/g, '\"')).contentBlocks))}\r\n                        readOnly='true'\r\n                        toolbarHidden='true'\r\n                        />\r\n                    </Collapsible>\r\n                    }\r\n                    {x.sidenotes != null && x.sidenotes != '' &&\r\n                        <p>\r\n                            <strong>Notes: {'\\u00A0'}</strong>\r\n                            <em>{x.sidenotes}</em>\r\n                        </p>\r\n                    }\r\n                </div>\r\n                </Collapsible>\r\n                )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderTestableMods = () => {\r\n        let { mods } = this.state;\r\n        let testableMods = mods.filter(prop => {\r\n            return prop.status.toLowerCase().includes('testable'.toLowerCase())\r\n        });\r\n        return (\r\n            <div>\r\n                {testableMods.map(x => {\r\n                return (\r\n                    <Collapsible\r\n                    transitionTime='250'\r\n                    trigger={<span className='trigger'>Mod {x.modnumber} | {x.title}</span>}\r\n                    triggerWhenOpen={<span className='trigger'>Mod {x.modnumber}</span>}\r\n                    >\r\n                    <div className=\"card\" key={x._id} style={{marginTop: '10px', backgroundColor: '#eee', display: 'block'}}>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                    <Link to={`/updatemod/${x._id}`}>\r\n                        <FaEdit size={30} style={{marginTop:'5px', marginBottom: '5px'}}/>\r\n                    </Link>\r\n                    </div>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                    <a href={`${apiUrl}/admin/plugins/content-manager/mods/${x._id}?redirectUrl=/plugins/content-manager/mods?_limit=10&_page=1&_sort=_id&_q=abc&source=content-manager`} >\r\n                        <FaFileUpload size={30} style={{marginTop:'5px', marginBottom: '5px'}}/>\r\n                    </a>\r\n                    </div>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                        <Link to='#' onClick={this.auditMod.bind(this, x._id, x.isaudit)} style={{backgroundColor: '#333'}}>\r\n                            <FaSearchDollar size={30} style={{color: 'orange', marginTop:'5px', marginBottom: '5px'}}/>\r\n                        </Link>\r\n                    </div>\r\n                    {x.isaudit === true &&\r\n                    <Alert color='danger'>Audited</Alert>\r\n                    }\r\n                    <h5>Mod {x.modnumber}</h5>\r\n                    <h5>{x.trackerid}</h5>                   \r\n                    <h5 style={{color: '#007bff'}}>{x.title}</h5>\r\n                    <h5>Testing Status: {x.status}</h5>\r\n                    {x.jira != null && x.jira !== '' &&\r\n                        <h5>\r\n                            <a href={x.jira} style={{backgroundColor: 'black', color: 'orange'}}>Jira</a>\r\n                        </h5>\r\n                    }\r\n                    {x.testingzip != null && x.sidenotes != '' &&\r\n                        <h5>\r\n                            <a href={`${apiUrl}${x.testingzip.url}`} style={{backgroundColor: 'black', color: 'hsl(128, 100%, 50%)'}}>Download Testing Performed</a>\r\n                        </h5>\r\n                    }\r\n                    <Collapsible \r\n                    transitionTime=\"250\"\r\n                    trigger={this.renderDropDown4()}\r\n                    triggerWhenOpen={this.renderHide()}\r\n                    >\r\n                        <Editor \r\n                        editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.moddetails.replace(/'''/g, '\"')).contentBlocks))}\r\n                        readOnly='true'\r\n                        toolbarHidden='true'\r\n                        />\r\n                    </Collapsible>\r\n                    {x.teststeps != null &&\r\n                    <Collapsible \r\n                    transitionTime=\"250\"\r\n                    trigger={this.renderDropDown9()}\r\n                    triggerWhenOpen={this.renderHide()}\r\n                    >\r\n                        <Editor \r\n                        editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.teststeps.replace(/'''/g, '\"')).contentBlocks))}\r\n                        readOnly='true'\r\n                        toolbarHidden='true'\r\n                        />\r\n                    </Collapsible>\r\n                    }\r\n                    {x.sidenotes != null && x.sidenotes != '' &&\r\n                        <p>\r\n                            <strong>Notes: {'\\u00A0'}</strong>\r\n                            <em>{x.sidenotes}</em>\r\n                        </p>\r\n                    }\r\n                </div>\r\n                </Collapsible>\r\n                )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderJiraMods = () => {\r\n        let { mods } = this.state;\r\n        let jiraMods = mods.filter(prop => {\r\n            return prop.status.toLowerCase().includes('jira'.toLowerCase())\r\n        })\r\n        return (\r\n            <div>\r\n                {jiraMods.map(x => {\r\n                return (\r\n                    <Collapsible\r\n                    transitionTime='250'\r\n                    trigger={<span className='trigger'>Mod {x.modnumber} | {x.title}</span>}\r\n                    triggerWhenOpen={<span className='trigger'>Mod {x.modnumber}</span>}\r\n                    >\r\n                    <div className=\"card\" key={x._id} style={{marginTop: '10px', backgroundColor: '#eee', display: 'block'}}>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                    <Link to={`/updatemod/${x._id}`}>\r\n                        <FaEdit size={30} style={{marginTop:'5px', marginBottom: '5px'}}/>\r\n                    </Link>\r\n                    </div>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                    <a href={`${apiUrl}/admin/plugins/content-manager/mods/${x._id}?redirectUrl=/plugins/content-manager/mods?_limit=10&_page=1&_sort=_id&_q=abc&source=content-manager`} >\r\n                        <FaFileUpload size={30} style={{marginTop:'5px', marginBottom: '5px'}}/>\r\n                    </a>\r\n                    </div>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                        <Link to='#' onClick={this.auditMod.bind(this, x._id, x.isaudit)} style={{backgroundColor: '#333'}}>\r\n                            <FaSearchDollar size={30} style={{color: 'orange', marginTop:'5px', marginBottom: '5px'}}/>\r\n                        </Link>\r\n                    </div>\r\n                    {x.isaudit === true &&\r\n                    <Alert color='danger'>Audited</Alert>\r\n                    }\r\n                    <h5>Mod {x.modnumber}</h5>\r\n                    <h5>{x.trackerid}</h5>                   \r\n                    <h5 style={{color: '#007bff'}}>{x.title}</h5>\r\n                    <h5>Testing Status: {x.status}</h5>\r\n                    {x.jira != null && x.jira !== '' &&\r\n                        <h5>\r\n                            <a href={x.jira} style={{backgroundColor: 'black', color: 'orange'}}>Jira</a>\r\n                        </h5>\r\n                    }\r\n                    {x.testingzip != null &&\r\n                        <h5>\r\n                            <a href={`${apiUrl}${x.testingzip.url}`} style={{backgroundColor: 'black', color: 'hsl(128, 100%, 50%)'}}>Download Testing Performed</a>\r\n                        </h5>\r\n                    }\r\n                    <Collapsible \r\n                    transitionTime=\"250\"\r\n                    trigger={this.renderDropDown4()}\r\n                    triggerWhenOpen={this.renderHide()}\r\n                    >\r\n                        <Editor \r\n                        editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.moddetails.replace(/'''/g, '\"')).contentBlocks))}\r\n                        readOnly='true'\r\n                        toolbarHidden='true'\r\n                        />\r\n                    </Collapsible>\r\n                    {x.teststeps != null &&\r\n                    <Collapsible \r\n                    transitionTime=\"250\"\r\n                    trigger={this.renderDropDown9()}\r\n                    triggerWhenOpen={this.renderHide()}\r\n                    >\r\n                        <Editor \r\n                        editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.teststeps.replace(/'''/g, '\"')).contentBlocks))}\r\n                        readOnly='true'\r\n                        toolbarHidden='true'\r\n                        />\r\n                    </Collapsible>\r\n                    }\r\n                    {x.sidenotes != null && x.sidenotes != '' &&\r\n                        <p>\r\n                            <strong>Notes: {'\\u00A0'}</strong>\r\n                            <em>{x.sidenotes}</em>\r\n                        </p>\r\n                    }\r\n                </div>\r\n                </Collapsible>\r\n                )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderCompleteMods = () => {\r\n        let { mods } = this.state;\r\n        let completeMods = mods.filter(prop => {\r\n            return prop.status.toLowerCase().includes('complete'.toLowerCase())\r\n        })\r\n        return (\r\n            <div>\r\n                {completeMods.map(x => {\r\n                return (\r\n                    <Collapsible\r\n                    transitionTime='250'\r\n                    trigger={<span className='trigger'>Mod {x.modnumber} | {x.title}</span>}\r\n                    triggerWhenOpen={<span className='trigger'>Mod {x.modnumber}</span>}\r\n                    >\r\n                    <div className=\"card\" key={x._id} style={{marginTop: '10px', backgroundColor: '#eee', display: 'block'}}>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                    <Link to={`/updatemod/${x._id}`}>\r\n                        <FaEdit size={30} style={{marginTop:'5px', marginBottom: '5px'}}/>\r\n                    </Link>\r\n                    </div>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                    <a href={`${apiUrl}/admin/plugins/content-manager/mods/${x._id}?redirectUrl=/plugins/content-manager/mods?_limit=10&_page=1&_sort=_id&_q=abc&source=content-manager`} >\r\n                        <FaFileUpload size={30} style={{marginTop:'5px', marginBottom: '5px'}}/>\r\n                    </a>\r\n                    </div>\r\n                    <div className='iconbutton' style={{marginLeft: '10px', marginRight: '10px'}}>\r\n                        <Link to='#' onClick={this.auditMod.bind(this, x._id, x.isaudit)} style={{backgroundColor: '#333'}}>\r\n                            <FaSearchDollar size={30} style={{color: 'orange', marginTop:'5px', marginBottom: '5px'}}/>\r\n                        </Link>\r\n                    </div>\r\n                    {x.isaudit === true &&\r\n                    <Alert color='danger'>Audited</Alert>\r\n                    }\r\n                    <h5>Mod {x.modnumber}</h5>\r\n                    <h5>{x.trackerid}</h5>                   \r\n                    <h5 style={{color: '#007bff'}}>{x.title}</h5>\r\n                    <h5>Testing Status: {x.status}</h5>\r\n                    {x.jira != null && x.jira !== '' &&\r\n                        <h5>\r\n                            <a href={x.jira} style={{backgroundColor: 'black', color: 'orange'}}>Jira</a>\r\n                        </h5>\r\n                    }\r\n                    {x.testingzip != null &&\r\n                        <h5>\r\n                            <a href={`${apiUrl}${x.testingzip.url}`} style={{backgroundColor: 'black', color: 'hsl(128, 100%, 50%)'}}>Download Testing Performed</a>\r\n                        </h5>\r\n                    }\r\n                    <Collapsible \r\n                    transitionTime=\"250\"\r\n                    trigger={this.renderDropDown4()}\r\n                    triggerWhenOpen={this.renderHide()}\r\n                    >\r\n                        <Editor \r\n                        editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.moddetails.replace(/'''/g, '\"')).contentBlocks))}\r\n                        readOnly='true'\r\n                        toolbarHidden='true'\r\n                        />\r\n                    </Collapsible>\r\n                    {x.teststeps != null &&\r\n                    <Collapsible \r\n                    transitionTime=\"250\"\r\n                    trigger={this.renderDropDown9()}\r\n                    triggerWhenOpen={this.renderHide()}\r\n                    >\r\n                        <Editor \r\n                        editorState={EditorState.createWithContent(ContentState.createFromBlockArray(htmlToDraft(x.teststeps.replace(/'''/g, '\"')).contentBlocks))}\r\n                        readOnly='true'\r\n                        toolbarHidden='true'\r\n                        />\r\n                    </Collapsible>\r\n                    }\r\n                    {x.sidenotes != null && x.sidenotes != '' &&\r\n                        <p>\r\n                            <strong>Notes: {'\\u00A0'}</strong>\r\n                            <em>{x.sidenotes}</em>\r\n                        </p>\r\n                    }\r\n                </div>\r\n                </Collapsible>\r\n                )\r\n                })}\r\n            </div>\r\n        )\r\n    }\r\n\r\n    renderDropDown3() {\r\n        let { modsCount } = this.state;\r\n        return (\r\n            <span className=\"trigger\">\r\n                Mods:  ({modsCount})\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderDropDown4() {\r\n        return (\r\n            <span className=\"trigger\">\r\n                Details:\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderDropDown9() {\r\n        return (\r\n            <span className=\"trigger\">\r\n                Test Steps:\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderDropDown5() {\r\n        let { auditModsCount } = this.state;\r\n        return (\r\n            <span className=\"trigger\">\r\n                Audited Mods: ({auditModsCount})\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderDropDown6() {\r\n        let { testableModsCount } = this.state;\r\n        return (\r\n            <span className=\"trigger\">\r\n                Testable Mods: ({testableModsCount})\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderDropDown7() {\r\n        let { jiraModsCount } = this.state;\r\n        return (\r\n            <span className=\"trigger\">\r\n                Mods in JIRA:  ({jiraModsCount})\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderDropDown8() {\r\n        let { questionableModsCount } = this.state;\r\n        return (\r\n            <span className=\"trigger\">\r\n                Possible Audit:  ({questionableModsCount})\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderDropDown11() {\r\n        let { revokedModsCount } = this.state;\r\n        return (\r\n            <span className=\"trigger\">\r\n                Revoked Mods: ({revokedModsCount})\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderDropDown10() {\r\n        let { completeModsCount } = this.state;\r\n        return (\r\n            <span className=\"trigger\">\r\n                Completed:  ({completeModsCount})\r\n            </span>\r\n        );\r\n    }\r\n\r\n    renderHide() {\r\n        return (\r\n            <span className=\"trigger\">\r\n                Hide\r\n            </span>\r\n        );\r\n    }\r\n\r\n    render() {\r\n        let { loadingItems, revokedModsCount, auditModsCount, completeModsCount, jiraModsCount, questionableModsCount, testableModsCount } = this.state;\r\n        return(\r\n            <div style={{textAlign: 'center'}}>\r\n                <Collapsible \r\n                transitionTime={250}\r\n                trigger={this.renderDropDown3()}\r\n                triggerWhenOpen={this.renderHide()}\r\n                >\r\n                    {this.renderMods()}\r\n                </Collapsible>\r\n                {auditModsCount > 0 &&\r\n                <Collapsible \r\n                transitionTime={250}\r\n                trigger={this.renderDropDown5()}\r\n                triggerWhenOpen={this.renderHide()}\r\n                >\r\n                    {this.renderAuditMods()}\r\n                </Collapsible>}\r\n                {testableModsCount > 0 && \r\n                <Collapsible \r\n                transitionTime={250} \r\n                trigger={this.renderDropDown6()}\r\n                triggerWhenOpen={this.renderHide()}\r\n                >\r\n                    {this.renderTestableMods()}\r\n                </Collapsible>}\r\n                {jiraModsCount > 0 &&\r\n                <Collapsible \r\n                transitionTime={250} \r\n                trigger={this.renderDropDown7()}\r\n                triggerWhenOpen={this.renderHide()}\r\n                >\r\n                    {this.renderJiraMods()}\r\n                </Collapsible>}\r\n                {questionableModsCount > 0 &&\r\n                <Collapsible \r\n                transitionTime={250} \r\n                trigger={this.renderDropDown8()}\r\n                triggerWhenOpen={this.renderHide()}\r\n                >\r\n                    {this.renderQuestionableMods()}\r\n                </Collapsible>}\r\n                {completeModsCount > 0 &&\r\n                <Collapsible \r\n                transitionTime={250} \r\n                trigger={this.renderDropDown10()}\r\n                triggerWhenOpen={this.renderHide()}\r\n                >\r\n                    {this.renderCompleteMods()}\r\n                </Collapsible>}\r\n                {revokedModsCount > 0 && \r\n                <Collapsible \r\n                transitionTime={250} \r\n                trigger={this.renderDropDown11()}\r\n                triggerWhenOpen={this.renderHide()}\r\n                >\r\n                    {this.renderRevokedMods()}\r\n                </Collapsible>}\r\n                <div className=\"fixed-action-btn\">\r\n                    <Link style={{backgroundColor: '#333', marginRight: '20px'}} className=\"btn-floating btn-large right\" to={`/newmod/${this.props.submissionId}`}>\r\n                        <i className=\"material-icons\" style={{color: 'hsl(128, 100%, 50%)'}}>add</i>\r\n                    </Link>\r\n                </div>\r\n                {loadingItems && <Loader />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ModList;"]},"metadata":{},"sourceType":"module"}