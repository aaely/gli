{"version":3,"sources":["Components/Loader.js","Components/Jurisdictions.js","Components/Submissions.js","Components/Manufacturers.js","Components/Dashboard.js","Components/Submission.js","Components/Navbar.js","Components/Apps.js","Components/Jurisdiction.js","Components/Application.js","Components/Vendors.js","Components/Appwiki.js","Components/test.js","Components/App.js","serviceWorker.js","index.js","../node_modules/.registry.npmjs.org/pdfjs-dist/2.1.266/node_modules/pdfjs-dist/build sync"],"names":["Loader","react_default","a","createElement","gestalt_es","position","dangerouslySetInlineStyle","__style","botom","left","transform","react_spinners","color","size","margin","apiUrl","process","API_URL","strapi","Strapi","Jurisdictions","state","loadingItems","jurisdictions","request","data","query","response","this","setState","console","log","_context","t0","_this$state","style","textAlign","map","jurisdiction","number","submissions","b","file","application","name","versions","c","version","Components_Loader","Component","Submissions","searchTerm","handleChange","_ref","value","_this","filteredItems","_ref2","filter","prop","toLowerCase","includes","error","display","justifyContent","marginTop","marginBottom","id","accessibilityLabel","onChange","placeholder","icon","wrap","backgroundColor","shape","sub","className","key","_id","width","marginRight","marginLeft","src","concat","vendor","logo","url","alt","height","Link","to","Manufacturers","Dashboard","props","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","activeTab","tab","_this2","Nav","tabs","NavItem","NavLink","classnames","active","onClick","TabContent","TabPane","tabId","Components_Manufacturers","Components_Submissions","Components_Jurisdictions","pdfjs","GlobalWorkerOptions","workerSrc","Submission","submission","vendorId","numPages","pageNumber","urns","onDocumentLoadSuccess","changePage","offset","prevState","previousPage","nextPage","onItemClick","match","params","submissionId","jurs","entry","onLoadSuccess","type","disabled","Navbar","alignItems","padding","es_NavLink","activeClassName","exact","naturalHeight","naturalWidth","Apps","applications","app","vendors","marginBotom","properties","Jurisdiction","jurisdictionId","Vendors","onEditorStateChange","editorState","contentBlock","htmlToDraft","contentState","ContentState","createFromBlockArray","contentBlocks","EditorState","createWithContent","uploadData","applicationId","howto","mutation","_context2","flexWrap","direction","react_draft_wysiwyg","enabled","draftToHtml","convertToRaw","getCurrentContent","saveChanges","approvalstatuses","d","status","Appwiki","EditorConvertToHTML","wrapperClassName","editorClassName","App","BrowserRouter","Fragment","Components_Navbar","Switch","Route","component","path","Applications","Application","test","Boolean","window","location","hostname","navigator","serviceWorker","ready","then","registration","unregister","ReactDOM","render","src_Components_App","document","getElementById","webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports"],"mappings":"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","file":"static/js/main.d4de5bee.chunk.js","sourcesContent":["import React from 'react';\r\nimport { RingLoader } from 'react-spinners';\r\nimport { Box } from 'gestalt';\r\n\r\nconst Loader = () => {\r\n    return (\r\n    <Box\r\n    position=\"fixed\"\r\n    dangerouslySetInlineStyle={{\r\n        __style: {\r\n            botom: 300,\r\n            left: '50%',\r\n            transform: \"translateX(-50%)\"\r\n        }\r\n    }}\r\n    >\r\n    <RingLoader \r\n    color=\"green\"\r\n    size = {200}\r\n    margin = \"3px\"\r\n    />\r\n    </Box>\r\n    );\r\n}\r\n\r\nexport default Loader;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nimport Loader from './Loader';\r\nconst apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass Jurisdictions extends Component {\r\n    state = {\r\n        loadingItems: true,\r\n        jurisdictions: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            //console.log(this.props.match.params.itemId);\r\n            const response = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    jurisdictions {\r\n                        _id\r\n                        jurisdiction\r\n                        submissions {\r\n                          _id\r\n                          file\r\n                          application {\r\n                              _id\r\n                              name\r\n                          }\r\n                          versions {\r\n                              _id\r\n                              version\r\n                          }\r\n                        }\r\n                        number\r\n                  }\r\n                }`\r\n            }\r\n        }\r\n        );\r\n        this.setState({\r\n            jurisdictions: response.data.jurisdictions,\r\n            loadingItems: false\r\n        });\r\n        console.log(this.state);\r\n        }catch (err) {\r\n            console.log(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n\r\n    /*renderSubmissions() {\r\n        let { jurisdictions } = this.state;\r\n        return (\r\n            <div>\r\n                {jurisdictions.submissions.map(a => {\r\n                   return ( <p>{a.file}</p>)\r\n                })}\r\n            </div>\r\n        )\r\n    }*/\r\n\r\n    render() {\r\n        let { jurisdictions, loadingItems } = this.state;\r\n        return(\r\n            <div style={{textAlign: 'center'}}>\r\n                {jurisdictions.map(a => {\r\n                return (<p>\r\n                <h1>{a.jurisdiction} ({a.number})</h1> <br />\r\n                <h3>Submissions for {a.jurisdiction}</h3>\r\n                {a.submissions.map(b => {\r\n                    return (\r\n                        <p>{b.file} <br />\r\n                        {b.application.name} {b.versions.map(c => {\r\n                            return (\r\n                                <span>{c.version}</span>\r\n                            )\r\n                        })}</p>\r\n                    )\r\n                })}\r\n                </p>)\r\n                })}\r\n                {loadingItems && <Loader />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Jurisdictions;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Strapi from \"strapi-sdk-javascript/build/main\";\r\nimport {Box, \r\n        SearchField, \r\n        Icon,\r\n        Image,\r\n        Text,\r\n        Card,\r\n        Button,\r\n        Container } from 'gestalt';\r\nimport Loader from './Loader';\r\nconst apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass Submissions extends Component {\r\n    state = {\r\n        submissions: [],\r\n        searchTerm: '',\r\n        loadingItems: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await strapi.request('POST', '/graphql', {\r\n                data: {\r\n                    query: `query {\r\n                        submissions{\r\n                            _id\r\n                            file\r\n                            received\r\n                            processed\r\n                            begin\r\n                            vendor {\r\n                                _id\r\n                                name\r\n                                logo {\r\n                                  _id\r\n                                  url\r\n                                }\r\n                              }                              \r\n                            jurisdictions {\r\n                              _id\r\n                              jurisdiction\r\n                              number\r\n                            }\r\n                          application {\r\n                            _id\r\n                            name\r\n                          }\r\n                          versions {\r\n                            _id\r\n                            version\r\n                          }\r\n                        }\r\n                    }`\r\n                }\r\n            });\r\n            console.log(response);\r\n            this.setState({ \r\n                submissions: response.data.submissions,\r\n\r\n                loadingItems: false\r\n            });\r\n            console.log(this.state.submissions);\r\n        } catch(err) {\r\n            console.error(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n\r\n    handleChange = ({ value }) => {\r\n        this.setState({ searchTerm: value});\r\n    };\r\n\r\n    filteredItems = ({ searchTerm, submissions }) => {\r\n        return submissions.filter(prop => {\r\n            return prop.file.toLowerCase().includes(searchTerm.toLowerCase()) || prop.application.name.toLowerCase().includes(searchTerm.toLowerCase())\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { loadingItems, searchTerm } = this.state;\r\n        return(\r\n        <Container>\r\n                <Box display=\"flex\" justifyContent=\"center\" marginTop={4} marginBottom={4}>\r\n                <SearchField \r\n                id=\"searchField\" \r\n                accessibilityLabel=\"Items search field\" \r\n                onChange={this.handleChange} \r\n                placeholder=\"Search Subissions\" \r\n                value={searchTerm}\r\n                />\r\n                <Box\r\n                margin={2}\r\n                >\r\n                    <Icon \r\n                    icon=\"filter\"\r\n                    color={searchTerm ? 'orange' : 'gray'}\r\n                    size={20}\r\n                    accessibilityLabel=\"Filter\"\r\n                    />\r\n                </Box>\r\n                </Box>\r\n                <Box wrap display =\"flex\" \r\n                justifyContent=\"around\"\r\n                dangerouslySetInlineStyle={{\r\n                    __style: {\r\n                        backgroundColor: '#d6e5ff'\r\n                    }\r\n                }}\r\n                shape= \"rounded\"\r\n                >\r\n            {this.filteredItems(this.state).map(sub => {\r\n                console.log(sub);\r\n                return(\r\n                    <div className=\"card\" key={sub._id} style={{marginTop: '30px', width: '100%', display: 'inline-block', marginRight: '3px', marginLeft: '3px'}}>\r\n                    <div className=\"card-title\" style={{textAlign: 'center'}}>{sub.file}</div>\r\n                    <div className=\"card-image\">\r\n                        <Image src={`${apiUrl}${sub.vendor.logo.url}`} alt={`${sub.vendor.logo._id}`} className='coffeeimage' style={{width: '10%', height: '10%'}}/>\r\n                    </div>\r\n                    <div className=\"card-content\" style={{backgroundColor:'#686c72'}}>    \r\n                        <p></p>\r\n                        <p>Manufacturer : <span className=\"right\">{sub.vendor.name}</span></p>\r\n                        <p>Jurisdictions: {sub.jurisdictions.map(a => {\r\n                            return (\r\n                                <p>\r\n                                <Link style={{color: 'orange'}}to={`/jurisdiction/${a._id}`}>{a.jurisdiction}</Link>\r\n                                </p>\r\n                            )\r\n                        })} </p> \r\n                        <p>Application: <Link to={`/application/${sub.application._id}`}>{sub.application.name}</Link></p>\r\n                        <p>Version: {sub.versions.map(a => {\r\n                            return (\r\n                                <span>{a.version}</span>\r\n                            )\r\n                        })}</p>\r\n                    </div>\r\n                    <div className=\"card-action\" style={{textAlign: 'center', backgroundColor:'#686c72'}}>\r\n                        <Link to={`/submission/${sub._id}`}>{sub.file}</Link>\r\n                    </div>\r\n                    </div>\r\n            )})}\r\n            {loadingItems && <Loader />}\r\n            </Box>\r\n        </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Submissions;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Strapi from \"strapi-sdk-javascript/build/main\";\r\nimport {Box, \r\n        SearchField, \r\n        Icon,\r\n        Image,\r\n        Text,\r\n        Card,\r\n        Button,\r\n        Container } from 'gestalt';\r\nimport Loader from './Loader';\r\nconst apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass Manufacturers extends Component {\r\n    state = {\r\n        submissions: [],\r\n        searchTerm: '',\r\n        loadingItems: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await strapi.request('POST', '/graphql', {\r\n                data: {\r\n                    query: `query {\r\n                        submissions{\r\n                            _id\r\n                            file\r\n                            received\r\n                            processed\r\n                            begin\r\n                            vendor {\r\n                                _id\r\n                                name\r\n                                logo {\r\n                                  _id\r\n                                  url\r\n                                }\r\n                              }                              \r\n                            jurisdictions {\r\n                              _id\r\n                              jurisdiction\r\n                              number\r\n                            }\r\n                          application {\r\n                            _id\r\n                            name\r\n                          }\r\n                          versions {\r\n                            _id\r\n                            version\r\n                          }\r\n                        }\r\n                    }`\r\n                }\r\n            });\r\n            console.log(response);\r\n            this.setState({ \r\n                submissions: response.data.submissions,\r\n\r\n                loadingItems: false\r\n            });\r\n            console.log(this.state.submissions);\r\n        } catch(err) {\r\n            console.error(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n\r\n    handleChange = ({ value }) => {\r\n        this.setState({ searchTerm: value});\r\n    };\r\n\r\n    filteredItems = ({ searchTerm, submissions }) => {\r\n        return submissions.filter(prop => {\r\n            return prop.vendor.name.toLowerCase().includes(searchTerm.toLowerCase());\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { loadingItems, searchTerm } = this.state;\r\n        return(\r\n        <Container>\r\n                <Box display=\"flex\" justifyContent=\"center\" marginTop={4} marginBottom={4}>\r\n                <SearchField \r\n                id=\"searchField\" \r\n                accessibilityLabel=\"Items search field\" \r\n                onChange={this.handleChange} \r\n                placeholder=\"Search Subissions\" \r\n                value={searchTerm}\r\n                />\r\n                <Box\r\n                margin={2}\r\n                >\r\n                    <Icon \r\n                    icon=\"filter\"\r\n                    color={searchTerm ? 'orange' : 'gray'}\r\n                    size={20}\r\n                    accessibilityLabel=\"Filter\"\r\n                    />\r\n                </Box>\r\n                </Box>\r\n                <Box wrap display =\"flex\" \r\n                justifyContent=\"around\"\r\n                dangerouslySetInlineStyle={{\r\n                    __style: {\r\n                        backgroundColor: '#d6e5ff'\r\n                    }\r\n                }}\r\n                shape= \"rounded\"\r\n                >\r\n            {this.filteredItems(this.state).map(sub => {\r\n                console.log(sub);\r\n                return(\r\n                    <div className=\"card\" key={sub._id} style={{marginTop: '30px', width: '100%', display: 'inline-block', marginRight: '3px', marginLeft: '3px'}}>\r\n                    <div className=\"card-title\" style={{textAlign: 'center'}}>{sub.file}</div>\r\n                    <div className=\"card-image\">\r\n                        <Image src={`${apiUrl}${sub.vendor.logo.url}`} alt={`${sub.vendor.logo._id}`} className='coffeeimage' style={{width: '10%', height: '10%'}}/>\r\n                    </div>\r\n                    <div className=\"card-content\" style={{backgroundColor:'#686c72'}}>    \r\n                        <p></p>\r\n                        <p>Manufacturer : <span className=\"right\">{sub.vendor.name}</span></p>\r\n                        <p>Jurisdictions: {sub.jurisdictions.map(a => {\r\n                            return (\r\n                                <p>\r\n                                <Link style={{color: 'orange'}}to={`/jurisdiction/${a._id}`}>{a.jurisdiction}</Link>\r\n                                </p>\r\n                            )\r\n                        })} </p> \r\n                        <p>Application: {sub.application.name}</p>\r\n                        <p>Version: {sub.versions.map(a => {\r\n                            return (\r\n                                <span>{a.version}</span>\r\n                            )\r\n                        })}</p>\r\n                    </div>\r\n                    <div className=\"card-action\" style={{textAlign: 'center', backgroundColor:'#686c72'}}>\r\n                        <Link to={`/submission/${sub._id}`}>{sub.file}</Link>\r\n                    </div>\r\n                    </div>\r\n            )})}\r\n            {loadingItems && <Loader />}\r\n            </Box>\r\n        </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Manufacturers;","import React, { Component } from 'react';\r\nimport { TabContent, TabPane, Nav, NavItem, NavLink, Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\r\nimport classnames from 'classnames';\r\nimport Jurisdictions from './Jurisdictions';\r\nimport Submissions from './Submissions';\r\nimport Manufacturers from './Manufacturers';\r\n\r\nclass Dashboard extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      activeTab: '2'\r\n    };\r\n  }\r\n\r\n  toggle(tab) {\r\n    if (this.state.activeTab !== tab) {\r\n      this.setState({\r\n        activeTab: tab\r\n      });\r\n    }\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <p style={{ backgroundColor: 'black', color: 'green', textAlign: 'center'}}><h1>Search By</h1></p>\r\n        <Nav tabs style={{backgroundColor: 'black', color: 'green', marginTop: '5px', marginBottom: '5px'}}>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: this.state.activeTab === '1' })}\r\n              onClick={() => { this.toggle('1'); }}\r\n            >\r\n              Manufacturer\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n              className={classnames({ active: this.state.activeTab === '2' })}\r\n              onClick={() => { this.toggle('2'); }}\r\n            >\r\n              Submission File Number\r\n            </NavLink>\r\n          </NavItem>\r\n          <NavItem>\r\n            <NavLink\r\n            className={classnames({ active: this.state.activeTab === '3' })}\r\n            onClick={() => { this.toggle('3'); }}\r\n            >\r\n            Jurisdictions\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent activeTab={this.state.activeTab}>\r\n          <TabPane tabId=\"1\">\r\n            <Manufacturers />\r\n          </TabPane>\r\n          <TabPane tabId=\"2\">\r\n            <Submissions />\r\n          </TabPane>\r\n          <TabPane tabId=\"3\">\r\n            <Jurisdictions />\r\n          </TabPane>\r\n        </TabContent>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Dashboard;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nimport Loader from './Loader';\r\nimport { pdfjs, Document, Page } from 'react-pdf';\r\npdfjs.GlobalWorkerOptions.workerSrc = `//cdnjs.cloudflare.com/ajax/libs/pdf.js/${pdfjs.version}/pdf.worker.js`;\r\nconst apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass Submission extends Component {\r\n    state = {\r\n        loadingItems: true,\r\n        submission: '',\r\n        jurisdictions: [],\r\n        vendor: '',\r\n        vendorId: '',\r\n        numPages: null,\r\n        pageNumber: 1,\r\n        urns: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            console.log(this.props.match.params.submissionId);\r\n            const response = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    submission (id : \"${this.props.match.params.submissionId}\") {\r\n                        file\r\n                        received\r\n                        processed\r\n                        begin\r\n                        vendor {\r\n                        _id\r\n                        name\r\n                        logo {\r\n                          _id\r\n                          url\r\n                        }\r\n                      }\r\n                        jurisdictions {\r\n                        _id\r\n                        jurisdiction\r\n                      }\r\n                      urns {\r\n                          _id\r\n                          url\r\n                      }\r\n                  }\r\n                }`\r\n            }\r\n        }\r\n        );\r\n        this.setState({\r\n            submission: response.data.submission.file,\r\n            vendor: response.data.submission.vendor.name,\r\n            jurisdictions: response.data.submission.jurisdictions,\r\n            loadingItems: false,\r\n            vendorId: response.data.submission.vendor._id,\r\n            urns: response.data.submission.urns\r\n        });\r\n        }catch (err) {\r\n            console.log(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n\r\n    onDocumentLoadSuccess = ({ numPages }) => {\r\n        this.setState({ numPages });\r\n      }\r\n\r\n      changePage = offset => this.setState(prevState => ({\r\n        pageNumber: prevState.pageNumber + offset,\r\n      }));\r\n    \r\n      previousPage = () => this.changePage(-1);\r\n    \r\n      nextPage = () => this.changePage(1);\r\n\r\n      onItemClick = ({ pageNumber }) => this.setState({ pageNumber });\r\n    \r\n    render() {\r\n        let { submission, vendor, jurisdictions, loadingItems, vendorId, numPages, pageNumber, urns } = this.state;\r\n        return(\r\n            <div>\r\n                <h1 style={{textAlign: 'center'}}>{submission}</h1>\r\n                <Link to={`/manufacturer/${vendorId}`}><h3 style={{textAlign: 'center'}}>{vendor}</h3></Link>\r\n                <h3>\r\n                    Jurisdictions this file is submitted for:\r\n                </h3>\r\n                {jurisdictions.map(jurs => {\r\n                    return(\r\n                        <div>\r\n                           <Link to={`/jurisdiction/${jurs._id}`}>{jurs.jurisdiction}</Link>\r\n                        </div>\r\n                    );\r\n                })}\r\n                {urns.map(a => {\r\n                    return (\r\n                        <div>\r\n                            <Document\r\n                            file={a.url}\r\n                            onLoadSuccess={this.onDocumentLoadSuccess}\r\n                            onItemClick={this.onItemClick}\r\n                            >\r\n                                <Page pageNumber={pageNumber} />\r\n                            </Document>\r\n                            <p>Page {pageNumber || (numPages ? 1 : '--')} of {numPages || '--'} of {numPages}</p>\r\n                            <button\r\n                            type=\"button\"\r\n                            disabled={pageNumber <= 1}\r\n                            onClick={this.previousPage}\r\n                            >\r\n                                Back\r\n                            </button>\r\n                            <button\r\n                            type=\"button\"\r\n                            disabled={pageNumber >= numPages}\r\n                            onClick={this.nextPage}\r\n                            >\r\n                                Next\r\n                            </button>\r\n                        </div>\r\n                    )\r\n                })}\r\n                {loadingItems && <Loader />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Submission;","import React, { Component } from 'react';\r\nimport { Box, Text, Heading, Image, Avatar } from 'gestalt';\r\nimport { NavLink } from 'react-router-dom';\r\n\r\nclass Navbar extends Component {\r\n    render() {\r\n        return (\r\n            <Box\r\n            display=\"flex\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"around\"\r\n            height={70}\r\n            color=\"midnight\"\r\n            padding={1}\r\n            shape=\"roundedBottom\"\r\n        >       \r\n                \r\n                <NavLink to=\"/\" activeClassName=\"active\">\r\n                    <Text size=\"xl\" color=\"white\">Submissions</Text>\r\n                </NavLink>\r\n\r\n                <NavLink exact to=\"/\" activeClassName=\"active\">\r\n                <Box display=\"flex\" alignItems=\"center\">\r\n                    <Box margin={2} height={50} width={50} shape=\"roundedBottom\">\r\n                    <Avatar\r\n                     alt=\"PeptideLogo\"\r\n                     naturalHeight={1}\r\n                     naturalWidth={1}\r\n                     src=\"../../icons/glilogo.png\"\r\n                    />\r\n                    </Box>\r\n                    <Heading size=\"xs\" color=\"orange\">\r\n                        GLI Internal Wiki\r\n                    </Heading>\r\n                </Box>                    \r\n                </NavLink>\r\n\r\n                <NavLink to=\"/Dashboard\" activeClassName=\"active\">\r\n                <Text size=\"xl\" color=\"white\">More Content</Text>\r\n                </NavLink>\r\n\r\n            </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Navbar;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Strapi from \"strapi-sdk-javascript/build/main\";\r\nimport {Box, SearchField, Icon} from 'gestalt';\r\nimport Loader from './Loader';\r\nconst apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass Apps extends Component {\r\n    state = {\r\n        applications: [],\r\n        searchTerm: '',\r\n        loadingItems: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            const response = await strapi.request('POST', '/graphql', {\r\n                data: {\r\n                    query: `query {\r\n                        applications {\r\n                          _id\r\n                          name\r\n                          vendors {\r\n                            _id\r\n                            name\r\n                          }\r\n                          properties {\r\n                              _id\r\n                              name\r\n                          }\r\n                        }\r\n                      }`\r\n                }\r\n            });\r\n            console.log(response);\r\n            this.setState({ \r\n                applications: response.data.applications,\r\n                loadingItems: false\r\n            });\r\n        } catch(err) {\r\n            console.error(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n\r\n    handleChange = ({ value }) => {\r\n        this.setState({ searchTerm: value});\r\n    };\r\n\r\n    filteredItems = ({ searchTerm, applications }) => {\r\n        return applications.filter(app => {\r\n            return app.name.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n            app.vendors.name.toLowerCase().includes(searchTerm.toLowerCase()); /*||\r\n            app.properties.name.toLowerCase().includes(searchTerm.toLowerCase());*/\r\n        });\r\n    };\r\n\r\n    render() {\r\n        let { loadingItems, searchTerm } = this.state;\r\n        return(\r\n        <Box>\r\n                <Box display=\"flex\" justifyContent=\"center\" marginTop={4}>\r\n                <SearchField \r\n                id=\"searchField\" \r\n                accessibilityLabel=\"Items search field\" \r\n                onChange={this.handleChange} \r\n                placeholder=\"Search Application Name\" \r\n                value={searchTerm}\r\n                />\r\n                <Box\r\n                margin={2}\r\n                >\r\n                    <Icon \r\n                    icon=\"filter\"\r\n                    color={searchTerm ? 'orange' : 'gray'}\r\n                    size={20}\r\n                    accessibilityLabel=\"Filter\"\r\n                    />\r\n                </Box>\r\n                </Box>\r\n            {this.filteredItems(this.state).map(app => {\r\n                return(\r\n                    <Box marginTop={5} marginBotom={5}>\r\n                        <Link to={`/apps/${app._id}`}>{app.name}</Link> <br />\r\n                        <Link to={`/vendors/${app.vendors._id}`}>{app.vendors.name}</Link> <br />\r\n                        {app.properties.map(prop => {\r\n                            return(\r\n                                <div>\r\n                                    <Link to={`/apps/${prop._id}`}>{prop.name}</Link>\r\n                                </div>\r\n                            );\r\n                        })}\r\n                    </Box>\r\n                )\r\n            })}\r\n            {loadingItems && <Loader />}\r\n        </Box>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Apps;","import React, { Component } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nimport Loader from './Loader';\r\nconst apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass Jurisdiction extends Component {\r\n    state = {\r\n        loadingItems: true,\r\n        jurisdiction: [],\r\n        submissions: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            //console.log(this.props.match.params.itemId);\r\n            const response = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    jurisdiction (id : \"${this.props.match.params.jurisdictionId}\") {\r\n                        jurisdiction\r\n                        submissions {\r\n                          _id\r\n                          file\r\n                          application {\r\n                              _id\r\n                              name\r\n                          }\r\n                          versions {\r\n                              _id\r\n                              version\r\n                          }\r\n                        }\r\n                  }\r\n                }`\r\n            }\r\n        }\r\n        );\r\n        this.setState({\r\n            jurisdiction: response.data.jurisdiction.jurisdiction,\r\n            submissions: response.data.jurisdiction.submissions,\r\n            loadingItems: false\r\n        });\r\n        }catch (err) {\r\n            console.log(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { jurisdiction, submissions, loadingItems } = this.state;\r\n        console.log (submissions);\r\n        return(\r\n            <div style={{textAlign: 'center'}}>\r\n                <h1>Jurisdiction</h1> <br />\r\n                <h4>{jurisdiction}</h4> <br />\r\n                <h3>Submissions for {jurisdiction}</h3>\r\n                {submissions.map(sub => {\r\n                    return(\r\n                        <div>\r\n                            <Link to={`/submission/${sub._id}`}>{sub.file}</Link>\r\n                            <p>\r\n                            {sub.application.name} {sub.versions.map(a => {\r\n                                return (\r\n                                    <span>{a.version}</span>\r\n                                )\r\n                            })}\r\n                            </p>\r\n                        </div>\r\n                    );\r\n                })}\r\n                {loadingItems && <Loader />}\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Jurisdiction;","import React, { Component } from 'react';\r\nimport { Box,\r\n    Heading,\r\n    Text,\r\n    Image,\r\n    Mask,\r\n    Card,\r\n    Button,\r\n    Container, \r\n    IconButton} from 'gestalt';\r\nimport { Link } from 'react-router-dom';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nimport Loader from './Loader';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport htmlToDraft from 'html-to-draftjs';\r\nimport draftToHtml from 'draftjs-to-html';\r\nconst apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass Vendors extends Component {\r\n    /*state = {\r\n        application: [],\r\n        submissions: [],\r\n        loadingItems: true,\r\n        EditorState,\r\n        ContentState\r\n    }*/\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        let html = '<p>Testing 1234 😀</p>';\r\n        let contentBlock = htmlToDraft(html);\r\n        if (contentBlock) {\r\n            let contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n            let editorState = EditorState.createWithContent(contentState);\r\n            this.state = {\r\n                application: [],\r\n                submissions: [],\r\n                loadingItems: true,\r\n                editorState,\r\n                uploadData: ''\r\n            }\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            //console.log(this.props.match.params.itemId);\r\n            let response = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    application (id: \"${this.props.match.params.applicationId}\") {\r\n                    _id\r\n                    name\r\n                    howto\r\n                    submissions {\r\n                        _id\r\n                        file\r\n                        versions {\r\n                            _id\r\n                            version\r\n                        }\r\n                        jurisdictions {\r\n                            _id\r\n                            jurisdiction\r\n                            approvalstatuses {\r\n                                _id\r\n                                status\r\n                            }\r\n                        }\r\n                    }\r\n                  }\r\n                }`\r\n            }\r\n        }\r\n        );\r\n        this.setState({\r\n            application: response.data.application,\r\n            submissions: response.data.application.submissions,\r\n            loadingItems: false\r\n        });\r\n        let contentBlock = htmlToDraft(this.state.application.howto);\r\n        if (contentBlock) {\r\n            let contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n            let editorState = EditorState.createWithContent(contentState);\r\n            this.setState({\r\n                editorState\r\n            });\r\n        }\r\n        }catch (err) {\r\n            console.log(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n\r\n    async saveChanges() {\r\n        try {\r\n            await strapi.request('PUT', 'graphql', {\r\n                data: {\r\n                    mutation: `mutation {\r\n                        updateApplication(input: {\r\n                          where: {\r\n                            id: \"5bc18fb154e4a664b438c9b4\"\r\n                          },\r\n                          data: {\r\n                            howto: \"testing 123\"\r\n                        }) {\r\n                          application {\r\n                            howto\r\n                          }\r\n                        }\r\n                      }`\r\n                }\r\n            });\r\n            }catch (err) {\r\n                console.log(err);\r\n            }\r\n        }\r\n\r\n    onEditorStateChange = (editorState) => {\r\n        this.setState({\r\n            editorState\r\n        });\r\n    }\r\n\r\n    render() {\r\n        let { loadingItems, application, submissions, editorState } = this.state;\r\n        console.log(this.state);\r\n        return(\r\n            <Container>\r\n            <Box\r\n            marginTop={5}\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"start\"\r\n            dangerouslySetInlineStyle={{\r\n                __style: {\r\n                    flexWrap: \"wrap-reverse\"\r\n                }\r\n            }}\r\n            >\r\n            <Box display=\"flex\" direction=\"column\" alignItems=\"center\">\r\n                <Box marginBottom={5}>\r\n                    <Heading color=\"blue\">{application.name}</Heading>\r\n                    <Editor \r\n                    editorState={editorState}\r\n                    onEditorStateChange={this.onEditorStateChange}\r\n                    />\r\n                    <textarea\r\n                        enabled\r\n                        value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n                    />\r\n                    <button style={{color: 'black'}} onClick={this.saveChanges}>Save</button>\r\n                    <Link to={`/application/${this.props.match.params.applicationId}/howto`}>Test</Link>\r\n                {submissions.map(a => {\r\n                    return (\r\n                        <p>\r\n                            {a.file} <br />\r\n                            {a.versions.map(b => {\r\n                                return (\r\n                                    <span>{b.version}</span>\r\n                                )\r\n                            })}<br />\r\n                            {a.jurisdictions.map(c => {\r\n                                return (\r\n                                    <p>{c.jurisdiction} -- Status: {c.approvalstatuses.map(d => {\r\n                                        return (\r\n                                            <span>{d.status}</span>\r\n                                        )\r\n                                    })}   </p>\r\n                                )\r\n                            })}\r\n                        </p>\r\n                    )\r\n                })}\r\n\r\n                </Box>\r\n            </Box>\r\n            </Box>\r\n            {loadingItems && <Loader />}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Vendors;","import React, { Component } from 'react';\r\nimport { Box,\r\n    Heading,\r\n    Text,\r\n    Image,\r\n    Mask,\r\n    Card,\r\n    Button,\r\n    Container, \r\n    IconButton} from 'gestalt';\r\nimport { Link } from 'react-router-dom';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nimport Loader from './Loader';\r\nconst apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass Vendors extends Component {\r\n    state = {\r\n        applications: [],\r\n        vendor: '',\r\n        loadingItems: true,\r\n        searchTerm: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            //console.log(this.props.match.params.itemId);\r\n            const response = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    vendor (id: \"${this.props.match.params.vendorId}\") {\r\n                    _id\r\n                    name\r\n                    applications {\r\n                        _id\r\n                        name\r\n                    }\r\n                  }\r\n                }`\r\n            }\r\n        }\r\n        );\r\n        this.setState({\r\n            applications: response.data.vendor.applications,\r\n            vendor: response.data.vendor.name,\r\n            loadingItems: false\r\n        });\r\n        }catch (err) {\r\n            console.log(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n    render() {\r\n        let { vendor, applications } = this.state;\r\n        return(\r\n            <Container>\r\n            <Box\r\n            marginTop={5}\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"start\"\r\n            dangerouslySetInlineStyle={{\r\n                __style: {\r\n                    flexWrap: \"wrap-reverse\"\r\n                }\r\n            }}\r\n            >\r\n            <Box display=\"flex\" direction=\"column\" alignItems=\"center\">\r\n                <Box marginBottom={5}>\r\n                    <Heading color=\"blue\">{vendor}</Heading>\r\n                <Text>\r\n                    {applications.map(app => {\r\n                        return(\r\n                            <Box>\r\n                                <Link to={`/application/${app._id}`}>{app.name}</Link>\r\n                            </Box>\r\n                        );\r\n                    })}\r\n                </Text>\r\n                </Box>\r\n            </Box>\r\n            </Box>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Vendors;","import React, { Component } from 'react';\r\nimport { Box,\r\n    Heading,\r\n    Text,\r\n    Image,\r\n    Mask,\r\n    Card,\r\n    Button,\r\n    Container, \r\n    IconButton} from 'gestalt';\r\nimport { Link } from 'react-router-dom';\r\nimport Strapi from 'strapi-sdk-javascript/build/main';\r\nimport Loader from './Loader';\r\nconst apiUrl = process.env.API_URL || 'http://nv-dt-534:1337';\r\nconst strapi = new Strapi(apiUrl);\r\n\r\nclass Appwiki extends Component {\r\n    state = {\r\n        application: [],\r\n        submissions: [],\r\n        loadingItems: true\r\n    }\r\n\r\n    async componentDidMount() {\r\n        try {\r\n            //console.log(this.props.match.params.itemId);\r\n            const response = await strapi.request('POST', '/graphql', {\r\n            data: {\r\n                query: `query {\r\n                    application (id: \"${this.props.match.params.applicationId}\") {\r\n                    _id\r\n                    name\r\n                    submissions {\r\n                        _id\r\n                        file\r\n                        versions {\r\n                            _id\r\n                            version\r\n                        }\r\n                        jurisdictions {\r\n                            _id\r\n                            jurisdiction\r\n                            approvalstatuses {\r\n                                _id\r\n                                status\r\n                            }\r\n                        }\r\n                    }\r\n                  }\r\n                }`\r\n            }\r\n        }\r\n        );\r\n        this.setState({\r\n            application: response.data.application,\r\n            submissions: response.data.application.submissions,\r\n            loadingItems: false\r\n        });\r\n        }catch (err) {\r\n            console.log(err);\r\n            this.setState({ loadingItems: false });\r\n        }\r\n    }\r\n\r\n    render() {\r\n        let { loadingItems, application, submissions } = this.state;\r\n        console.log(this.state);\r\n        return(\r\n            <Container>\r\n            <Box\r\n            marginTop={5}\r\n            display=\"flex\"\r\n            justifyContent=\"center\"\r\n            alignItems=\"start\"\r\n            dangerouslySetInlineStyle={{\r\n                __style: {\r\n                    flexWrap: \"wrap-reverse\"\r\n                }\r\n            }}\r\n            >\r\n            <Box display=\"flex\" direction=\"column\" alignItems=\"center\">\r\n                <Box marginBottom={5}>\r\n                    <Heading color=\"blue\">{application.name}</Heading>\r\n                    <p>this is working</p>\r\n                {submissions.map(a => {\r\n                    return (\r\n                        <p>\r\n                            {a.file} <br />\r\n                            {a.versions.map(b => {\r\n                                return (\r\n                                    <span>{b.version}</span>\r\n                                )\r\n                            })}<br />\r\n                            {a.jurisdictions.map(c => {\r\n                                return (\r\n                                    <p>{c.jurisdiction} -- Status: {c.approvalstatuses.map(d => {\r\n                                        return (\r\n                                            <span>{d.status}</span>\r\n                                        )\r\n                                    })}   </p>\r\n                                )\r\n                            })}\r\n                        </p>\r\n                    )\r\n                })}\r\n                <p><h1>This is working</h1></p>\r\n                </Box>\r\n            </Box>\r\n            </Box>\r\n            {loadingItems && <Loader />}\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Appwiki;","import React, { Component } from 'react';\r\nimport { EditorState, convertToRaw, ContentState } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\nimport htmlToDraft from 'html-to-draftjs';\r\n\r\n\r\nclass EditorConvertToHTML extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    const html = '<p>Hey this <strong>editor</strong> rocks 😀</p>';\r\n    const contentBlock = htmlToDraft(html);\r\n    if (contentBlock) {\r\n      const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n      const editorState = EditorState.createWithContent(contentState);\r\n      this.state = {\r\n        editorState,\r\n      };\r\n    }\r\n  }\r\n\r\n  onEditorStateChange = (editorState) => {\r\n    this.setState({\r\n      editorState,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { editorState } = this.state;\r\n    return (\r\n      <div>\r\n        <Editor\r\n          editorState={editorState}\r\n          wrapperClassName=\"demo-wrapper\"\r\n          editorClassName=\"demo-editor\"\r\n          onEditorStateChange={this.onEditorStateChange}\r\n        />\r\n        <textarea\r\n          enabled\r\n          value={draftToHtml(convertToRaw(editorState.getCurrentContent()))}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditorConvertToHTML;","import React, { Component } from 'react';\r\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\r\nimport './App.css';\r\n\r\nimport Dashboard from './Dashboard';\r\nimport Submission from './Submission';\r\nimport Applications from './Submission';\r\nimport Navbar from './Navbar';\r\nimport Apps from './Apps';\r\nimport Jurisdiction from './Jurisdiction';\r\nimport Jurisdictions from './Jurisdictions';\r\nimport Application from './Application';\r\nimport Vendors from './Vendors';\r\nimport Appwiki from './Appwiki';\r\nimport test from './test';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <Router>\r\n        <React.Fragment>\r\n        <Navbar />\r\n        <Switch>\r\n          <Route component={Dashboard} exact path=\"/\" />\r\n          <Route component={Submission} path=\"/submission/:submissionId\" />\r\n          <Route component={Applications} path=\"/apps/:appId\" />\r\n          <Route component={Jurisdiction} path=\"/jurisdiction/:jurisdictionId\" />\r\n          <Route component={Jurisdictions} path=\"/jurisdictions\" />\r\n          <Route component={Application} path=\"/application/:applicationId\" />\r\n          <Route component={Appwiki} path=\"/application/:applicationId/howto\" />\r\n          <Route component={Apps} path=\"/manufacturers\" />\r\n          <Route component={Vendors} path=\"/manufacturer/:vendorId\" />\r\n          <Route component={test} path=\"/test\" />\r\n        </Switch>\r\n        </React.Fragment>\r\n      </Router>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n\r\n              // Execute callback\r\n              if (config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './Components/App';\r\nimport registerServiceWorker, { unregister } from './serviceWorker';\r\nimport './CSS/StyleSheet1.css'\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport 'react-pdf/dist/Page/AnnotationLayer.css';\r\nimport \"gestalt/dist/gestalt.css\";\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\n\r\nunregister();\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\nif (module.hot) {\r\n    module.hot.accept();\r\n}\r\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 62;"],"sourceRoot":""}